
==================== Asm code ====================
2018-03-16 15:53:49.609620381 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$WPositive_closure
.type GHC.Integer.Type.$WPositive_closure, @object
GHC.Integer.Type.$WPositive_closure:
	.quad	GHC.Integer.Type.$WPositive_info


==================== Asm code ====================
2018-03-16 15:53:49.61077674 UTC

.section .text
.align 8
.globl GHC.Integer.Type.$WPositive_entry
.type GHC.Integer.Type.$WPositive_entry, @object
GHC.Integer.Type.$WPositive_entry:
_c5Ls:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c5Lw
_c5Lx:
	movq $block_c5Lp_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c5Lp
_c5Lq:
	movq (%rbx),%rax
	jmp *(%rax)
_c5Lw:
	movl $GHC.Integer.Type.$WPositive_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.$WPositive_entry, .-GHC.Integer.Type.$WPositive_entry


==================== Asm code ====================
2018-03-16 15:53:49.61170082 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.$WPositive_info
.type GHC.Integer.Type.$WPositive_info, @object
GHC.Integer.Type.$WPositive_info:
	.quad	GHC.Integer.Type.$WPositive_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.61253554 UTC

.section .text
.align 8
_c5Lp:
_c5Lp:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c5LA
_c5Lz:
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5LA:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c5Lp, .-_c5Lp


==================== Asm code ====================
2018-03-16 15:53:49.613830633 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Lp_info:
	.quad	_c5Lp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.617648342 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$WNegative_closure
.type GHC.Integer.Type.$WNegative_closure, @object
GHC.Integer.Type.$WNegative_closure:
	.quad	GHC.Integer.Type.$WNegative_info


==================== Asm code ====================
2018-03-16 15:53:49.618525716 UTC

.section .text
.align 8
.globl GHC.Integer.Type.$WNegative_entry
.type GHC.Integer.Type.$WNegative_entry, @object
GHC.Integer.Type.$WNegative_entry:
_c5LT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c5LX
_c5LY:
	movq $block_c5LQ_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c5LQ
_c5LR:
	movq (%rbx),%rax
	jmp *(%rax)
_c5LX:
	movl $GHC.Integer.Type.$WNegative_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.$WNegative_entry, .-GHC.Integer.Type.$WNegative_entry


==================== Asm code ====================
2018-03-16 15:53:49.619427012 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.$WNegative_info
.type GHC.Integer.Type.$WNegative_info, @object
GHC.Integer.Type.$WNegative_info:
	.quad	GHC.Integer.Type.$WNegative_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.620201351 UTC

.section .text
.align 8
_c5LQ:
_c5LQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c5M1
_c5M0:
	movq $GHC.Integer.Type.Negative_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5M1:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c5LQ, .-_c5LQ


==================== Asm code ====================
2018-03-16 15:53:49.621106825 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5LQ_info:
	.quad	_c5LQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.625090054 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$WSome_closure
.type GHC.Integer.Type.$WSome_closure, @object
GHC.Integer.Type.$WSome_closure:
	.quad	GHC.Integer.Type.$WSome_info


==================== Asm code ====================
2018-03-16 15:53:49.626281298 UTC

.section .text
.align 8
.globl GHC.Integer.Type.$WSome_entry
.type GHC.Integer.Type.$WSome_entry, @object
GHC.Integer.Type.$WSome_entry:
_c5Mk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c5Mo
_c5Mp:
	movq $block_c5Mh_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c5Mh
_c5Mi:
	movq (%rbx),%rax
	jmp *(%rax)
_c5Mo:
	movl $GHC.Integer.Type.$WSome_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.$WSome_entry, .-GHC.Integer.Type.$WSome_entry


==================== Asm code ====================
2018-03-16 15:53:49.627047171 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.$WSome_info
.type GHC.Integer.Type.$WSome_info, @object
GHC.Integer.Type.$WSome_info:
	.quad	GHC.Integer.Type.$WSome_entry
	.quad	0
	.quad	14
	.quad	8589934605


==================== Asm code ====================
2018-03-16 15:53:49.628121509 UTC

.section .text
.align 8
_c5Mh:
_c5Mh:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c5Ms
_c5Mr:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5Ms:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c5Mh, .-_c5Mh


==================== Asm code ====================
2018-03-16 15:53:49.628994842 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Mh_info:
	.quad	_c5Mh
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.63144914 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.errorPositive_closure
.type GHC.Integer.Type.errorPositive_closure, @object
GHC.Integer.Type.errorPositive_closure:
	.quad	GHC.Integer.Type.Some_con_info
	.quad	GHC.Integer.Type.None_closure+2
	.quad	47
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:49.633612225 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.errorInteger_closure
.type GHC.Integer.Type.errorInteger_closure, @object
GHC.Integer.Type.errorInteger_closure:
	.quad	GHC.Integer.Type.Positive_con_info
	.quad	GHC.Integer.Type.errorPositive_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:49.636833842 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.wordToInteger_closure
.type GHC.Integer.Type.wordToInteger_closure, @object
GHC.Integer.Type.wordToInteger_closure:
	.quad	GHC.Integer.Type.wordToInteger_info


==================== Asm code ====================
2018-03-16 15:53:49.637996414 UTC

.section .text
.align 8
.globl GHC.Integer.Type.wordToInteger_entry
.type GHC.Integer.Type.wordToInteger_entry, @object
GHC.Integer.Type.wordToInteger_entry:
_c5MP:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c5MT
_c5MS:
	testq %r14,%r14
	je _c5MO
_c5MN:
	movq $GHC.Integer.Type.Some_con_info,-32(%r12)
	movq $GHC.Integer.Type.None_closure+2,-24(%r12)
	movq %r14,-16(%r12)
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c5MT:
	movq $40,904(%r13)
	movl $GHC.Integer.Type.wordToInteger_closure,%ebx
	jmp *-8(%r13)
_c5MO:
	addq $-40,%r12
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.wordToInteger_entry, .-GHC.Integer.Type.wordToInteger_entry


==================== Asm code ====================
2018-03-16 15:53:49.639023097 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.wordToInteger_info
.type GHC.Integer.Type.wordToInteger_info, @object
GHC.Integer.Type.wordToInteger_info:
	.quad	GHC.Integer.Type.wordToInteger_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:53:49.644029466 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.integerToWord_closure
.type GHC.Integer.Type.integerToWord_closure, @object
GHC.Integer.Type.integerToWord_closure:
	.quad	GHC.Integer.Type.integerToWord_info


==================== Asm code ====================
2018-03-16 15:53:49.644955692 UTC

.section .text
.align 8
.globl GHC.Integer.Type.integerToWord_entry
.type GHC.Integer.Type.integerToWord_entry, @object
GHC.Integer.Type.integerToWord_entry:
_c5Ng:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c5Nh
_c5Ni:
	movq $block_c5N8_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c5N8
_c5N9:
	movq (%rbx),%rax
	jmp *(%rax)
_c5Nh:
	movl $GHC.Integer.Type.integerToWord_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.integerToWord_entry, .-GHC.Integer.Type.integerToWord_entry


==================== Asm code ====================
2018-03-16 15:53:49.645956875 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.integerToWord_info
.type GHC.Integer.Type.integerToWord_info, @object
GHC.Integer.Type.integerToWord_info:
	.quad	GHC.Integer.Type.integerToWord_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.646811441 UTC

.section .text
.align 8
_c5N8:
_c5N8:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u5NT
_u5NU:
	addq $8,%rbp
	jmp _c5Ne
_u5NT:
	cmpq $2,%rax
	jb _c5Nc
_c5Nd:
	movq $block_c5NA_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _c5NA
_c5NC:
	movq (%rbx),%rax
	jmp *(%rax)
_c5Nc:
	movq $block_c5Nl_info,(%rbp)
	movq 7(%rbx),%rbx
	testb $7,%bl
	jne _c5Nl
_c5Nn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c5N8, .-_c5N8


==================== Asm code ====================
2018-03-16 15:53:49.647774803 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5N8_info:
	.quad	_c5N8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.648581757 UTC

.section .text
.align 8
_c5Nl:
_c5Nl:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c5Nt
_u5NV:
	addq $8,%rbp
	jmp _c5Ne
_c5Nt:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c5Nl, .-_c5Nl


==================== Asm code ====================
2018-03-16 15:53:49.649433648 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Nl_info:
	.quad	_c5Nl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.650210025 UTC

.section .text
.align 8
_c5NA:
_c5NA:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c5NJ
_u5NW:
	addq $8,%rbp
	jmp _c5Ne
_c5NJ:
	leaq 15(%rbx),%rax
	xorl %ebx,%ebx
	subq (%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c5NA, .-_c5NA


==================== Asm code ====================
2018-03-16 15:53:49.651028949 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5NA_info:
	.quad	_c5NA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.65177733 UTC

.section .text
.align 8
_c5Ne:
_c5Ne:
	xorl %ebx,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c5Ne, .-_c5Ne


==================== Asm code ====================
2018-03-16 15:53:49.655608301 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.integerToInt_closure
.type GHC.Integer.Type.integerToInt_closure, @object
GHC.Integer.Type.integerToInt_closure:
	.quad	GHC.Integer.Type.integerToInt_info


==================== Asm code ====================
2018-03-16 15:53:49.656502915 UTC

.section .text
.align 8
.globl GHC.Integer.Type.integerToInt_entry
.type GHC.Integer.Type.integerToInt_entry, @object
GHC.Integer.Type.integerToInt_entry:
_c5OC:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c5OG
_c5OH:
	movq $block_c5OA_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.integerToWord_entry
_c5OG:
	movl $GHC.Integer.Type.integerToInt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.integerToInt_entry, .-GHC.Integer.Type.integerToInt_entry


==================== Asm code ====================
2018-03-16 15:53:49.657468646 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.integerToInt_info
.type GHC.Integer.Type.integerToInt_info, @object
GHC.Integer.Type.integerToInt_info:
	.quad	GHC.Integer.Type.integerToInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.65820409 UTC

.section .text
.align 8
_c5OA:
_c5OA:
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c5OA, .-_c5OA


==================== Asm code ====================
2018-03-16 15:53:49.658998185 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5OA_info:
	.quad	_c5OA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.661518567 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.hashInteger_closure
.type GHC.Integer.Type.hashInteger_closure, @object
GHC.Integer.Type.hashInteger_closure:
	.quad	GHC.Integer.Type.hashInteger_info


==================== Asm code ====================
2018-03-16 15:53:49.662379907 UTC

.section .text
.align 8
.globl GHC.Integer.Type.hashInteger_entry
.type GHC.Integer.Type.hashInteger_entry, @object
GHC.Integer.Type.hashInteger_entry:
_c5OW:
	jmp GHC.Integer.Type.integerToInt_entry
	.size GHC.Integer.Type.hashInteger_entry, .-GHC.Integer.Type.hashInteger_entry


==================== Asm code ====================
2018-03-16 15:53:49.663035055 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.hashInteger_info
.type GHC.Integer.Type.hashInteger_info, @object
GHC.Integer.Type.hashInteger_info:
	.quad	GHC.Integer.Type.hashInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.667120257 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.flipBitsDigits_closure
.type GHC.Integer.Type.flipBitsDigits_closure, @object
GHC.Integer.Type.flipBitsDigits_closure:
	.quad	GHC.Integer.Type.flipBitsDigits_info


==================== Asm code ====================
2018-03-16 15:53:49.668140247 UTC

.section .text
.align 8
.globl GHC.Integer.Type.flipBitsDigits_entry
.type GHC.Integer.Type.flipBitsDigits_entry, @object
GHC.Integer.Type.flipBitsDigits_entry:
_c5Pe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c5Pf
_c5Pg:
	movq $block_c5P7_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c5P7
_c5P8:
	movq (%rbx),%rax
	jmp *(%rax)
_c5Pf:
	movl $GHC.Integer.Type.flipBitsDigits_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.flipBitsDigits_entry, .-GHC.Integer.Type.flipBitsDigits_entry


==================== Asm code ====================
2018-03-16 15:53:49.668882484 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.flipBitsDigits_info
.type GHC.Integer.Type.flipBitsDigits_info, @object
GHC.Integer.Type.flipBitsDigits_info:
	.quad	GHC.Integer.Type.flipBitsDigits_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.670169982 UTC

.section .text
.align 8
_c5P7:
_c5P7:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c5Pb
_c5Pc:
	movl $GHC.Integer.Type.None_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5Pb:
	movq $block_c5Pj_info,-8(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.flipBitsDigits_entry
	.size _c5P7, .-_c5P7


==================== Asm code ====================
2018-03-16 15:53:49.670987643 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5P7_info:
	.quad	_c5P7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.671925332 UTC

.section .text
.align 8
_c5Pj:
_c5Pj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c5Pu
_c5Pt:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	notq %rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5Pu:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c5Pj, .-_c5Pj


==================== Asm code ====================
2018-03-16 15:53:49.672585169 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Pj_info:
	.quad	_c5Pj
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.675284948 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.flipBits1_closure
.type GHC.Integer.Type.flipBits1_closure, @object
GHC.Integer.Type.flipBits1_closure:
	.quad	GHC.Integer.Type.flipBits1_info


==================== Asm code ====================
2018-03-16 15:53:49.675984647 UTC

.section .text
.align 8
.globl GHC.Integer.Type.flipBits1_entry
.type GHC.Integer.Type.flipBits1_entry, @object
GHC.Integer.Type.flipBits1_entry:
_c5PV:
	jmp GHC.Integer.Type.flipBitsDigits_entry
	.size GHC.Integer.Type.flipBits1_entry, .-GHC.Integer.Type.flipBits1_entry


==================== Asm code ====================
2018-03-16 15:53:49.676793811 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.flipBits1_info
.type GHC.Integer.Type.flipBits1_info, @object
GHC.Integer.Type.flipBits1_info:
	.quad	GHC.Integer.Type.flipBits1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.679541182 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.flipBits_closure
.type GHC.Integer.Type.flipBits_closure, @object
GHC.Integer.Type.flipBits_closure:
	.quad	GHC.Integer.Type.flipBits_info


==================== Asm code ====================
2018-03-16 15:53:49.680441336 UTC

.section .text
.align 8
.globl GHC.Integer.Type.flipBits_entry
.type GHC.Integer.Type.flipBits_entry, @object
GHC.Integer.Type.flipBits_entry:
_c5Q6:
	jmp GHC.Integer.Type.flipBits1_entry
	.size GHC.Integer.Type.flipBits_entry, .-GHC.Integer.Type.flipBits_entry


==================== Asm code ====================
2018-03-16 15:53:49.681124421 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.flipBits_info
.type GHC.Integer.Type.flipBits_info, @object
GHC.Integer.Type.flipBits_info:
	.quad	GHC.Integer.Type.flipBits_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.685982147 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.negateInteger_closure
.type GHC.Integer.Type.negateInteger_closure, @object
GHC.Integer.Type.negateInteger_closure:
	.quad	GHC.Integer.Type.negateInteger_info


==================== Asm code ====================
2018-03-16 15:53:49.68697542 UTC

.section .text
.align 8
.globl GHC.Integer.Type.negateInteger_entry
.type GHC.Integer.Type.negateInteger_entry, @object
GHC.Integer.Type.negateInteger_entry:
_c5Qp:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c5Qq
_c5Qr:
	movq $block_c5Qh_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c5Qh
_c5Qi:
	movq (%rbx),%rax
	jmp *(%rax)
_c5Qq:
	movl $GHC.Integer.Type.negateInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.negateInteger_entry, .-GHC.Integer.Type.negateInteger_entry


==================== Asm code ====================
2018-03-16 15:53:49.687795966 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.negateInteger_info
.type GHC.Integer.Type.negateInteger_info, @object
GHC.Integer.Type.negateInteger_info:
	.quad	GHC.Integer.Type.negateInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.688856825 UTC

.section .text
.align 8
_c5Qh:
_c5Qh:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u5QH
_c5Qn:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5QD:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_u5QH:
	cmpq $2,%rax
	jb _c5Ql
_c5Qm:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c5QD
_c5QC:
	movq 6(%rbx),%rax
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5Ql:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c5QD
_c5Qw:
	movq 7(%rbx),%rax
	movq $GHC.Integer.Type.Negative_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c5Qh, .-_c5Qh


==================== Asm code ====================
2018-03-16 15:53:49.689819545 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Qh_info:
	.quad	_c5Qh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.693417309 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.smallInteger_closure
.type GHC.Integer.Type.smallInteger_closure, @object
GHC.Integer.Type.smallInteger_closure:
	.quad	GHC.Integer.Type.smallInteger_info


==================== Asm code ====================
2018-03-16 15:53:49.694348247 UTC

.section .text
.align 8
.globl GHC.Integer.Type.smallInteger_entry
.type GHC.Integer.Type.smallInteger_entry, @object
GHC.Integer.Type.smallInteger_entry:
_c5R5:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c5R6
_c5R7:
	testq %r14,%r14
	jl _c5R3
_c5R4:
	jmp GHC.Integer.Type.wordToInteger_entry
_c5R6:
	movl $GHC.Integer.Type.smallInteger_closure,%ebx
	jmp *-8(%r13)
_c5R3:
	movq $block_c5Rf_info,-8(%rbp)
	negq %r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size GHC.Integer.Type.smallInteger_entry, .-GHC.Integer.Type.smallInteger_entry


==================== Asm code ====================
2018-03-16 15:53:49.695288253 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.smallInteger_info
.type GHC.Integer.Type.smallInteger_info, @object
GHC.Integer.Type.smallInteger_info:
	.quad	GHC.Integer.Type.smallInteger_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:53:49.696068355 UTC

.section .text
.align 8
_c5Rf:
_c5Rf:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
	.size _c5Rf, .-_c5Rf


==================== Asm code ====================
2018-03-16 15:53:49.696806852 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Rf_info:
	.quad	_c5Rf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.700979029 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.decodeFloatInteger_closure
.type GHC.Integer.Type.decodeFloatInteger_closure, @object
GHC.Integer.Type.decodeFloatInteger_closure:
	.quad	GHC.Integer.Type.decodeFloatInteger_info


==================== Asm code ====================
2018-03-16 15:53:49.702384143 UTC

.section .text
.align 8
sat_s3Cf_entry:
_c5RG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c5RH
_c5RI:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_c5RH:
	jmp *-16(%r13)
	.size sat_s3Cf_entry, .-sat_s3Cf_entry


==================== Asm code ====================
2018-03-16 15:53:49.703069245 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3Cf_info:
	.quad	sat_s3Cf_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:53:49.703815195 UTC

.section .text
.align 8
.globl GHC.Integer.Type.decodeFloatInteger_entry
.type GHC.Integer.Type.decodeFloatInteger_entry, @object
GHC.Integer.Type.decodeFloatInteger_entry:
_c5RJ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c5RK
_c5RL:
	movq $block_c5Ry_info,-8(%rbp)
	addq $-8,%rbp
	jmp stg_decodeFloat_Int#
_c5RK:
	movl $GHC.Integer.Type.decodeFloatInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.decodeFloatInteger_entry, .-GHC.Integer.Type.decodeFloatInteger_entry


==================== Asm code ====================
2018-03-16 15:53:49.704688937 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.decodeFloatInteger_info
.type GHC.Integer.Type.decodeFloatInteger_info, @object
GHC.Integer.Type.decodeFloatInteger_info:
	.quad	GHC.Integer.Type.decodeFloatInteger_entry
	.quad	0
	.quad	14
	.quad	4294967302


==================== Asm code ====================
2018-03-16 15:53:49.705643764 UTC

.section .text
.align 8
_c5Ry:
_c5Ry:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c5Rz
	.size _c5Ry, .-_c5Ry


==================== Asm code ====================
2018-03-16 15:53:49.706301583 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Ry_info:
	.quad	_c5Ry
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.707240959 UTC

.section .text
.align 8
_c5Rz:
_c5Rz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c5RO
_c5RN:
	movq $sat_s3Cf_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%r14
	leaq -16(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5RO:
	movq $24,904(%r13)
	movq $block_c5Rz_info,(%rbp)
	jmp stg_gc_noregs
	.size _c5Rz, .-_c5Rz


==================== Asm code ====================
2018-03-16 15:53:49.707940762 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Rz_info:
	.quad	_c5Rz
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.71176317 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.absInteger_closure
.type GHC.Integer.Type.absInteger_closure, @object
GHC.Integer.Type.absInteger_closure:
	.quad	GHC.Integer.Type.absInteger_info


==================== Asm code ====================
2018-03-16 15:53:49.712724646 UTC

.section .text
.align 8
.globl GHC.Integer.Type.absInteger_entry
.type GHC.Integer.Type.absInteger_entry, @object
GHC.Integer.Type.absInteger_entry:
_c5Sj:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c5Sk
_c5Sl:
	movq $block_c5Sc_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c5Sc
_c5Sd:
	movq (%rbx),%rax
	jmp *(%rax)
_c5Sk:
	movl $GHC.Integer.Type.absInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.absInteger_entry, .-GHC.Integer.Type.absInteger_entry


==================== Asm code ====================
2018-03-16 15:53:49.713554085 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.absInteger_info
.type GHC.Integer.Type.absInteger_info, @object
GHC.Integer.Type.absInteger_info:
	.quad	GHC.Integer.Type.absInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.714510339 UTC

.section .text
.align 8
_c5Sc:
_c5Sc:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	je _c5Sh
_c5Sg:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c5Su:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_c5Sh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c5Su
_c5St:
	movq 6(%rbx),%rax
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c5Sc, .-_c5Sc


==================== Asm code ====================
2018-03-16 15:53:49.715216812 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Sc_info:
	.quad	_c5Sc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.718089446 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.onePositive_closure
.type GHC.Integer.Type.onePositive_closure, @object
GHC.Integer.Type.onePositive_closure:
	.quad	GHC.Integer.Type.Some_con_info
	.quad	GHC.Integer.Type.None_closure+2
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:49.72026444 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.negativeOneInteger_closure
.type GHC.Integer.Type.negativeOneInteger_closure, @object
GHC.Integer.Type.negativeOneInteger_closure:
	.quad	GHC.Integer.Type.Negative_con_info
	.quad	GHC.Integer.Type.onePositive_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:49.722308954 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.oneInteger_closure
.type GHC.Integer.Type.oneInteger_closure, @object
GHC.Integer.Type.oneInteger_closure:
	.quad	GHC.Integer.Type.Positive_con_info
	.quad	GHC.Integer.Type.onePositive_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:49.726150235 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.signumInteger_closure
.type GHC.Integer.Type.signumInteger_closure, @object
GHC.Integer.Type.signumInteger_closure:
	.quad	GHC.Integer.Type.signumInteger_info


==================== Asm code ====================
2018-03-16 15:53:49.727063205 UTC

.section .text
.align 8
.globl GHC.Integer.Type.signumInteger_entry
.type GHC.Integer.Type.signumInteger_entry, @object
GHC.Integer.Type.signumInteger_entry:
_c5SZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c5T0
_c5T1:
	movq $block_c5SR_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c5SR
_c5SS:
	movq (%rbx),%rax
	jmp *(%rax)
_c5T0:
	movl $GHC.Integer.Type.signumInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.signumInteger_entry, .-GHC.Integer.Type.signumInteger_entry


==================== Asm code ====================
2018-03-16 15:53:49.727973263 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.signumInteger_info
.type GHC.Integer.Type.signumInteger_info, @object
GHC.Integer.Type.signumInteger_info:
	.quad	GHC.Integer.Type.signumInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.72878987 UTC

.section .text
.align 8
_c5SR:
_c5SR:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u5Tb
_c5SX:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u5Tb:
	cmpq $2,%rbx
	jb _c5SV
_c5SW:
	movl $GHC.Integer.Type.negativeOneInteger_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5SV:
	movl $GHC.Integer.Type.oneInteger_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c5SR, .-_c5SR


==================== Asm code ====================
2018-03-16 15:53:49.729664442 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5SR_info:
	.quad	_c5SR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.732832715 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.halfBoundUp_closure
.type GHC.Integer.Type.halfBoundUp_closure, @object
GHC.Integer.Type.halfBoundUp_closure:
	.quad	GHC.Integer.Type.halfBoundUp_info


==================== Asm code ====================
2018-03-16 15:53:49.734232815 UTC

.section .text
.align 8
.globl GHC.Integer.Type.halfBoundUp_entry
.type GHC.Integer.Type.halfBoundUp_entry, @object
GHC.Integer.Type.halfBoundUp_entry:
_c5Tx:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c5Ty
_c5Tz:
	movq $block_c5Tu_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c5Tu
_c5Tv:
	movq (%rbx),%rax
	jmp *(%rax)
_c5Ty:
	movl $GHC.Integer.Type.halfBoundUp_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.halfBoundUp_entry, .-GHC.Integer.Type.halfBoundUp_entry


==================== Asm code ====================
2018-03-16 15:53:49.735140076 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.halfBoundUp_info
.type GHC.Integer.Type.halfBoundUp_info, @object
GHC.Integer.Type.halfBoundUp_info:
	.quad	GHC.Integer.Type.halfBoundUp_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.735872955 UTC

.section .text
.align 8
_c5Tu:
_c5Tu:
	movq $-9223372036854775808,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c5Tu, .-_c5Tu


==================== Asm code ====================
2018-03-16 15:53:49.736623818 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Tu_info:
	.quad	_c5Tu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.739929191 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.fullBound_closure
.type GHC.Integer.Type.fullBound_closure, @object
GHC.Integer.Type.fullBound_closure:
	.quad	GHC.Integer.Type.fullBound_info


==================== Asm code ====================
2018-03-16 15:53:49.740823365 UTC

.section .text
.align 8
.globl GHC.Integer.Type.fullBound_entry
.type GHC.Integer.Type.fullBound_entry, @object
GHC.Integer.Type.fullBound_entry:
_c5TV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c5TW
_c5TX:
	movq $block_c5TS_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c5TS
_c5TT:
	movq (%rbx),%rax
	jmp *(%rax)
_c5TW:
	movl $GHC.Integer.Type.fullBound_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.fullBound_entry, .-GHC.Integer.Type.fullBound_entry


==================== Asm code ====================
2018-03-16 15:53:49.741863192 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.fullBound_info
.type GHC.Integer.Type.fullBound_info, @object
GHC.Integer.Type.fullBound_info:
	.quad	GHC.Integer.Type.fullBound_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.742570775 UTC

.section .text
.align 8
_c5TS:
_c5TS:
	movq $-1,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c5TS, .-_c5TS


==================== Asm code ====================
2018-03-16 15:53:49.743316426 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5TS_info:
	.quad	_c5TS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.748503852 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$wsuccPositive_closure
.type GHC.Integer.Type.$wsuccPositive_closure, @object
GHC.Integer.Type.$wsuccPositive_closure:
	.quad	GHC.Integer.Type.$wsuccPositive_info


==================== Asm code ====================
2018-03-16 15:53:49.74962395 UTC

.section .text
.align 8
.globl GHC.Integer.Type.$wsuccPositive_entry
.type GHC.Integer.Type.$wsuccPositive_entry, @object
GHC.Integer.Type.$wsuccPositive_entry:
_c5Un:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c5Uo
_c5Up:
	movq $block_c5Ug_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c5Ug
_c5Uh:
	movq (%rbx),%rax
	jmp *(%rax)
_c5Uo:
	movl $GHC.Integer.Type.$wsuccPositive_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.$wsuccPositive_entry, .-GHC.Integer.Type.$wsuccPositive_entry


==================== Asm code ====================
2018-03-16 15:53:49.750760636 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.$wsuccPositive_info
.type GHC.Integer.Type.$wsuccPositive_info, @object
GHC.Integer.Type.$wsuccPositive_info:
	.quad	GHC.Integer.Type.$wsuccPositive_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.751866744 UTC

.section .text
.align 8
_c5Ug:
_c5Ug:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c5Uk
_c5Ul:
	movl $GHC.Integer.Type.None_closure+2,%r14d
	movl $1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5Uk:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	cmpq $-1,%rbx
	jne _c5Uv
_c5UD:
	movq $block_c5Uy_info,(%rbp)
	movq %rax,%r14
	jmp GHC.Integer.Type.$wsuccPositive_entry
_c5Uv:
	movq %rax,%r14
	incq %rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c5Ug, .-_c5Ug


==================== Asm code ====================
2018-03-16 15:53:49.753014378 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Ug_info:
	.quad	_c5Ug
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.753797328 UTC

.section .text
.align 8
_c5Uy:
_c5Uy:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c5Uz
	.size _c5Uy, .-_c5Uy


==================== Asm code ====================
2018-03-16 15:53:49.754501422 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Uy_info:
	.quad	_c5Uy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.755266723 UTC

.section .text
.align 8
_c5Uz:
_c5Uz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c5UG
_c5UF:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%r14
	xorl %ebx,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5UG:
	movq $24,904(%r13)
	movq $block_c5Uz_info,(%rbp)
	jmp stg_gc_noregs
	.size _c5Uz, .-_c5Uz


==================== Asm code ====================
2018-03-16 15:53:49.756124085 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Uz_info:
	.quad	_c5Uz
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.75987183 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.succPositive_closure
.type GHC.Integer.Type.succPositive_closure, @object
GHC.Integer.Type.succPositive_closure:
	.quad	GHC.Integer.Type.succPositive_info


==================== Asm code ====================
2018-03-16 15:53:49.760807898 UTC

.section .text
.align 8
.globl GHC.Integer.Type.succPositive_entry
.type GHC.Integer.Type.succPositive_entry, @object
GHC.Integer.Type.succPositive_entry:
_c5Vj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c5Vk
_c5Vl:
	movq $block_c5Ve_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.$wsuccPositive_entry
_c5Vk:
	movl $GHC.Integer.Type.succPositive_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.succPositive_entry, .-GHC.Integer.Type.succPositive_entry


==================== Asm code ====================
2018-03-16 15:53:49.761910621 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.succPositive_info
.type GHC.Integer.Type.succPositive_info, @object
GHC.Integer.Type.succPositive_info:
	.quad	GHC.Integer.Type.succPositive_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.762761449 UTC

.section .text
.align 8
_c5Ve:
_c5Ve:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c5Vf
	.size _c5Ve, .-_c5Ve


==================== Asm code ====================
2018-03-16 15:53:49.763380687 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Ve_info:
	.quad	_c5Ve
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.764333465 UTC

.section .text
.align 8
_c5Vf:
_c5Vf:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c5Vo
_c5Vn:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5Vo:
	movq $24,904(%r13)
	movq $block_c5Vf_info,(%rbp)
	jmp stg_gc_noregs
	.size _c5Vf, .-_c5Vf


==================== Asm code ====================
2018-03-16 15:53:49.765048148 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Vf_info:
	.quad	_c5Vf
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.769129537 UTC

.section .data
.align 8
.align 1
lvl_r3Bo_closure:
	.quad	lvl_r3Bo_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:49.77014409 UTC

.section .text
.align 8
lvl_r3Bo_entry:
_c5VQ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c5VR
_c5VS:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c5VK
_c5VJ:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c5VL_info,-24(%rbp)
	movl $GHC.Integer.Type.None_closure+2,%r14d
	addq $-24,%rbp
	jmp GHC.Integer.Type.$wsuccPositive_entry
_c5VR:
	jmp *-16(%r13)
_c5VK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl_r3Bo_entry, .-lvl_r3Bo_entry


==================== Asm code ====================
2018-03-16 15:53:49.771036272 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_r3Bo_info:
	.quad	lvl_r3Bo_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:53:49.771726831 UTC

.section .text
.align 8
_c5VL:
_c5VL:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c5VM
	.size _c5VL, .-_c5VL


==================== Asm code ====================
2018-03-16 15:53:49.772526894 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5VL_info:
	.quad	_c5VL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.773413061 UTC

.section .text
.align 8
_c5VM:
_c5VM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c5VV
_c5VU:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5VV:
	movq $24,904(%r13)
	movq $block_c5VM_info,(%rbp)
	jmp stg_gc_noregs
	.size _c5VM, .-_c5VM


==================== Asm code ====================
2018-03-16 15:53:49.774294241 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5VM_info:
	.quad	_c5VM
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.786485439 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.plusPositive_addWithCarry_closure
.type GHC.Integer.Type.plusPositive_addWithCarry_closure, @object
GHC.Integer.Type.plusPositive_addWithCarry_closure:
	.quad	GHC.Integer.Type.plusPositive_addWithCarry_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:49.787527883 UTC

.section .text
.align 8
.globl GHC.Integer.Type.plusPositive_addWithCarry_entry
.type GHC.Integer.Type.plusPositive_addWithCarry_entry, @object
GHC.Integer.Type.plusPositive_addWithCarry_entry:
_c5Wp:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c5Wq
_u5YW:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c5Wf
_c5Wq:
	movl $GHC.Integer.Type.plusPositive_addWithCarry_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.plusPositive_addWithCarry_entry, .-GHC.Integer.Type.plusPositive_addWithCarry_entry


==================== Asm code ====================
2018-03-16 15:53:49.788240673 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.plusPositive_addWithCarry_info
.type GHC.Integer.Type.plusPositive_addWithCarry_info, @object
GHC.Integer.Type.plusPositive_addWithCarry_info:
	.quad	GHC.Integer.Type.plusPositive_addWithCarry_entry
	.quad	0
	.quad	12884901902
	.quad	12884901907
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.789140419 UTC

.section .text
.align 8
_c5Wf:
_c5Wf:
	movq $block_c5Wi_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c5Wi
_c5Wj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c5Wf, .-_c5Wf


==================== Asm code ====================
2018-03-16 15:53:49.79051614 UTC

.section .text
.align 8
_c5Wi:
_c5Wi:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c5Wm
_c5Wn:
	movq $block_c5Yq_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c5Yq
_c5Ys:
	movq (%rbx),%rax
	jmp *(%rax)
_c5Wm:
	movq $block_c5Wu_info,-8(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rsi,16(%rbp)
	movq %rcx,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c5Wu
_c5Ww:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c5Wi, .-_c5Wi


==================== Asm code ====================
2018-03-16 15:53:49.791306865 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Wi_info:
	.quad	_c5Wi
	.quad	195
	.quad	12884901918
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.792608829 UTC

.section .text
.align 8
_c5Wu:
_c5Wu:
	movq 16(%rbp),%rax
	movq 32(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c5Y6
_c5Yn:
	testq %rax,%rax
	je _c5Ym
_c5Yi:
	movq $block_c5Yc_info,32(%rbp)
	movq %rcx,%r14
	addq $32,%rbp
	jmp GHC.Integer.Type.$wsuccPositive_entry
_c5Ym:
	movq %rcx,%rbx
	andq $-8,%rbx
	addq $40,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c5Y6:
	movq 24(%rbp),%rdx
	movq 15(%rbx),%rsi
	cmpq %rsi,%rdx
	jae _c5Y3
_c5Y4:
	movq %rax,16(%rbp)
	movq %rbx,24(%rbp)
	movq %rcx,32(%rbp)
	addq $16,%rbp
	jmp _c5Wf
_c5Y3:
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq $-9223372036854775808,%rdi
	cmpq %rdi,%rsi
	jb _c5XF
_c5XY:
	movq $block_c5XH_info,8(%rbp)
	movq %rbx,%rdi
	movq %rsi,%rax
	movq %rcx,%rsi
	movl $1,%r14d
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
_c5XF:
	movq $-9223372036854775808,%rdi
	cmpq %rdi,%rdx
	jb _c5WW
_c5XD:
	addq %rax,%rsi
	movq $-9223372036854775808,%rax
	addq %rax,%rdx
	addq %rsi,%rdx
	movq $-9223372036854775808,%rax
	cmpq %rax,%rdx
	jae _c5Xm
_c5Xz:
	movq $block_c5Xr_info,24(%rbp)
	movq %rbx,%rdi
	movq %rcx,%rsi
	xorl %r14d,%r14d
	movq %rdx,32(%rbp)
	addq $24,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
_c5Xm:
	movq $block_c5Xd_info,24(%rbp)
	movq %rbx,%rdi
	movq %rcx,%rsi
	movl $1,%r14d
	movq %rdx,32(%rbp)
	addq $24,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
_c5WW:
	movq $block_c5WK_info,8(%rbp)
	movq %rbx,%rdi
	movq %rsi,%rax
	movq %rcx,%rsi
	xorl %r14d,%r14d
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
	.size _c5Wu, .-_c5Wu


==================== Asm code ====================
2018-03-16 15:53:49.793855151 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Wu_info:
	.quad	_c5Wu
	.quad	388
	.quad	12884901918
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.794827852 UTC

.section .text
.align 8
_c5WK:
_c5WK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c5WZ
_c5WY:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rax
	addq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	addq %rax,%rbx
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5WZ:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c5WK, .-_c5WK


==================== Asm code ====================
2018-03-16 15:53:49.795518754 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5WK_info:
	.quad	_c5WK
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.796420841 UTC

.section .text
.align 8
_c5Xd:
_c5Xd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c5Xp
_c5Xo:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq $-9223372036854775808,%rax
	movq 8(%rbp),%rbx
	addq %rax,%rbx
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5Xp:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c5Xd, .-_c5Xd


==================== Asm code ====================
2018-03-16 15:53:49.797143803 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Xd_info:
	.quad	_c5Xd
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.79810595 UTC

.section .text
.align 8
_c5Xr:
_c5Xr:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c5XC
_c5XB:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq $-9223372036854775808,%rax
	movq 8(%rbp),%rbx
	addq %rax,%rbx
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5XC:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c5Xr, .-_c5Xr


==================== Asm code ====================
2018-03-16 15:53:49.799185988 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Xr_info:
	.quad	_c5Xr
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.799946646 UTC

.section .text
.align 8
_c5XH:
_c5XH:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c5Y1
_c5Y0:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rax
	addq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	addq %rax,%rbx
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5Y1:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c5XH, .-_c5XH


==================== Asm code ====================
2018-03-16 15:53:49.800748686 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5XH_info:
	.quad	_c5XH
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.801956534 UTC

.section .text
.align 8
_c5Yc:
_c5Yc:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c5Yd
	.size _c5Yc, .-_c5Yc


==================== Asm code ====================
2018-03-16 15:53:49.803071716 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Yc_info:
	.quad	_c5Yc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.804096669 UTC

.section .text
.align 8
_c5Yd:
_c5Yd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c5Yl
_c5Yk:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5Yl:
	movq $24,904(%r13)
	movq $block_c5Yd_info,(%rbp)
	jmp stg_gc_noregs
	.size _c5Yd, .-_c5Yd


==================== Asm code ====================
2018-03-16 15:53:49.805097735 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Yd_info:
	.quad	_c5Yd
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.806176714 UTC

.section .text
.align 8
_c5Yq:
_c5Yq:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c5YL
_c5YT:
	testq %rax,%rax
	je _c5YS
_c5YR:
	movl $lvl_r3Bo_closure,%ebx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c5YS:
	movl $GHC.Integer.Type.None_closure+2,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5YJ:
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c5YL:
	testq %rax,%rax
	je _c5YJ
_c5YF:
	movq $block_c5Yz_info,24(%rbp)
	movq %rbx,%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.$wsuccPositive_entry
	.size _c5Yq, .-_c5Yq


==================== Asm code ====================
2018-03-16 15:53:49.806977357 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Yq_info:
	.quad	_c5Yq
	.quad	451
	.quad	4294967326
	.quad	S3Xx_srt+8


==================== Asm code ====================
2018-03-16 15:53:49.807813668 UTC

.section .text
.align 8
_c5Yz:
_c5Yz:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c5YA
	.size _c5Yz, .-_c5Yz


==================== Asm code ====================
2018-03-16 15:53:49.808448746 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5Yz_info:
	.quad	_c5Yz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.809397649 UTC

.section .text
.align 8
_c5YA:
_c5YA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c5YI
_c5YH:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c5YI:
	movq $24,904(%r13)
	movq $block_c5YA_info,(%rbp)
	jmp stg_gc_noregs
	.size _c5YA, .-_c5YA


==================== Asm code ====================
2018-03-16 15:53:49.810265573 UTC

.section .data.rel.ro
.align 8
.align 1
block_c5YA_info:
	.quad	_c5YA
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.813546462 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.plusPositive_closure
.type GHC.Integer.Type.plusPositive_closure, @object
GHC.Integer.Type.plusPositive_closure:
	.quad	GHC.Integer.Type.plusPositive_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:49.81427409 UTC

.section .text
.align 8
.globl GHC.Integer.Type.plusPositive_entry
.type GHC.Integer.Type.plusPositive_entry, @object
GHC.Integer.Type.plusPositive_entry:
_c60A:
	movq %rsi,%rdi
	movq %r14,%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
	.size GHC.Integer.Type.plusPositive_entry, .-GHC.Integer.Type.plusPositive_entry


==================== Asm code ====================
2018-03-16 15:53:49.815017689 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.plusPositive_info
.type GHC.Integer.Type.plusPositive_info, @object
GHC.Integer.Type.plusPositive_info:
	.quad	GHC.Integer.Type.plusPositive_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.823489476 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.minusPositive_closure
.type GHC.Integer.Type.minusPositive_closure, @object
GHC.Integer.Type.minusPositive_closure:
	.quad	GHC.Integer.Type.minusPositive_info


==================== Asm code ====================
2018-03-16 15:53:49.82438239 UTC

.section .text
.align 8
.globl GHC.Integer.Type.minusPositive_entry
.type GHC.Integer.Type.minusPositive_entry, @object
GHC.Integer.Type.minusPositive_entry:
_c60S:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c60T
_c60U:
	movq $block_c60L_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c60L
_c60M:
	movq (%rbx),%rax
	jmp *(%rax)
_c60T:
	movl $GHC.Integer.Type.minusPositive_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.minusPositive_entry, .-GHC.Integer.Type.minusPositive_entry


==================== Asm code ====================
2018-03-16 15:53:49.825226322 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.minusPositive_info
.type GHC.Integer.Type.minusPositive_info, @object
GHC.Integer.Type.minusPositive_info:
	.quad	GHC.Integer.Type.minusPositive_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:49.826282919 UTC

.section .text
.align 8
_c60L:
_c60L:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c60P
_c60Q:
	movq $block_c62b_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c62b
_c62d:
	movq (%rbx),%rax
	jmp *(%rax)
_c60P:
	movq $block_c60X_info,-16(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rdx,-8(%rbp)
	movq %rsi,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c60X
_c60Z:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c60L, .-_c60L


==================== Asm code ====================
2018-03-16 15:53:49.827004222 UTC

.section .data.rel.ro
.align 8
.align 1
block_c60L_info:
	.quad	_c60L
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.827946765 UTC

.section .text
.align 8
_c60X:
_c60X:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c624
_c628:
	movq 24(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c61P:
	movq $block_c61O_info,24(%rbp)
	movq %rdx,%rsi
	movq %rcx,%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
_c624:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	cmpq %rbx,%rax
	je _c61P
_c61M:
	cmpq %rbx,%rax
	jbe _c61t
_c61H:
	movq $block_c61z_info,8(%rbp)
	movq %rdx,%rsi
	movq %rcx,%r14
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
_c61t:
	movq $block_c61a_info,8(%rbp)
	movq %rdx,%rsi
	movq %rcx,%r14
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
	.size _c60X, .-_c60X


==================== Asm code ====================
2018-03-16 15:53:49.828863396 UTC

.section .data.rel.ro
.align 8
.align 1
block_c60X_info:
	.quad	_c60X
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.829715303 UTC

.section .text
.align 8
_c61O:
_c61O:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c61V
_u62s:
	addq $8,%rbp
	jmp _c62n
_c61Y:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c61V:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c61Y
_c61X:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq $0,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c61O, .-_c61O


==================== Asm code ====================
2018-03-16 15:53:49.830547709 UTC

.section .data.rel.ro
.align 8
.align 1
block_c61O_info:
	.quad	_c61O
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.831340019 UTC

.section .text
.align 8
_c61a:
_c61a:
	movq $block_c61e_info,(%rbp)
	movl $GHC.Integer.Type.onePositive_closure+1,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.minusPositive_entry
	.size _c61a, .-_c61a


==================== Asm code ====================
2018-03-16 15:53:49.831971614 UTC

.section .data.rel.ro
.align 8
.align 1
block_c61a_info:
	.quad	_c61a
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.83284989 UTC

.section .text
.align 8
_c61e:
_c61e:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c61x
_c61w:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	incq %rax
	movq $-1,%rbx
	subq 16(%rbp),%rbx
	addq %rax,%rbx
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c61x:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c61e, .-_c61e


==================== Asm code ====================
2018-03-16 15:53:49.833731193 UTC

.section .data.rel.ro
.align 8
.align 1
block_c61e_info:
	.quad	_c61e
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.834487969 UTC

.section .text
.align 8
_c61z:
_c61z:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c61K
_c61J:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	subq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c61K:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c61z, .-_c61z


==================== Asm code ====================
2018-03-16 15:53:49.835295132 UTC

.section .data.rel.ro
.align 8
.align 1
block_c61z_info:
	.quad	_c61z
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.836010673 UTC

.section .text
.align 8
_c62b:
_c62b:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c62j
_u62r:
	addq $8,%rbp
	jmp _c62n
_c62j:
	movl $GHC.Integer.Type.errorPositive_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c62b, .-_c62b


==================== Asm code ====================
2018-03-16 15:53:49.836809613 UTC

.section .data.rel.ro
.align 8
.align 1
block_c62b_info:
	.quad	_c62b
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.837697221 UTC

.section .text
.align 8
_c62n:
_c62n:
	movl $GHC.Integer.Type.None_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c62n, .-_c62n


==================== Asm code ====================
2018-03-16 15:53:49.840816588 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.twosComplementPositive1_closure
.type GHC.Integer.Type.twosComplementPositive1_closure, @object
GHC.Integer.Type.twosComplementPositive1_closure:
	.quad	GHC.Integer.Type.twosComplementPositive1_info


==================== Asm code ====================
2018-03-16 15:53:49.841786947 UTC

.section .text
.align 8
.globl GHC.Integer.Type.twosComplementPositive1_entry
.type GHC.Integer.Type.twosComplementPositive1_entry, @object
GHC.Integer.Type.twosComplementPositive1_entry:
_c63v:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c63w
_c63x:
	movq $block_c63t_info,-8(%rbp)
	movl $GHC.Integer.Type.onePositive_closure+1,%esi
	addq $-8,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
_c63w:
	movl $GHC.Integer.Type.twosComplementPositive1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.twosComplementPositive1_entry, .-GHC.Integer.Type.twosComplementPositive1_entry


==================== Asm code ====================
2018-03-16 15:53:49.842535472 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.twosComplementPositive1_info
.type GHC.Integer.Type.twosComplementPositive1_info, @object
GHC.Integer.Type.twosComplementPositive1_info:
	.quad	GHC.Integer.Type.twosComplementPositive1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.843290198 UTC

.section .text
.align 8
_c63t:
_c63t:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.flipBitsDigits_entry
	.size _c63t, .-_c63t


==================== Asm code ====================
2018-03-16 15:53:49.843918833 UTC

.section .data.rel.ro
.align 8
.align 1
block_c63t_info:
	.quad	_c63t
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.846850472 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.twosComplementPositive_closure
.type GHC.Integer.Type.twosComplementPositive_closure, @object
GHC.Integer.Type.twosComplementPositive_closure:
	.quad	GHC.Integer.Type.twosComplementPositive_info


==================== Asm code ====================
2018-03-16 15:53:49.847648572 UTC

.section .text
.align 8
.globl GHC.Integer.Type.twosComplementPositive_entry
.type GHC.Integer.Type.twosComplementPositive_entry, @object
GHC.Integer.Type.twosComplementPositive_entry:
_c63N:
	jmp GHC.Integer.Type.twosComplementPositive1_entry
	.size GHC.Integer.Type.twosComplementPositive_entry, .-GHC.Integer.Type.twosComplementPositive_entry


==================== Asm code ====================
2018-03-16 15:53:49.848329902 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.twosComplementPositive_info
.type GHC.Integer.Type.twosComplementPositive_info, @object
GHC.Integer.Type.twosComplementPositive_info:
	.quad	GHC.Integer.Type.twosComplementPositive_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.851612924 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.lowHalfMask_closure
.type GHC.Integer.Type.lowHalfMask_closure, @object
GHC.Integer.Type.lowHalfMask_closure:
	.quad	GHC.Integer.Type.lowHalfMask_info


==================== Asm code ====================
2018-03-16 15:53:49.852539854 UTC

.section .text
.align 8
.globl GHC.Integer.Type.lowHalfMask_entry
.type GHC.Integer.Type.lowHalfMask_entry, @object
GHC.Integer.Type.lowHalfMask_entry:
_c641:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c642
_c643:
	movq $block_c63Y_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c63Y
_c63Z:
	movq (%rbx),%rax
	jmp *(%rax)
_c642:
	movl $GHC.Integer.Type.lowHalfMask_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.lowHalfMask_entry, .-GHC.Integer.Type.lowHalfMask_entry


==================== Asm code ====================
2018-03-16 15:53:49.853305778 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.lowHalfMask_info
.type GHC.Integer.Type.lowHalfMask_info, @object
GHC.Integer.Type.lowHalfMask_info:
	.quad	GHC.Integer.Type.lowHalfMask_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.854103151 UTC

.section .text
.align 8
_c63Y:
_c63Y:
	movl $4294967295,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c63Y, .-_c63Y


==================== Asm code ====================
2018-03-16 15:53:49.854715273 UTC

.section .data.rel.ro
.align 8
.align 1
block_c63Y_info:
	.quad	_c63Y
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.858038744 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.highHalfShift_closure
.type GHC.Integer.Type.highHalfShift_closure, @object
GHC.Integer.Type.highHalfShift_closure:
	.quad	GHC.Integer.Type.highHalfShift_info


==================== Asm code ====================
2018-03-16 15:53:49.85897031 UTC

.section .text
.align 8
.globl GHC.Integer.Type.highHalfShift_entry
.type GHC.Integer.Type.highHalfShift_entry, @object
GHC.Integer.Type.highHalfShift_entry:
_c64p:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c64q
_c64r:
	movq $block_c64m_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c64m
_c64n:
	movq (%rbx),%rax
	jmp *(%rax)
_c64q:
	movl $GHC.Integer.Type.highHalfShift_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.highHalfShift_entry, .-GHC.Integer.Type.highHalfShift_entry


==================== Asm code ====================
2018-03-16 15:53:49.859631348 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.highHalfShift_info
.type GHC.Integer.Type.highHalfShift_info, @object
GHC.Integer.Type.highHalfShift_info:
	.quad	GHC.Integer.Type.highHalfShift_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.860416617 UTC

.section .text
.align 8
_c64m:
_c64m:
	movl $32,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c64m, .-_c64m


==================== Asm code ====================
2018-03-16 15:53:49.861003531 UTC

.section .data.rel.ro
.align 8
.align 1
block_c64m_info:
	.quad	_c64m
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.865195161 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.splitHalves_closure
.type GHC.Integer.Type.splitHalves_closure, @object
GHC.Integer.Type.splitHalves_closure:
	.quad	GHC.Integer.Type.splitHalves_info


==================== Asm code ====================
2018-03-16 15:53:49.866618441 UTC

.section .text
.align 8
.globl GHC.Integer.Type.splitHalves_entry
.type GHC.Integer.Type.splitHalves_entry, @object
GHC.Integer.Type.splitHalves_entry:
_c64M:
	movq %r14,%rax
	shrq $32,%rax
	movl $4294967295,%ebx
	andq %rbx,%r14
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.splitHalves_entry, .-GHC.Integer.Type.splitHalves_entry


==================== Asm code ====================
2018-03-16 15:53:49.867868892 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.splitHalves_info
.type GHC.Integer.Type.splitHalves_info, @object
GHC.Integer.Type.splitHalves_info:
	.quad	GHC.Integer.Type.splitHalves_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:53:49.875820453 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.doubleFromPositive_closure
.type GHC.Integer.Type.doubleFromPositive_closure, @object
GHC.Integer.Type.doubleFromPositive_closure:
	.quad	GHC.Integer.Type.doubleFromPositive_info


==================== Asm code ====================
2018-03-16 15:53:49.877422616 UTC

.section .text
.align 8
.globl GHC.Integer.Type.doubleFromPositive_entry
.type GHC.Integer.Type.doubleFromPositive_entry, @object
GHC.Integer.Type.doubleFromPositive_entry:
_c659:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c65a
_c65b:
	movq $block_c652_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c652
_c653:
	movq (%rbx),%rax
	jmp *(%rax)
_c65a:
	movl $GHC.Integer.Type.doubleFromPositive_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.doubleFromPositive_entry, .-GHC.Integer.Type.doubleFromPositive_entry


==================== Asm code ====================
2018-03-16 15:53:49.878796035 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.doubleFromPositive_info
.type GHC.Integer.Type.doubleFromPositive_info, @object
GHC.Integer.Type.doubleFromPositive_info:
	.quad	GHC.Integer.Type.doubleFromPositive_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.879978382 UTC

.section .text
.align 8
_c652:
_c652:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c656
_c657:
	xorpd %xmm1,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c656:
	movq $block_c65e_info,-8(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.doubleFromPositive_entry
	.size _c652, .-_c652


==================== Asm code ====================
2018-03-16 15:53:49.881290003 UTC

.section .data.rel.ro
.align 8
.align 1
block_c652_info:
	.quad	_c652
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.88344219 UTC

.section .text
.align 8
_c65e:
_c65e:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movsd _n66e(%rip),%xmm0
	movsd %xmm1,%xmm2
	movsd _n66f(%rip),%xmm1
	movq %rax,%rbx
	movl $2,%eax
	movsd %xmm2,72(%rsp)
	call pow
	addq $8,%rsp
	subq $8,%rsp
	movsd %xmm0,%xmm1
	movsd _n66g(%rip),%xmm0
	movsd %xmm1,%xmm2
	movsd _n66h(%rip),%xmm1
	movl $2,%eax
	movsd %xmm2,80(%rsp)
	call pow
	addq $8,%rsp
	movl $4294967295,%eax
	movq %rbx,%rcx
	andq %rax,%rcx
	cvtsi2sdq %rcx,%xmm1
	shrq $32,%rbx
	cvtsi2sdq %rbx,%xmm2
	movsd 72(%rsp),%xmm3
	mulsd %xmm3,%xmm2
	movsd %xmm1,%xmm4
	movsd 64(%rsp),%xmm3
	movsd %xmm3,%xmm1
	mulsd %xmm0,%xmm1
	addsd %xmm2,%xmm1
	addsd %xmm4,%xmm1
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c65e, .-_c65e
.section .rodata
.align 8
.align 8
_n66e:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.section .rodata
.align 8
.align 8
_n66f:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
	.byte	64
.section .rodata
.align 8
.align 8
_n66g:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.section .rodata
.align 8
.align 8
_n66h:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	80
	.byte	64


==================== Asm code ====================
2018-03-16 15:53:49.885085121 UTC

.section .data.rel.ro
.align 8
.align 1
block_c65e_info:
	.quad	_c65e
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.890979643 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.doubleFromInteger_closure
.type GHC.Integer.Type.doubleFromInteger_closure, @object
GHC.Integer.Type.doubleFromInteger_closure:
	.quad	GHC.Integer.Type.doubleFromInteger_info


==================== Asm code ====================
2018-03-16 15:53:49.892413449 UTC

.section .text
.align 8
.globl GHC.Integer.Type.doubleFromInteger_entry
.type GHC.Integer.Type.doubleFromInteger_entry, @object
GHC.Integer.Type.doubleFromInteger_entry:
_c66H:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c66I
_c66J:
	movq $block_c66z_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c66z
_c66A:
	movq (%rbx),%rax
	jmp *(%rax)
_c66I:
	movl $GHC.Integer.Type.doubleFromInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.doubleFromInteger_entry, .-GHC.Integer.Type.doubleFromInteger_entry


==================== Asm code ====================
2018-03-16 15:53:49.893962842 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.doubleFromInteger_info
.type GHC.Integer.Type.doubleFromInteger_info, @object
GHC.Integer.Type.doubleFromInteger_info:
	.quad	GHC.Integer.Type.doubleFromInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.895390829 UTC

.section .text
.align 8
_c66z:
_c66z:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u66Z
_c66F:
	xorpd %xmm1,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u66Z:
	cmpq $2,%rax
	jb _c66D
_c66E:
	movq $block_c66P_info,(%rbp)
	movq 6(%rbx),%r14
	jmp GHC.Integer.Type.doubleFromPositive_entry
_c66D:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.doubleFromPositive_entry
	.size _c66z, .-_c66z


==================== Asm code ====================
2018-03-16 15:53:49.896636709 UTC

.section .data.rel.ro
.align 8
.align 1
block_c66z_info:
	.quad	_c66z
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.897774827 UTC

.section .text
.align 8
_c66P:
_c66P:
	movsd _n67d(%rip),%xmm0
	xorpd %xmm0,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c66P, .-_c66P
.section .rodata
.align 8
.align 8
_n67d:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:53:49.898863582 UTC

.section .data.rel.ro
.align 8
.align 1
block_c66P_info:
	.quad	_c66P
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.906424669 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.floatFromPositive_closure
.type GHC.Integer.Type.floatFromPositive_closure, @object
GHC.Integer.Type.floatFromPositive_closure:
	.quad	GHC.Integer.Type.floatFromPositive_info


==================== Asm code ====================
2018-03-16 15:53:49.90793334 UTC

.section .text
.align 8
.globl GHC.Integer.Type.floatFromPositive_entry
.type GHC.Integer.Type.floatFromPositive_entry, @object
GHC.Integer.Type.floatFromPositive_entry:
_c67t:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c67u
_c67v:
	movq $block_c67m_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c67m
_c67n:
	movq (%rbx),%rax
	jmp *(%rax)
_c67u:
	movl $GHC.Integer.Type.floatFromPositive_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.floatFromPositive_entry, .-GHC.Integer.Type.floatFromPositive_entry


==================== Asm code ====================
2018-03-16 15:53:49.909190013 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.floatFromPositive_info
.type GHC.Integer.Type.floatFromPositive_info, @object
GHC.Integer.Type.floatFromPositive_info:
	.quad	GHC.Integer.Type.floatFromPositive_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.910393948 UTC

.section .text
.align 8
_c67m:
_c67m:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c67q
_c67r:
	xorps %xmm1,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c67q:
	movq $block_c67y_info,-8(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.floatFromPositive_entry
	.size _c67m, .-_c67m


==================== Asm code ====================
2018-03-16 15:53:49.911651165 UTC

.section .data.rel.ro
.align 8
.align 1
block_c67m_info:
	.quad	_c67m
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.913350336 UTC

.section .text
.align 8
_c67y:
_c67y:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movss _n68y(%rip),%xmm0
	movsd %xmm1,%xmm2
	movss _n68z(%rip),%xmm1
	movq %rax,%rbx
	movl $2,%eax
	movsd %xmm2,72(%rsp)
	call powf
	addq $8,%rsp
	subq $8,%rsp
	movsd %xmm0,%xmm1
	movss _n68A(%rip),%xmm0
	movsd %xmm1,%xmm2
	movss _n68B(%rip),%xmm1
	movl $2,%eax
	movsd %xmm2,80(%rsp)
	call powf
	addq $8,%rsp
	movl $4294967295,%eax
	movq %rbx,%rcx
	andq %rax,%rcx
	cvtsi2ssq %rcx,%xmm1
	shrq $32,%rbx
	cvtsi2ssq %rbx,%xmm2
	movsd 72(%rsp),%xmm3
	mulss %xmm3,%xmm2
	movsd %xmm1,%xmm4
	movsd 64(%rsp),%xmm3
	movss %xmm3,%xmm1
	mulss %xmm0,%xmm1
	addss %xmm2,%xmm1
	addss %xmm4,%xmm1
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c67y, .-_c67y
.section .rodata
.align 8
.align 4
_n68y:
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.section .rodata
.align 8
.align 4
_n68z:
	.byte	0
	.byte	0
	.byte	0
	.byte	66
.section .rodata
.align 8
.align 4
_n68A:
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.section .rodata
.align 8
.align 4
_n68B:
	.byte	0
	.byte	0
	.byte	128
	.byte	66


==================== Asm code ====================
2018-03-16 15:53:49.914876638 UTC

.section .data.rel.ro
.align 8
.align 1
block_c67y_info:
	.quad	_c67y
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.921042768 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.floatFromInteger_closure
.type GHC.Integer.Type.floatFromInteger_closure, @object
GHC.Integer.Type.floatFromInteger_closure:
	.quad	GHC.Integer.Type.floatFromInteger_info


==================== Asm code ====================
2018-03-16 15:53:49.922683362 UTC

.section .text
.align 8
.globl GHC.Integer.Type.floatFromInteger_entry
.type GHC.Integer.Type.floatFromInteger_entry, @object
GHC.Integer.Type.floatFromInteger_entry:
_c691:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c692
_c693:
	movq $block_c68T_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c68T
_c68U:
	movq (%rbx),%rax
	jmp *(%rax)
_c692:
	movl $GHC.Integer.Type.floatFromInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.floatFromInteger_entry, .-GHC.Integer.Type.floatFromInteger_entry


==================== Asm code ====================
2018-03-16 15:53:49.923796117 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.floatFromInteger_info
.type GHC.Integer.Type.floatFromInteger_info, @object
GHC.Integer.Type.floatFromInteger_info:
	.quad	GHC.Integer.Type.floatFromInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:49.925454952 UTC

.section .text
.align 8
_c68T:
_c68T:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u69j
_c68Z:
	xorps %xmm1,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u69j:
	cmpq $2,%rax
	jb _c68X
_c68Y:
	movq $block_c699_info,(%rbp)
	movq 6(%rbx),%r14
	jmp GHC.Integer.Type.floatFromPositive_entry
_c68X:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.floatFromPositive_entry
	.size _c68T, .-_c68T


==================== Asm code ====================
2018-03-16 15:53:49.926693313 UTC

.section .data.rel.ro
.align 8
.align 1
block_c68T_info:
	.quad	_c68T
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.927980107 UTC

.section .text
.align 8
_c699:
_c699:
	movss _n69x(%rip),%xmm0
	xorps %xmm0,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c699, .-_c699
.section .rodata
.align 8
.align 4
_n69x:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:53:49.928909902 UTC

.section .data.rel.ro
.align 8
.align 1
block_c699_info:
	.quad	_c699
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.93873021 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.timesDigit_closure
.type GHC.Integer.Type.timesDigit_closure, @object
GHC.Integer.Type.timesDigit_closure:
	.quad	GHC.Integer.Type.timesDigit_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:49.940675384 UTC

.section .text
.align 8
.globl GHC.Integer.Type.timesDigit_entry
.type GHC.Integer.Type.timesDigit_entry, @object
GHC.Integer.Type.timesDigit_entry:
_c69I:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c6am
_c6an:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c6ap
_c6ao:
	movq $GHC.Integer.Type.Some_con_info,-64(%r12)
	movq $GHC.Integer.Type.None_closure+2,-56(%r12)
	movl $4294967295,%eax
	movq %rsi,%rbx
	andq %rax,%rbx
	movl $4294967295,%eax
	movq %r14,%rcx
	andq %rax,%rcx
	movq %rcx,%rax
	imulq %rbx,%rax
	movq %rax,-48(%r12)
	movq $GHC.Integer.Type.Some_con_info,-40(%r12)
	movq $GHC.Integer.Type.None_closure+2,-32(%r12)
	shrq $32,%rsi
	imulq %rsi,%rcx
	movl $4294967295,%eax
	movq %rcx,%rdx
	andq %rax,%rdx
	shlq $32,%rdx
	movq %rdx,-24(%r12)
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq $GHC.Integer.Type.None_closure+2,-8(%r12)
	shrq $32,%r14
	movq %r14,%rax
	imulq %rbx,%rax
	movl $4294967295,%ebx
	movq %rax,%rdx
	andq %rbx,%rdx
	shlq $32,%rdx
	movq %rdx,(%r12)
	movq $block_c6ah_info,-48(%rbp)
	leaq -39(%r12),%rdi
	movq %rsi,%rbx
	leaq -15(%r12),%rsi
	movq %r14,%rdx
	xorl %r14d,%r14d
	leaq -63(%r12),%r8
	movq %r8,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
_c6ap:
	movq $72,904(%r13)
_c6am:
	movl $GHC.Integer.Type.timesDigit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.timesDigit_entry, .-GHC.Integer.Type.timesDigit_entry


==================== Asm code ====================
2018-03-16 15:53:49.942608339 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.timesDigit_info
.type GHC.Integer.Type.timesDigit_info, @object
GHC.Integer.Type.timesDigit_info:
	.quad	GHC.Integer.Type.timesDigit_entry
	.quad	0
	.quad	21474836494
	.quad	8589934604
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.943785277 UTC

.section .text
.align 8
_c6ah:
_c6ah:
	movq 8(%rbp),%rax
	movq $block_c6al_info,8(%rbp)
	movq %rax,%rdi
	movq %rbx,%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
	.size _c6ah, .-_c6ah


==================== Asm code ====================
2018-03-16 15:53:49.94496518 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6ah_info:
	.quad	_c6ah
	.quad	1925
	.quad	4294967326
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.9464295 UTC

.section .text
.align 8
_c6al:
_c6al:
	movq 32(%rbp),%rax
	shrq $32,%rax
	movq 16(%rbp),%rcx
	shrq $32,%rcx
	addq %rax,%rcx
	movq 8(%rbp),%rax
	imulq 24(%rbp),%rax
	addq %rcx,%rax
	testq %rax,%rax
	je _c6aW
_u6b0:
	movq %rax,24(%rbp)
	movq %rbx,32(%rbp)
	addq $24,%rbp
	jmp _c6aL
_c6aW:
	andq $-8,%rbx
	addq $40,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6al, .-_c6al


==================== Asm code ====================
2018-03-16 15:53:49.947445655 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6al_info:
	.quad	_c6al
	.quad	964
	.quad	4294967326
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.948927192 UTC

.section .text
.align 8
_c6aL:
_c6aL:
	addq $48,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c6aT
_c6aS:
	movq $GHC.Integer.Type.Some_con_info,-40(%r12)
	movq $GHC.Integer.Type.None_closure+2,-32(%r12)
	movq %rax,-24(%r12)
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	movq $0,(%r12)
	movq 8(%rbp),%rdi
	leaq -15(%r12),%rsi
	xorl %r14d,%r14d
	addq $16,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
_c6aT:
	movq $48,904(%r13)
	movq $block_c6aK_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unbx_r1
	.size _c6aL, .-_c6aL


==================== Asm code ====================
2018-03-16 15:53:49.950068016 UTC

.section .text
.align 8
_c6aK:
_c6aK:
	movq %rbx,(%rbp)
	jmp _c6aL
	.size _c6aK, .-_c6aK


==================== Asm code ====================
2018-03-16 15:53:49.950773988 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6aK_info:
	.quad	_c6aK
	.quad	1
	.quad	4294967326
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.962111602 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.timesPositive_closure
.type GHC.Integer.Type.timesPositive_closure, @object
GHC.Integer.Type.timesPositive_closure:
	.quad	GHC.Integer.Type.timesPositive_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:49.963173211 UTC

.section .text
.align 8
.globl GHC.Integer.Type.timesPositive_entry
.type GHC.Integer.Type.timesPositive_entry, @object
GHC.Integer.Type.timesPositive_entry:
_c6bS:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c6bT
_u6dC:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c6bI
_c6bT:
	movl $GHC.Integer.Type.timesPositive_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.timesPositive_entry, .-GHC.Integer.Type.timesPositive_entry


==================== Asm code ====================
2018-03-16 15:53:49.963973462 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.timesPositive_info
.type GHC.Integer.Type.timesPositive_info, @object
GHC.Integer.Type.timesPositive_info:
	.quad	GHC.Integer.Type.timesPositive_entry
	.quad	0
	.quad	55834574862
	.quad	8589934607
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.96472575 UTC

.section .text
.align 8
_c6bI:
_c6bI:
	movq (%rbp),%rax
	movq $block_c6bL_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c6bL
_c6bM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6bI, .-_c6bI


==================== Asm code ====================
2018-03-16 15:53:49.965809979 UTC

.section .text
.align 8
_c6bL:
_c6bL:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c6bP
_c6bQ:
	movq $block_c6dr_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c6dr
_c6dt:
	movq (%rbx),%rax
	jmp *(%rax)
_c6bP:
	movq $block_c6bX_info,-16(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rdx,-8(%rbp)
	movq %rsi,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c6bX
_c6bZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6bL, .-_c6bL


==================== Asm code ====================
2018-03-16 15:53:49.966691954 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6bL_info:
	.quad	_c6bL
	.quad	1
	.quad	55834574878
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.967590902 UTC

.section .text
.align 8
_c6bX:
_c6bX:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6c6
_c6do:
	movl $GHC.Integer.Type.errorPositive_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6c6:
	movq $block_c6c3_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rcx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c6c3
_c6c7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6bX, .-_c6bX


==================== Asm code ====================
2018-03-16 15:53:49.968426033 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6bX_info:
	.quad	_c6bX
	.quad	131
	.quad	55834574878
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.969431344 UTC

.section .text
.align 8
_c6c3:
_c6c3:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c6ce
_c6d9:
	movq $block_c6d7_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c6d7
_c6da:
	movq (%rbx),%rax
	jmp *(%rax)
_c6ce:
	movq $block_c6cb_info,8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,40(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c6cb
_c6cf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6c3, .-_c6c3


==================== Asm code ====================
2018-03-16 15:53:49.970247236 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6c3_info:
	.quad	_c6c3
	.quad	645
	.quad	55834574878
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.971256482 UTC

.section .text
.align 8
_c6cb:
_c6cb:
	movq 16(%rbp),%rax
	movq 32(%rbp),%rcx
	andl $7,%ebx
	cmpq $1,%rbx
	je _c6cs
_c6d4:
	movq 24(%rbp),%rbx
	testq %rbx,%rbx
	jne _c6cM
_c6d0:
	movq $block_c6cV_info,32(%rbp)
	movq %rax,%rsi
	movq %rcx,%r14
	addq $32,%rbp
	jmp GHC.Integer.Type.timesPositive_entry
_c6cM:
	movq $block_c6cF_info,(%rbp)
	movq %rax,%rsi
	movq %rcx,%r14
	movq %rbx,32(%rbp)
	jmp GHC.Integer.Type.timesPositive_entry
_c6cs:
	movq $block_c6cj_info,8(%rbp)
	movq %rax,%rsi
	movq %rcx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesPositive_entry
	.size _c6cb, .-_c6cb


==================== Asm code ====================
2018-03-16 15:53:49.971985489 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6cb_info:
	.quad	_c6cb
	.quad	324
	.quad	55834574878
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.972905158 UTC

.section .text
.align 8
_c6cj:
_c6cj:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c6cv
_c6cu:
	movq $GHC.Integer.Type.Some_con_info,-40(%r12)
	movq %rbx,-32(%r12)
	movq $0,-24(%r12)
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq $GHC.Integer.Type.None_closure+2,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c6cp_info,16(%rbp)
	movq 8(%rbp),%rsi
	leaq -15(%r12),%r14
	leaq -39(%r12),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp GHC.Integer.Type.timesPositive_entry
_c6cv:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6cj, .-_c6cj


==================== Asm code ====================
2018-03-16 15:53:49.973844871 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6cj_info:
	.quad	_c6cj
	.quad	387
	.quad	38654705694
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.974639511 UTC

.section .text
.align 8
_c6cp:
_c6cp:
	movq 8(%rbp),%rdi
	movq %rbx,%rsi
	xorl %r14d,%r14d
	addq $16,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
	.size _c6cp, .-_c6cp


==================== Asm code ====================
2018-03-16 15:53:49.975369028 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6cp_info:
	.quad	_c6cp
	.quad	1
	.quad	4294967326
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.976210289 UTC

.section .text
.align 8
_c6cF:
_c6cF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6cP
_c6cO:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq $0,(%r12)
	movq $block_c6cK_info,24(%rbp)
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	leaq -15(%r12),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp GHC.Integer.Type.timesDigit_entry
_c6cP:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6cF, .-_c6cF


==================== Asm code ====================
2018-03-16 15:53:49.977013914 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6cF_info:
	.quad	_c6cF
	.quad	964
	.quad	21474836510
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.977835057 UTC

.section .text
.align 8
_c6cK:
_c6cK:
	movq 8(%rbp),%rdi
	movq %rbx,%rsi
	xorl %r14d,%r14d
	addq $16,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
	.size _c6cK, .-_c6cK


==================== Asm code ====================
2018-03-16 15:53:49.978591124 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6cK_info:
	.quad	_c6cK
	.quad	1
	.quad	4294967326
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.979471257 UTC

.section .text
.align 8
_c6cV:
_c6cV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6d3
_c6d2:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq $0,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6d3:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6cV, .-_c6cV


==================== Asm code ====================
2018-03-16 15:53:49.980274897 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6cV_info:
	.quad	_c6cV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.981139176 UTC

.section .text
.align 8
_c6d7:
_c6d7:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c6dg
_c6dk:
	movq 8(%rbp),%rsi
	movq 24(%rbp),%r14
	addq $40,%rbp
	jmp GHC.Integer.Type.timesDigit_entry
_c6dg:
	movq 16(%rbp),%rax
	movq %rax,24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp _c6bI
	.size _c6d7, .-_c6d7


==================== Asm code ====================
2018-03-16 15:53:49.981828491 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6d7_info:
	.quad	_c6d7
	.quad	324
	.quad	55834574878
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:49.982618711 UTC

.section .text
.align 8
_c6dr:
_c6dr:
	movl $GHC.Integer.Type.errorPositive_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6dr, .-_c6dr


==================== Asm code ====================
2018-03-16 15:53:49.983327117 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6dr_info:
	.quad	_c6dr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:49.992129416 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.timesInteger_closure
.type GHC.Integer.Type.timesInteger_closure, @object
GHC.Integer.Type.timesInteger_closure:
	.quad	GHC.Integer.Type.timesInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:49.993311621 UTC

.section .text
.align 8
.globl GHC.Integer.Type.timesInteger_entry
.type GHC.Integer.Type.timesInteger_entry, @object
GHC.Integer.Type.timesInteger_entry:
_c6f0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6f1
_c6f2:
	movq $block_c6eS_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c6eS
_c6eT:
	movq (%rbx),%rax
	jmp *(%rax)
_c6f1:
	movl $GHC.Integer.Type.timesInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.timesInteger_entry, .-GHC.Integer.Type.timesInteger_entry


==================== Asm code ====================
2018-03-16 15:53:49.994175945 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.timesInteger_info
.type GHC.Integer.Type.timesInteger_info, @object
GHC.Integer.Type.timesInteger_info:
	.quad	GHC.Integer.Type.timesInteger_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3Xx_srt+24


==================== Asm code ====================
2018-03-16 15:53:49.995192591 UTC

.section .text
.align 8
_c6eS:
_c6eS:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u6gm
_c6eY:
	movq $block_c6gd_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c6gd
_c6gf:
	movq (%rbx),%rax
	jmp *(%rax)
_u6gm:
	cmpq $2,%rcx
	jb _c6eW
_c6eX:
	movq $block_c6fE_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c6fE
_c6fG:
	movq (%rbx),%rax
	jmp *(%rax)
_c6eW:
	movq $block_c6f5_info,(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c6f5
_c6f7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6eS, .-_c6eS


==================== Asm code ====================
2018-03-16 15:53:49.996089695 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6eS_info:
	.quad	_c6eS
	.quad	1
	.quad	4294967326
	.quad	S3Xx_srt+24


==================== Asm code ====================
2018-03-16 15:53:49.997057924 UTC

.section .text
.align 8
_c6f5:
_c6f5:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u6gn
_u6gp:
	addq $16,%rbp
	jmp _c6ga
_u6gn:
	movq 8(%rbp),%rcx
	cmpq $2,%rax
	jb _c6fi
_c6fu:
	movq $block_c6fo_info,8(%rbp)
	movq 6(%rbx),%rsi
	movq %rcx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesPositive_entry
_c6fi:
	movq $block_c6fb_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rcx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesPositive_entry
	.size _c6f5, .-_c6f5


==================== Asm code ====================
2018-03-16 15:53:49.998278388 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6f5_info:
	.quad	_c6f5
	.quad	1
	.quad	4294967326
	.quad	S3Xx_srt+24


==================== Asm code ====================
2018-03-16 15:53:49.999478258 UTC

.section .text
.align 8
_c6fb:
_c6fb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6fl
_c6fk:
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6fl:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6fb, .-_c6fb


==================== Asm code ====================
2018-03-16 15:53:50.000531204 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6fb_info:
	.quad	_c6fb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.00173074 UTC

.section .text
.align 8
_c6fo:
_c6fo:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6fx
_c6fw:
	movq $GHC.Integer.Type.Negative_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6fx:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6fo, .-_c6fo


==================== Asm code ====================
2018-03-16 15:53:50.002667308 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6fo_info:
	.quad	_c6fo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.003752274 UTC

.section .text
.align 8
_c6fE:
_c6fE:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u6go
_u6gq:
	addq $16,%rbp
	jmp _c6ga
_u6go:
	movq 8(%rbp),%rcx
	cmpq $2,%rax
	jb _c6fR
_c6g3:
	movq $block_c6fX_info,8(%rbp)
	movq 6(%rbx),%rsi
	movq %rcx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesPositive_entry
_c6fR:
	movq $block_c6fK_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rcx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesPositive_entry
	.size _c6fE, .-_c6fE


==================== Asm code ====================
2018-03-16 15:53:50.004819509 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6fE_info:
	.quad	_c6fE
	.quad	1
	.quad	4294967326
	.quad	S3Xx_srt+24


==================== Asm code ====================
2018-03-16 15:53:50.0060162 UTC

.section .text
.align 8
_c6fK:
_c6fK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6fU
_c6fT:
	movq $GHC.Integer.Type.Negative_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6fU:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6fK, .-_c6fK


==================== Asm code ====================
2018-03-16 15:53:50.006838728 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6fK_info:
	.quad	_c6fK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.007999931 UTC

.section .text
.align 8
_c6fX:
_c6fX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6g6
_c6g5:
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6g6:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6fX, .-_c6fX


==================== Asm code ====================
2018-03-16 15:53:50.009029785 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6fX_info:
	.quad	_c6fX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.01014439 UTC

.section .text
.align 8
_c6ga:
_c6ga:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6ga, .-_c6ga


==================== Asm code ====================
2018-03-16 15:53:50.011116715 UTC

.section .text
.align 8
_c6gd:
_c6gd:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6gd, .-_c6gd


==================== Asm code ====================
2018-03-16 15:53:50.011976858 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6gd_info:
	.quad	_c6gd
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.014725757 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.twoToTheThirtytwoPositive_closure
.type GHC.Integer.Type.twoToTheThirtytwoPositive_closure, @object
GHC.Integer.Type.twoToTheThirtytwoPositive_closure:
	.quad	GHC.Integer.Type.Some_con_info
	.quad	GHC.Integer.Type.None_closure+2
	.quad	4294967296
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:50.017950352 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.twoToTheThirtytwoInteger_closure
.type GHC.Integer.Type.twoToTheThirtytwoInteger_closure, @object
GHC.Integer.Type.twoToTheThirtytwoInteger_closure:
	.quad	GHC.Integer.Type.Positive_con_info
	.quad	GHC.Integer.Type.twoToTheThirtytwoPositive_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:50.022213646 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.digitsMaybeZeroToInteger_closure
.type GHC.Integer.Type.digitsMaybeZeroToInteger_closure, @object
GHC.Integer.Type.digitsMaybeZeroToInteger_closure:
	.quad	GHC.Integer.Type.digitsMaybeZeroToInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.023535007 UTC

.section .text
.align 8
.globl GHC.Integer.Type.digitsMaybeZeroToInteger_entry
.type GHC.Integer.Type.digitsMaybeZeroToInteger_entry, @object
GHC.Integer.Type.digitsMaybeZeroToInteger_entry:
_c6hs:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6ht
_c6hu:
	movq $block_c6hl_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c6hl
_c6hm:
	movq (%rbx),%rax
	jmp *(%rax)
_c6ht:
	movl $GHC.Integer.Type.digitsMaybeZeroToInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.digitsMaybeZeroToInteger_entry, .-GHC.Integer.Type.digitsMaybeZeroToInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.024514242 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.digitsMaybeZeroToInteger_info
.type GHC.Integer.Type.digitsMaybeZeroToInteger_info, @object
GHC.Integer.Type.digitsMaybeZeroToInteger_info:
	.quad	GHC.Integer.Type.digitsMaybeZeroToInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:50.027813168 UTC

.section .text
.align 8
_c6hl:
_c6hl:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6hp
_c6hq:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6hA:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_c6hp:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6hA
_c6hz:
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6hl, .-_c6hl


==================== Asm code ====================
2018-03-16 15:53:50.029396297 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6hl_info:
	.quad	_c6hl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.035226478 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.removeZeroTails_closure
.type GHC.Integer.Type.removeZeroTails_closure, @object
GHC.Integer.Type.removeZeroTails_closure:
	.quad	GHC.Integer.Type.removeZeroTails_info


==================== Asm code ====================
2018-03-16 15:53:50.036240098 UTC

.section .text
.align 8
.globl GHC.Integer.Type.removeZeroTails_entry
.type GHC.Integer.Type.removeZeroTails_entry, @object
GHC.Integer.Type.removeZeroTails_entry:
_c6i3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6i4
_c6i5:
	movq $block_c6hW_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c6hW
_c6hX:
	movq (%rbx),%rax
	jmp *(%rax)
_c6i4:
	movl $GHC.Integer.Type.removeZeroTails_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.removeZeroTails_entry, .-GHC.Integer.Type.removeZeroTails_entry


==================== Asm code ====================
2018-03-16 15:53:50.037088784 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.removeZeroTails_info
.type GHC.Integer.Type.removeZeroTails_info, @object
GHC.Integer.Type.removeZeroTails_info:
	.quad	GHC.Integer.Type.removeZeroTails_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:50.038500827 UTC

.section .text
.align 8
_c6hW:
_c6hW:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6i0
_u6iF:
	addq $8,%rbp
	jmp _c6i1
_c6i0:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	testq %rbx,%rbx
	jne _c6ih
_c6in:
	movq $block_c6im_info,(%rbp)
	movq %rax,%r14
	jmp GHC.Integer.Type.removeZeroTails_entry
_c6ih:
	movq $block_c6ib_info,-8(%rbp)
	movq %rax,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.removeZeroTails_entry
	.size _c6hW, .-_c6hW


==================== Asm code ====================
2018-03-16 15:53:50.039428109 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6hW_info:
	.quad	_c6hW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.040320909 UTC

.section .text
.align 8
_c6ib:
_c6ib:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6ik
_c6ij:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6ik:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6ib, .-_c6ib


==================== Asm code ====================
2018-03-16 15:53:50.041323214 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6ib_info:
	.quad	_c6ib
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.042204963 UTC

.section .text
.align 8
_c6im:
_c6im:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6it
_u6iG:
	addq $8,%rbp
	jmp _c6i1
_c6iw:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c6it:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6iw
_c6iv:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq $0,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6im, .-_c6im


==================== Asm code ====================
2018-03-16 15:53:50.042964319 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6im_info:
	.quad	_c6im
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.043777359 UTC

.section .text
.align 8
_c6i1:
_c6i1:
	movl $GHC.Integer.Type.None_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6i1, .-_c6i1


==================== Asm code ====================
2018-03-16 15:53:50.048013025 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.digitsToNegativeInteger_closure
.type GHC.Integer.Type.digitsToNegativeInteger_closure, @object
GHC.Integer.Type.digitsToNegativeInteger_closure:
	.quad	GHC.Integer.Type.digitsToNegativeInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.048878289 UTC

.section .text
.align 8
.globl GHC.Integer.Type.digitsToNegativeInteger_entry
.type GHC.Integer.Type.digitsToNegativeInteger_entry, @object
GHC.Integer.Type.digitsToNegativeInteger_entry:
_c6jj:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6jk
_c6jl:
	movq $block_c6jd_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.removeZeroTails_entry
_c6jk:
	movl $GHC.Integer.Type.digitsToNegativeInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.digitsToNegativeInteger_entry, .-GHC.Integer.Type.digitsToNegativeInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.049751641 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.digitsToNegativeInteger_info
.type GHC.Integer.Type.digitsToNegativeInteger_info, @object
GHC.Integer.Type.digitsToNegativeInteger_info:
	.quad	GHC.Integer.Type.digitsToNegativeInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:50.050727642 UTC

.section .text
.align 8
_c6jd:
_c6jd:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6jg
_c6jh:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6jr:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_c6jg:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6jr
_c6jq:
	movq $GHC.Integer.Type.Negative_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6jd, .-_c6jd


==================== Asm code ====================
2018-03-16 15:53:50.051885342 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6jd_info:
	.quad	_c6jd
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.055810196 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.digitsToInteger_closure
.type GHC.Integer.Type.digitsToInteger_closure, @object
GHC.Integer.Type.digitsToInteger_closure:
	.quad	GHC.Integer.Type.digitsToInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.056715098 UTC

.section .text
.align 8
.globl GHC.Integer.Type.digitsToInteger_entry
.type GHC.Integer.Type.digitsToInteger_entry, @object
GHC.Integer.Type.digitsToInteger_entry:
_c6jR:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6jS
_c6jT:
	movq $block_c6jL_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.removeZeroTails_entry
_c6jS:
	movl $GHC.Integer.Type.digitsToInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.digitsToInteger_entry, .-GHC.Integer.Type.digitsToInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.057606283 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.digitsToInteger_info
.type GHC.Integer.Type.digitsToInteger_info, @object
GHC.Integer.Type.digitsToInteger_info:
	.quad	GHC.Integer.Type.digitsToInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:50.058726005 UTC

.section .text
.align 8
_c6jL:
_c6jL:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6jO
_c6jP:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6jZ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_c6jO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6jZ
_c6jY:
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6jL, .-_c6jL


==================== Asm code ====================
2018-03-16 15:53:50.059554481 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6jL_info:
	.quad	_c6jL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.066792618 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.comparePositive_closure
.type GHC.Integer.Type.comparePositive_closure, @object
GHC.Integer.Type.comparePositive_closure:
	.quad	GHC.Integer.Type.comparePositive_info


==================== Asm code ====================
2018-03-16 15:53:50.067856037 UTC

.section .text
.align 8
.globl GHC.Integer.Type.comparePositive_entry
.type GHC.Integer.Type.comparePositive_entry, @object
GHC.Integer.Type.comparePositive_entry:
_c6kq:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c6kr
_c6ks:
	movq $block_c6kj_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c6kj
_c6kk:
	movq (%rbx),%rax
	jmp *(%rax)
_c6kr:
	movl $GHC.Integer.Type.comparePositive_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.comparePositive_entry, .-GHC.Integer.Type.comparePositive_entry


==================== Asm code ====================
2018-03-16 15:53:50.068863592 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.comparePositive_info
.type GHC.Integer.Type.comparePositive_info, @object
GHC.Integer.Type.comparePositive_info:
	.quad	GHC.Integer.Type.comparePositive_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.069945638 UTC

.section .text
.align 8
_c6kj:
_c6kj:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c6kn
_c6ko:
	movq $block_c6l6_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c6l6
_c6l8:
	movq (%rbx),%rax
	jmp *(%rax)
_c6kn:
	movq $block_c6kv_info,-8(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %rdx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c6kv
_c6kx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6kj, .-_c6kj


==================== Asm code ====================
2018-03-16 15:53:50.070962184 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6kj_info:
	.quad	_c6kj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.071809953 UTC

.section .text
.align 8
_c6kv:
_c6kv:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6kE
_u6lo:
	addq $24,%rbp
	jmp _c6l3
_c6kE:
	movq $block_c6kB_info,(%rbp)
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.Integer.Type.comparePositive_entry
	.size _c6kv, .-_c6kv


==================== Asm code ====================
2018-03-16 15:53:50.073607692 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6kv_info:
	.quad	_c6kv
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.075131461 UTC

.section .text
.align 8
_c6kB:
_c6kB:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	je _c6kZ
_c6kK:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u6lr:
	addq $24,%rbp
	jmp _c6li
_c6kX:
	cmpq %rcx,%rax
	jbe _u6lr
_u6lq:
	addq $24,%rbp
	jmp _c6l3
_c6kZ:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	cmpq %rcx,%rax
	jae _c6kX
_u6lp:
	addq $24,%rbp
	jmp _c6le
	.size _c6kB, .-_c6kB


==================== Asm code ====================
2018-03-16 15:53:50.076503708 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6kB_info:
	.quad	_c6kB
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.077700474 UTC

.section .text
.align 8
_c6l3:
_c6l3:
	movl $GHC.Types.GT_closure+3,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6l3, .-_c6l3


==================== Asm code ====================
2018-03-16 15:53:50.079036153 UTC

.section .text
.align 8
_c6l6:
_c6l6:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u6lm
_u6ln:
	addq $8,%rbp
	jmp _c6li
_u6lm:
	addq $8,%rbp
	jmp _c6le
	.size _c6l6, .-_c6l6


==================== Asm code ====================
2018-03-16 15:53:50.080346948 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6l6_info:
	.quad	_c6l6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.08161133 UTC

.section .text
.align 8
_c6le:
_c6le:
	movl $GHC.Types.LT_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6le, .-_c6le


==================== Asm code ====================
2018-03-16 15:53:50.082789384 UTC

.section .text
.align 8
_c6li:
_c6li:
	movl $GHC.Types.EQ_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6li, .-_c6li


==================== Asm code ====================
2018-03-16 15:53:50.093342187 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.compareInteger_closure
.type GHC.Integer.Type.compareInteger_closure, @object
GHC.Integer.Type.compareInteger_closure:
	.quad	GHC.Integer.Type.compareInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.094810299 UTC

.section .text
.align 8
.globl GHC.Integer.Type.compareInteger_entry
.type GHC.Integer.Type.compareInteger_entry, @object
GHC.Integer.Type.compareInteger_entry:
_c6mr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6ms
_c6mt:
	movq $block_c6mj_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c6mj
_c6mk:
	movq (%rbx),%rax
	jmp *(%rax)
_c6ms:
	movl $GHC.Integer.Type.compareInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.compareInteger_entry, .-GHC.Integer.Type.compareInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.096180632 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.compareInteger_info
.type GHC.Integer.Type.compareInteger_info, @object
GHC.Integer.Type.compareInteger_info:
	.quad	GHC.Integer.Type.compareInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.097763719 UTC

.section .text
.align 8
_c6mj:
_c6mj:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u6nk
_c6mp:
	movq $block_c6n0_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c6n0
_c6n2:
	movq (%rbx),%rax
	jmp *(%rax)
_u6nk:
	cmpq $2,%rcx
	jb _c6mn
_c6mo:
	movq $block_c6mL_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c6mL
_c6mN:
	movq (%rbx),%rax
	jmp *(%rax)
_c6mn:
	movq $block_c6mw_info,(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c6mw
_c6my:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6mj, .-_c6mj


==================== Asm code ====================
2018-03-16 15:53:50.099475362 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6mj_info:
	.quad	_c6mj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.100910566 UTC

.section .text
.align 8
_c6mw:
_c6mw:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6mI
_u6nm:
	addq $16,%rbp
	jmp _c6nc
_c6mI:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.comparePositive_entry
	.size _c6mw, .-_c6mw


==================== Asm code ====================
2018-03-16 15:53:50.10233056 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6mw_info:
	.quad	_c6mw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.103552858 UTC

.section .text
.align 8
_c6mL:
_c6mL:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	je _c6mX
_u6nn:
	addq $16,%rbp
	jmp _c6n8
_c6mX:
	movq 8(%rbp),%rsi
	movq 6(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.comparePositive_entry
	.size _c6mL, .-_c6mL


==================== Asm code ====================
2018-03-16 15:53:50.1046543 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6mL_info:
	.quad	_c6mL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.10603248 UTC

.section .text
.align 8
_c6n0:
_c6n0:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u6nl
_c6ng:
	movl $GHC.Types.EQ_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u6np:
	addq $8,%rbp
	jmp _c6n8
_u6nl:
	cmpq $2,%rbx
	jb _u6np
_u6no:
	addq $8,%rbp
	jmp _c6nc
	.size _c6n0, .-_c6n0


==================== Asm code ====================
2018-03-16 15:53:50.106875945 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6n0_info:
	.quad	_c6n0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.107645442 UTC

.section .text
.align 8
_c6n8:
_c6n8:
	movl $GHC.Types.LT_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6n8, .-_c6n8


==================== Asm code ====================
2018-03-16 15:53:50.108718226 UTC

.section .text
.align 8
_c6nc:
_c6nc:
	movl $GHC.Types.GT_closure+3,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6nc, .-_c6nc


==================== Asm code ====================
2018-03-16 15:53:50.113104485 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.eqInteger#_closure
.type GHC.Integer.Type.eqInteger#_closure, @object
GHC.Integer.Type.eqInteger#_closure:
	.quad	GHC.Integer.Type.eqInteger#_info


==================== Asm code ====================
2018-03-16 15:53:50.11439253 UTC

.section .text
.align 8
.globl GHC.Integer.Type.eqInteger#_entry
.type GHC.Integer.Type.eqInteger#_entry, @object
GHC.Integer.Type.eqInteger#_entry:
_c6og:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6oh
_c6oi:
	movq $block_c6oa_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.compareInteger_entry
_c6oh:
	movl $GHC.Integer.Type.eqInteger#_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.eqInteger#_entry, .-GHC.Integer.Type.eqInteger#_entry


==================== Asm code ====================
2018-03-16 15:53:50.115459943 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.eqInteger#_info
.type GHC.Integer.Type.eqInteger#_info, @object
GHC.Integer.Type.eqInteger#_info:
	.quad	GHC.Integer.Type.eqInteger#_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.116792059 UTC

.section .text
.align 8
_c6oa:
_c6oa:
	andl $7,%ebx
	cmpq $2,%rbx
	je _c6oe
_c6od:
	xorl %ebx,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6oe:
	movl $1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6oa, .-_c6oa


==================== Asm code ====================
2018-03-16 15:53:50.117626146 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6oa_info:
	.quad	_c6oa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.12288742 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.eqInteger_closure
.type GHC.Integer.Type.eqInteger_closure, @object
GHC.Integer.Type.eqInteger_closure:
	.quad	GHC.Integer.Type.eqInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.123949958 UTC

.section .text
.align 8
.globl GHC.Integer.Type.eqInteger_entry
.type GHC.Integer.Type.eqInteger_entry, @object
GHC.Integer.Type.eqInteger_entry:
_c6oH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6oI
_c6oJ:
	movq $block_c6oF_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c6oI:
	movl $GHC.Integer.Type.eqInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.eqInteger_entry, .-GHC.Integer.Type.eqInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.124707221 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.eqInteger_info
.type GHC.Integer.Type.eqInteger_info, @object
GHC.Integer.Type.eqInteger_info:
	.quad	GHC.Integer.Type.eqInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.125719341 UTC

.section .text
.align 8
_c6oF:
_c6oF:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl(%rbx),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6oF, .-_c6oF


==================== Asm code ====================
2018-03-16 15:53:50.126588426 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6oF_info:
	.quad	_c6oF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.130956204 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.neqInteger#_closure
.type GHC.Integer.Type.neqInteger#_closure, @object
GHC.Integer.Type.neqInteger#_closure:
	.quad	GHC.Integer.Type.neqInteger#_info


==================== Asm code ====================
2018-03-16 15:53:50.132064554 UTC

.section .text
.align 8
.globl GHC.Integer.Type.neqInteger#_entry
.type GHC.Integer.Type.neqInteger#_entry, @object
GHC.Integer.Type.neqInteger#_entry:
_c6p7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6p8
_c6p9:
	movq $block_c6p1_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.compareInteger_entry
_c6p8:
	movl $GHC.Integer.Type.neqInteger#_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.neqInteger#_entry, .-GHC.Integer.Type.neqInteger#_entry


==================== Asm code ====================
2018-03-16 15:53:50.133220639 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.neqInteger#_info
.type GHC.Integer.Type.neqInteger#_info, @object
GHC.Integer.Type.neqInteger#_info:
	.quad	GHC.Integer.Type.neqInteger#_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.188066533 UTC

.section .text
.align 8
_c6p1:
_c6p1:
	andl $7,%ebx
	cmpq $2,%rbx
	je _c6p5
_c6p4:
	movl $1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6p5:
	xorl %ebx,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6p1, .-_c6p1


==================== Asm code ====================
2018-03-16 15:53:50.191116535 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6p1_info:
	.quad	_c6p1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.198990125 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.neqInteger_closure
.type GHC.Integer.Type.neqInteger_closure, @object
GHC.Integer.Type.neqInteger_closure:
	.quad	GHC.Integer.Type.neqInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.200545059 UTC

.section .text
.align 8
.globl GHC.Integer.Type.neqInteger_entry
.type GHC.Integer.Type.neqInteger_entry, @object
GHC.Integer.Type.neqInteger_entry:
_c6py:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6pz
_c6pA:
	movq $block_c6pw_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.neqInteger#_entry
_c6pz:
	movl $GHC.Integer.Type.neqInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.neqInteger_entry, .-GHC.Integer.Type.neqInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.202014215 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.neqInteger_info
.type GHC.Integer.Type.neqInteger_info, @object
GHC.Integer.Type.neqInteger_info:
	.quad	GHC.Integer.Type.neqInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.2029533 UTC

.section .text
.align 8
_c6pw:
_c6pw:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl(%rbx),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6pw, .-_c6pw


==================== Asm code ====================
2018-03-16 15:53:50.203942059 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6pw_info:
	.quad	_c6pw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.20724702 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$fEqInteger_closure
.type GHC.Integer.Type.$fEqInteger_closure, @object
GHC.Integer.Type.$fEqInteger_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.Integer.Type.eqInteger_closure+2
	.quad	GHC.Integer.Type.neqInteger_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:50.212346468 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.ltInteger#_closure
.type GHC.Integer.Type.ltInteger#_closure, @object
GHC.Integer.Type.ltInteger#_closure:
	.quad	GHC.Integer.Type.ltInteger#_info


==================== Asm code ====================
2018-03-16 15:53:50.213632057 UTC

.section .text
.align 8
.globl GHC.Integer.Type.ltInteger#_entry
.type GHC.Integer.Type.ltInteger#_entry, @object
GHC.Integer.Type.ltInteger#_entry:
_c6pZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6q0
_c6q1:
	movq $block_c6pT_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.compareInteger_entry
_c6q0:
	movl $GHC.Integer.Type.ltInteger#_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.ltInteger#_entry, .-GHC.Integer.Type.ltInteger#_entry


==================== Asm code ====================
2018-03-16 15:53:50.214421678 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.ltInteger#_info
.type GHC.Integer.Type.ltInteger#_info, @object
GHC.Integer.Type.ltInteger#_info:
	.quad	GHC.Integer.Type.ltInteger#_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.215316224 UTC

.section .text
.align 8
_c6pT:
_c6pT:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c6pX
_c6pW:
	xorl %ebx,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6pX:
	movl $1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6pT, .-_c6pT


==================== Asm code ====================
2018-03-16 15:53:50.216054372 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6pT_info:
	.quad	_c6pT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.219818428 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.ltInteger_closure
.type GHC.Integer.Type.ltInteger_closure, @object
GHC.Integer.Type.ltInteger_closure:
	.quad	GHC.Integer.Type.ltInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.221109789 UTC

.section .text
.align 8
.globl GHC.Integer.Type.ltInteger_entry
.type GHC.Integer.Type.ltInteger_entry, @object
GHC.Integer.Type.ltInteger_entry:
_c6qq:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6qr
_c6qs:
	movq $block_c6qo_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.ltInteger#_entry
_c6qr:
	movl $GHC.Integer.Type.ltInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.ltInteger_entry, .-GHC.Integer.Type.ltInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.22201716 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.ltInteger_info
.type GHC.Integer.Type.ltInteger_info, @object
GHC.Integer.Type.ltInteger_info:
	.quad	GHC.Integer.Type.ltInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.222945008 UTC

.section .text
.align 8
_c6qo:
_c6qo:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl(%rbx),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6qo, .-_c6qo


==================== Asm code ====================
2018-03-16 15:53:50.223590975 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6qo_info:
	.quad	_c6qo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.227944207 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.gtInteger#_closure
.type GHC.Integer.Type.gtInteger#_closure, @object
GHC.Integer.Type.gtInteger#_closure:
	.quad	GHC.Integer.Type.gtInteger#_info


==================== Asm code ====================
2018-03-16 15:53:50.228936434 UTC

.section .text
.align 8
.globl GHC.Integer.Type.gtInteger#_entry
.type GHC.Integer.Type.gtInteger#_entry, @object
GHC.Integer.Type.gtInteger#_entry:
_c6qQ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6qR
_c6qS:
	movq $block_c6qK_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.compareInteger_entry
_c6qR:
	movl $GHC.Integer.Type.gtInteger#_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.gtInteger#_entry, .-GHC.Integer.Type.gtInteger#_entry


==================== Asm code ====================
2018-03-16 15:53:50.230100582 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.gtInteger#_info
.type GHC.Integer.Type.gtInteger#_info, @object
GHC.Integer.Type.gtInteger#_info:
	.quad	GHC.Integer.Type.gtInteger#_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.231036191 UTC

.section .text
.align 8
_c6qK:
_c6qK:
	andl $7,%ebx
	cmpq $3,%rbx
	je _c6qO
_c6qN:
	xorl %ebx,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6qO:
	movl $1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6qK, .-_c6qK


==================== Asm code ====================
2018-03-16 15:53:50.231728743 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6qK_info:
	.quad	_c6qK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.235283077 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.gtInteger_closure
.type GHC.Integer.Type.gtInteger_closure, @object
GHC.Integer.Type.gtInteger_closure:
	.quad	GHC.Integer.Type.gtInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.236197505 UTC

.section .text
.align 8
.globl GHC.Integer.Type.gtInteger_entry
.type GHC.Integer.Type.gtInteger_entry, @object
GHC.Integer.Type.gtInteger_entry:
_c6rh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6ri
_c6rj:
	movq $block_c6rf_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.gtInteger#_entry
_c6ri:
	movl $GHC.Integer.Type.gtInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.gtInteger_entry, .-GHC.Integer.Type.gtInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.236991485 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.gtInteger_info
.type GHC.Integer.Type.gtInteger_info, @object
GHC.Integer.Type.gtInteger_info:
	.quad	GHC.Integer.Type.gtInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.237861376 UTC

.section .text
.align 8
_c6rf:
_c6rf:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl(%rbx),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6rf, .-_c6rf


==================== Asm code ====================
2018-03-16 15:53:50.238591652 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6rf_info:
	.quad	_c6rf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.242320528 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.leInteger#_closure
.type GHC.Integer.Type.leInteger#_closure, @object
GHC.Integer.Type.leInteger#_closure:
	.quad	GHC.Integer.Type.leInteger#_info


==================== Asm code ====================
2018-03-16 15:53:50.243890406 UTC

.section .text
.align 8
.globl GHC.Integer.Type.leInteger#_entry
.type GHC.Integer.Type.leInteger#_entry, @object
GHC.Integer.Type.leInteger#_entry:
_c6rH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6rI
_c6rJ:
	movq $block_c6rB_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.compareInteger_entry
_c6rI:
	movl $GHC.Integer.Type.leInteger#_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.leInteger#_entry, .-GHC.Integer.Type.leInteger#_entry


==================== Asm code ====================
2018-03-16 15:53:50.244829695 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.leInteger#_info
.type GHC.Integer.Type.leInteger#_info, @object
GHC.Integer.Type.leInteger#_info:
	.quad	GHC.Integer.Type.leInteger#_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.246051071 UTC

.section .text
.align 8
_c6rB:
_c6rB:
	andl $7,%ebx
	cmpq $3,%rbx
	je _c6rF
_c6rE:
	movl $1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6rF:
	xorl %ebx,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6rB, .-_c6rB


==================== Asm code ====================
2018-03-16 15:53:50.246875046 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6rB_info:
	.quad	_c6rB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.250223231 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.leInteger_closure
.type GHC.Integer.Type.leInteger_closure, @object
GHC.Integer.Type.leInteger_closure:
	.quad	GHC.Integer.Type.leInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.25117315 UTC

.section .text
.align 8
.globl GHC.Integer.Type.leInteger_entry
.type GHC.Integer.Type.leInteger_entry, @object
GHC.Integer.Type.leInteger_entry:
_c6s8:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6s9
_c6sa:
	movq $block_c6s6_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.leInteger#_entry
_c6s9:
	movl $GHC.Integer.Type.leInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.leInteger_entry, .-GHC.Integer.Type.leInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.251933171 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.leInteger_info
.type GHC.Integer.Type.leInteger_info, @object
GHC.Integer.Type.leInteger_info:
	.quad	GHC.Integer.Type.leInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.252781533 UTC

.section .text
.align 8
_c6s6:
_c6s6:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl(%rbx),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6s6, .-_c6s6


==================== Asm code ====================
2018-03-16 15:53:50.254195649 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6s6_info:
	.quad	_c6s6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.258095904 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.geInteger#_closure
.type GHC.Integer.Type.geInteger#_closure, @object
GHC.Integer.Type.geInteger#_closure:
	.quad	GHC.Integer.Type.geInteger#_info


==================== Asm code ====================
2018-03-16 15:53:50.25898843 UTC

.section .text
.align 8
.globl GHC.Integer.Type.geInteger#_entry
.type GHC.Integer.Type.geInteger#_entry, @object
GHC.Integer.Type.geInteger#_entry:
_c6sy:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6sz
_c6sA:
	movq $block_c6ss_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.compareInteger_entry
_c6sz:
	movl $GHC.Integer.Type.geInteger#_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.geInteger#_entry, .-GHC.Integer.Type.geInteger#_entry


==================== Asm code ====================
2018-03-16 15:53:50.259741643 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.geInteger#_info
.type GHC.Integer.Type.geInteger#_info, @object
GHC.Integer.Type.geInteger#_info:
	.quad	GHC.Integer.Type.geInteger#_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.260565272 UTC

.section .text
.align 8
_c6ss:
_c6ss:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c6sw
_c6sv:
	movl $1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6sw:
	xorl %ebx,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6ss, .-_c6ss


==================== Asm code ====================
2018-03-16 15:53:50.26118284 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6ss_info:
	.quad	_c6ss
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.264336983 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.geInteger_closure
.type GHC.Integer.Type.geInteger_closure, @object
GHC.Integer.Type.geInteger_closure:
	.quad	GHC.Integer.Type.geInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.265657295 UTC

.section .text
.align 8
.globl GHC.Integer.Type.geInteger_entry
.type GHC.Integer.Type.geInteger_entry, @object
GHC.Integer.Type.geInteger_entry:
_c6sZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6t0
_c6t1:
	movq $block_c6sX_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.geInteger#_entry
_c6t0:
	movl $GHC.Integer.Type.geInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.geInteger_entry, .-GHC.Integer.Type.geInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.266421076 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.geInteger_info
.type GHC.Integer.Type.geInteger_info, @object
GHC.Integer.Type.geInteger_info:
	.quad	GHC.Integer.Type.geInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.267254458 UTC

.section .text
.align 8
_c6sX:
_c6sX:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl(%rbx),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6sX, .-_c6sX


==================== Asm code ====================
2018-03-16 15:53:50.268126743 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6sX_info:
	.quad	_c6sX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.27213773 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$fOrdInteger_$cmax_closure
.type GHC.Integer.Type.$fOrdInteger_$cmax_closure, @object
GHC.Integer.Type.$fOrdInteger_$cmax_closure:
	.quad	GHC.Integer.Type.$fOrdInteger_$cmax_info


==================== Asm code ====================
2018-03-16 15:53:50.273097326 UTC

.section .text
.align 8
.globl GHC.Integer.Type.$fOrdInteger_$cmax_entry
.type GHC.Integer.Type.$fOrdInteger_$cmax_entry, @object
GHC.Integer.Type.$fOrdInteger_$cmax_entry:
_c6to:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c6tp
_c6tq:
	movq $block_c6tj_info,-24(%rbp)
	movq %rsi,%rax
	movq %r14,%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.leInteger#_entry
_c6tp:
	movl $GHC.Integer.Type.$fOrdInteger_$cmax_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.$fOrdInteger_$cmax_entry, .-GHC.Integer.Type.$fOrdInteger_$cmax_entry


==================== Asm code ====================
2018-03-16 15:53:50.273960406 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.$fOrdInteger_$cmax_info
.type GHC.Integer.Type.$fOrdInteger_$cmax_info, @object
GHC.Integer.Type.$fOrdInteger_$cmax_info:
	.quad	GHC.Integer.Type.$fOrdInteger_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.274791115 UTC

.section .text
.align 8
_c6tj:
_c6tj:
	cmpq $1,%rbx
	je _c6tn
_c6tm:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c6tn:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6tj, .-_c6tj


==================== Asm code ====================
2018-03-16 15:53:50.275528553 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6tj_info:
	.quad	_c6tj
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.27962186 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$fOrdInteger_$cmin_closure
.type GHC.Integer.Type.$fOrdInteger_$cmin_closure, @object
GHC.Integer.Type.$fOrdInteger_$cmin_closure:
	.quad	GHC.Integer.Type.$fOrdInteger_$cmin_info


==================== Asm code ====================
2018-03-16 15:53:50.280753927 UTC

.section .text
.align 8
.globl GHC.Integer.Type.$fOrdInteger_$cmin_entry
.type GHC.Integer.Type.$fOrdInteger_$cmin_entry, @object
GHC.Integer.Type.$fOrdInteger_$cmin_entry:
_c6tS:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c6tT
_c6tU:
	movq $block_c6tN_info,-24(%rbp)
	movq %rsi,%rax
	movq %r14,%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.leInteger#_entry
_c6tT:
	movl $GHC.Integer.Type.$fOrdInteger_$cmin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.$fOrdInteger_$cmin_entry, .-GHC.Integer.Type.$fOrdInteger_$cmin_entry


==================== Asm code ====================
2018-03-16 15:53:50.281984921 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.$fOrdInteger_$cmin_info
.type GHC.Integer.Type.$fOrdInteger_$cmin_info, @object
GHC.Integer.Type.$fOrdInteger_$cmin_info:
	.quad	GHC.Integer.Type.$fOrdInteger_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.283237922 UTC

.section .text
.align 8
_c6tN:
_c6tN:
	cmpq $1,%rbx
	je _c6tR
_c6tQ:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c6tR:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6tN, .-_c6tN


==================== Asm code ====================
2018-03-16 15:53:50.283988683 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6tN_info:
	.quad	_c6tN
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.28660104 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$fOrdInteger_closure
.type GHC.Integer.Type.$fOrdInteger_closure, @object
GHC.Integer.Type.$fOrdInteger_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.Integer.Type.$fEqInteger_closure+1
	.quad	GHC.Integer.Type.compareInteger_closure+2
	.quad	GHC.Integer.Type.ltInteger_closure+2
	.quad	GHC.Integer.Type.leInteger_closure+2
	.quad	GHC.Integer.Type.gtInteger_closure+2
	.quad	GHC.Integer.Type.geInteger_closure+2
	.quad	GHC.Integer.Type.$fOrdInteger_$cmax_closure+2
	.quad	GHC.Integer.Type.$fOrdInteger_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:50.299844598 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.plusInteger_closure
.type GHC.Integer.Type.plusInteger_closure, @object
GHC.Integer.Type.plusInteger_closure:
	.quad	GHC.Integer.Type.plusInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:50.301723 UTC

.section .text
.align 8
.globl GHC.Integer.Type.plusInteger_entry
.type GHC.Integer.Type.plusInteger_entry, @object
GHC.Integer.Type.plusInteger_entry:
_c6uq:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c6ur
_u6w0:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c6uf
_c6ur:
	movl $GHC.Integer.Type.plusInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.plusInteger_entry, .-GHC.Integer.Type.plusInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.30267984 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.plusInteger_info
.type GHC.Integer.Type.plusInteger_info, @object
GHC.Integer.Type.plusInteger_info:
	.quad	GHC.Integer.Type.plusInteger_entry
	.quad	0
	.quad	141733920782
	.quad	8589934607
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:50.303724934 UTC

.section .text
.align 8
_c6uf:
_c6uf:
	movq (%rbp),%rax
	movq $block_c6ui_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c6ui
_c6uj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6uf, .-_c6uf


==================== Asm code ====================
2018-03-16 15:53:50.305133982 UTC

.section .text
.align 8
_c6ui:
_c6ui:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u6vW
_c6uo:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u6vW:
	cmpq $2,%rcx
	jb _c6um
_c6un:
	movq $block_c6vr_info,-8(%rbp)
	movq %rbx,%rcx
	movq 6(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c6vr
_c6vt:
	movq (%rbx),%rax
	jmp *(%rax)
_c6um:
	movq $block_c6uv_info,-8(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c6uv
_c6ux:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6ui, .-_c6ui


==================== Asm code ====================
2018-03-16 15:53:50.306576775 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6ui_info:
	.quad	_c6ui
	.quad	1
	.quad	4294967326
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:50.307683588 UTC

.section .text
.align 8
_c6uv:
_c6uv:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u6vX
_u6w1:
	addq $16,%rbp
	jmp _c6vP
_u6vX:
	movq 8(%rbp),%rcx
	cmpq $2,%rax
	jb _c6uI
_c6uQ:
	movq $block_c6uO_info,(%rbp)
	movq 6(%rbx),%rax
	movq %rax,%rsi
	movq %rcx,%r14
	movq %rax,16(%rbp)
	jmp GHC.Integer.Type.comparePositive_entry
_c6uI:
	movq $block_c6uB_info,16(%rbp)
	movq 7(%rbx),%rdi
	movq %rcx,%rsi
	xorl %r14d,%r14d
	addq $16,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
	.size _c6uv, .-_c6uv


==================== Asm code ====================
2018-03-16 15:53:50.308661713 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6uv_info:
	.quad	_c6uv
	.quad	2
	.quad	4294967326
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:50.309617563 UTC

.section .text
.align 8
_c6uB:
_c6uB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6uL
_c6uK:
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6uL:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6uB, .-_c6uB


==================== Asm code ====================
2018-03-16 15:53:50.310329759 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6uB_info:
	.quad	_c6uB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.311191401 UTC

.section .text
.align 8
_c6uO:
_c6uO:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u6vY
_c6vh:
	movq $block_c6vb_info,16(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
_u6vY:
	cmpq $2,%rbx
	jb _c6v1
_c6v8:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6v1:
	movq $block_c6uU_info,16(%rbp)
	movq %rax,%rsi
	movq %rcx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
	.size _c6uO, .-_c6uO


==================== Asm code ====================
2018-03-16 15:53:50.311995428 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6uO_info:
	.quad	_c6uO
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.313207743 UTC

.section .text
.align 8
_c6uU:
_c6uU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6v4
_c6v3:
	movq $GHC.Integer.Type.Negative_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6v4:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6uU, .-_c6uU


==================== Asm code ====================
2018-03-16 15:53:50.314243343 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6uU_info:
	.quad	_c6uU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.315032549 UTC

.section .text
.align 8
_c6vb:
_c6vb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6vk
_c6vj:
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6vk:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6vb, .-_c6vb


==================== Asm code ====================
2018-03-16 15:53:50.315710355 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6vb_info:
	.quad	_c6vb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.316511335 UTC

.section .text
.align 8
_c6vr:
_c6vr:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u6vZ
_u6w2:
	addq $16,%rbp
	jmp _c6vP
_u6vZ:
	cmpq $2,%rax
	jb _c6vz
_c6vI:
	movq $block_c6vC_info,16(%rbp)
	movq 6(%rbx),%rdi
	movq 8(%rbp),%rsi
	xorl %r14d,%r14d
	addq $16,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
_c6vz:
	movq %rbx,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c6uf
	.size _c6vr, .-_c6vr


==================== Asm code ====================
2018-03-16 15:53:50.317237007 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6vr_info:
	.quad	_c6vr
	.quad	2
	.quad	4294967326
	.quad	S3Xx_srt


==================== Asm code ====================
2018-03-16 15:53:50.318162925 UTC

.section .text
.align 8
_c6vC:
_c6vC:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6vL
_c6vK:
	movq $GHC.Integer.Type.Negative_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6vL:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6vC, .-_c6vC


==================== Asm code ====================
2018-03-16 15:53:50.31880638 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6vC_info:
	.quad	_c6vC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.319522814 UTC

.section .text
.align 8
_c6vP:
_c6vP:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6vP, .-_c6vP


==================== Asm code ====================
2018-03-16 15:53:50.322879064 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.minusInteger_closure
.type GHC.Integer.Type.minusInteger_closure, @object
GHC.Integer.Type.minusInteger_closure:
	.quad	GHC.Integer.Type.minusInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:50.324113574 UTC

.section .text
.align 8
.globl GHC.Integer.Type.minusInteger_entry
.type GHC.Integer.Type.minusInteger_entry, @object
GHC.Integer.Type.minusInteger_entry:
_c6x5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6x6
_c6x7:
	movq $block_c6x3_info,-16(%rbp)
	movq %r14,%rax
	movq %rsi,%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
_c6x6:
	movl $GHC.Integer.Type.minusInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.minusInteger_entry, .-GHC.Integer.Type.minusInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.324839739 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.minusInteger_info
.type GHC.Integer.Type.minusInteger_info, @object
GHC.Integer.Type.minusInteger_info:
	.quad	GHC.Integer.Type.minusInteger_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3Xx_srt+40


==================== Asm code ====================
2018-03-16 15:53:50.325660769 UTC

.section .text
.align 8
_c6x3:
_c6x3:
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
	.size _c6x3, .-_c6x3


==================== Asm code ====================
2018-03-16 15:53:50.326334353 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6x3_info:
	.quad	_c6x3
	.quad	1
	.quad	4294967326
	.quad	S3Xx_srt+40


==================== Asm code ====================
2018-03-16 15:53:50.329204593 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.complementInteger_closure
.type GHC.Integer.Type.complementInteger_closure, @object
GHC.Integer.Type.complementInteger_closure:
	.quad	GHC.Integer.Type.complementInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:50.33017004 UTC

.section .text
.align 8
.globl GHC.Integer.Type.complementInteger_entry
.type GHC.Integer.Type.complementInteger_entry, @object
GHC.Integer.Type.complementInteger_entry:
_c6xn:
	movq %r14,%rsi
	movl $GHC.Integer.Type.negativeOneInteger_closure+2,%r14d
	jmp GHC.Integer.Type.minusInteger_entry
	.size GHC.Integer.Type.complementInteger_entry, .-GHC.Integer.Type.complementInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.330846457 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.complementInteger_info
.type GHC.Integer.Type.complementInteger_info, @object
GHC.Integer.Type.complementInteger_info:
	.quad	GHC.Integer.Type.complementInteger_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S3Xx_srt+48


==================== Asm code ====================
2018-03-16 15:53:50.337835441 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.decodeDoubleInteger_closure
.type GHC.Integer.Type.decodeDoubleInteger_closure, @object
GHC.Integer.Type.decodeDoubleInteger_closure:
	.quad	GHC.Integer.Type.decodeDoubleInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:50.33885467 UTC

.section .text
.align 8
sat_s3HC_entry:
_c6xI:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c6xY
_c6xZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c6xG_info,-40(%rbp)
	movq 32(%rbx),%r14
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
_c6xY:
	jmp *-16(%r13)
	.size sat_s3HC_entry, .-sat_s3HC_entry


==================== Asm code ====================
2018-03-16 15:53:50.339599764 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3HC_info:
	.quad	sat_s3HC_entry
	.quad	12884901888
	.quad	12884901903
	.quad	S3Xx_srt+32


==================== Asm code ====================
2018-03-16 15:53:50.340345433 UTC

.section .text
.align 8
_c6xG:
_c6xG:
	movq $block_c6xL_info,(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,16(%rbp)
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _c6xG, .-_c6xG


==================== Asm code ====================
2018-03-16 15:53:50.341112017 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6xG_info:
	.quad	_c6xG
	.quad	194
	.quad	12884901918
	.quad	S3Xx_srt+32


==================== Asm code ====================
2018-03-16 15:53:50.342205886 UTC

.section .text
.align 8
_c6xL:
_c6xL:
	movq $block_c6xP_info,(%rbp)
	movl $GHC.Integer.Type.twoToTheThirtytwoInteger_closure+1,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c6xL, .-_c6xL


==================== Asm code ====================
2018-03-16 15:53:50.342922145 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6xL_info:
	.quad	_c6xL
	.quad	66
	.quad	12884901918
	.quad	S3Xx_srt+32


==================== Asm code ====================
2018-03-16 15:53:50.343759016 UTC

.section .text
.align 8
_c6xP:
_c6xP:
	movq $block_c6xT_info,(%rbp)
	movq 16(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.plusInteger_entry
	.size _c6xP, .-_c6xP


==================== Asm code ====================
2018-03-16 15:53:50.344793901 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6xP_info:
	.quad	_c6xP
	.quad	66
	.quad	12884901918
	.quad	S3Xx_srt+32


==================== Asm code ====================
2018-03-16 15:53:50.345728279 UTC

.section .text
.align 8
_c6xT:
_c6xT:
	movq 8(%rbp),%rax
	movq $block_c6xX_info,8(%rbp)
	movq %rax,%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c6xT, .-_c6xT


==================== Asm code ====================
2018-03-16 15:53:50.346541505 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6xT_info:
	.quad	_c6xT
	.quad	194
	.quad	4294967326
	.quad	S3Xx_srt+32


==================== Asm code ====================
2018-03-16 15:53:50.347278511 UTC

.section .text
.align 8
_c6xX:
_c6xX:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c6xX, .-_c6xX


==================== Asm code ====================
2018-03-16 15:53:50.348008092 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6xX_info:
	.quad	_c6xX
	.quad	1
	.quad	4294967326
	.quad	S3Xx_srt+32


==================== Asm code ====================
2018-03-16 15:53:50.349375398 UTC

.section .text
.align 8
.globl GHC.Integer.Type.decodeDoubleInteger_entry
.type GHC.Integer.Type.decodeDoubleInteger_entry, @object
GHC.Integer.Type.decodeDoubleInteger_entry:
_c6y8:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c6y9
_c6ya:
	movq $block_c6xy_info,-8(%rbp)
	addq $-8,%rbp
	jmp stg_decodeDouble_2Int#
_c6y9:
	movl $GHC.Integer.Type.decodeDoubleInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.decodeDoubleInteger_entry, .-GHC.Integer.Type.decodeDoubleInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.350477683 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.decodeDoubleInteger_info
.type GHC.Integer.Type.decodeDoubleInteger_info, @object
GHC.Integer.Type.decodeDoubleInteger_info:
	.quad	GHC.Integer.Type.decodeDoubleInteger_entry
	.quad	0
	.quad	47244640270
	.quad	4294967303
	.quad	S3Xx_srt+32


==================== Asm code ====================
2018-03-16 15:53:50.351633039 UTC

.section .text
.align 8
_c6xy:
_c6xy:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp _c6xz
	.size _c6xy, .-_c6xy


==================== Asm code ====================
2018-03-16 15:53:50.352684619 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6xy_info:
	.quad	_c6xy
	.quad	0
	.quad	12884901918
	.quad	S3Xx_srt+32


==================== Asm code ====================
2018-03-16 15:53:50.354069827 UTC

.section .text
.align 8
_c6xz:
_c6xz:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c6yd
_c6yc:
	movq $sat_s3HC_info,-32(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 24(%rbp),%r14
	leaq -32(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6yd:
	movq $40,904(%r13)
	movq $block_c6xz_info,(%rbp)
	jmp stg_gc_noregs
	.size _c6xz, .-_c6xz


==================== Asm code ====================
2018-03-16 15:53:50.355255219 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6xz_info:
	.quad	_c6xz
	.quad	964
	.quad	12884901918
	.quad	S3Xx_srt+32


==================== Asm code ====================
2018-03-16 15:53:50.362267383 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.smallShiftLPositive_closure
.type GHC.Integer.Type.smallShiftLPositive_closure, @object
GHC.Integer.Type.smallShiftLPositive_closure:
	.quad	GHC.Integer.Type.smallShiftLPositive_info


==================== Asm code ====================
2018-03-16 15:53:50.363248242 UTC

.section .text
.align 8
f2_s3HH_entry:
_c6zb:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c6zc
_c6zd:
	movq $block_c6z4_info,-40(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %rsi,%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c6z4
_c6z5:
	movq (%rbx),%rax
	jmp *(%rax)
_c6zc:
	jmp *-8(%r13)
	.size f2_s3HH_entry, .-f2_s3HH_entry


==================== Asm code ====================
2018-03-16 15:53:50.363978244 UTC

.section .data.rel.ro
.align 8
.align 1
f2_s3HH_info:
	.quad	f2_s3HH_entry
	.quad	8589934592
	.quad	13
	.quad	8589934605


==================== Asm code ====================
2018-03-16 15:53:50.364924443 UTC

.section .text
.align 8
_c6z4:
_c6z4:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6z8
_c6z9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6zC
_c6zB:
	movq 32(%rbp),%rax
	testq %rax,%rax
	jne _c6zH
_c6zI:
	addq $-24,%r12
	movl $GHC.Integer.Type.None_closure+2,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6zH:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq $GHC.Integer.Type.None_closure+2,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6zC:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c6z8:
	movq $block_c6zj_info,(%rbp)
	movq 7(%rbx),%rsi
	movq 15(%rbx),%rax
	movq %rax,%rbx
	movq 16(%rbp),%rcx
	shrq %cl,%rbx
	movq %rbx,%r14
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	jmp f2_s3HH_entry
	.size _c6z4, .-_c6z4


==================== Asm code ====================
2018-03-16 15:53:50.365937882 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6z4_info:
	.quad	_c6z4
	.quad	708
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.366853011 UTC

.section .text
.align 8
_c6zj:
_c6zj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6zx
_c6zw:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	shlq %cl,%rax
	orq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6zx:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6zj, .-_c6zj


==================== Asm code ====================
2018-03-16 15:53:50.368002103 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6zj_info:
	.quad	_c6zj
	.quad	964
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.368918684 UTC

.section .text
.align 8
.globl GHC.Integer.Type.smallShiftLPositive_entry
.type GHC.Integer.Type.smallShiftLPositive_entry, @object
GHC.Integer.Type.smallShiftLPositive_entry:
_c6zN:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6zR
_c6zQ:
	testq %rsi,%rsi
	je _c6zM
_c6zL:
	movq $f2_s3HH_info,-16(%r12)
	movq %rsi,-8(%r12)
	movl $64,%eax
	subq %rsi,%rax
	movq %rax,(%r12)
	movq %r14,%rsi
	xorl %r14d,%r14d
	leaq -14(%r12),%rbx
	jmp f2_s3HH_entry
_c6zR:
	movq $24,904(%r13)
	movl $GHC.Integer.Type.smallShiftLPositive_closure,%ebx
	jmp *-8(%r13)
_c6zM:
	addq $-24,%r12
	movq %r14,%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.smallShiftLPositive_entry, .-GHC.Integer.Type.smallShiftLPositive_entry


==================== Asm code ====================
2018-03-16 15:53:50.369875432 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.smallShiftLPositive_info
.type GHC.Integer.Type.smallShiftLPositive_info, @object
GHC.Integer.Type.smallShiftLPositive_info:
	.quad	GHC.Integer.Type.smallShiftLPositive_entry
	.quad	0
	.quad	14
	.quad	8589934606


==================== Asm code ====================
2018-03-16 15:53:50.376209655 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.smallShiftRPositive_closure
.type GHC.Integer.Type.smallShiftRPositive_closure, @object
GHC.Integer.Type.smallShiftRPositive_closure:
	.quad	GHC.Integer.Type.smallShiftRPositive_info


==================== Asm code ====================
2018-03-16 15:53:50.377565994 UTC

.section .text
.align 8
.globl GHC.Integer.Type.smallShiftRPositive_entry
.type GHC.Integer.Type.smallShiftRPositive_entry, @object
GHC.Integer.Type.smallShiftRPositive_entry:
_c6Ar:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6As
_c6At:
	movq $block_c6Ao_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c6Ao
_c6Ap:
	movq (%rbx),%rax
	jmp *(%rax)
_c6As:
	movl $GHC.Integer.Type.smallShiftRPositive_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.smallShiftRPositive_entry, .-GHC.Integer.Type.smallShiftRPositive_entry


==================== Asm code ====================
2018-03-16 15:53:50.378633006 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.smallShiftRPositive_info
.type GHC.Integer.Type.smallShiftRPositive_info, @object
GHC.Integer.Type.smallShiftRPositive_info:
	.quad	GHC.Integer.Type.smallShiftRPositive_entry
	.quad	0
	.quad	14
	.quad	8589934606


==================== Asm code ====================
2018-03-16 15:53:50.379987575 UTC

.section .text
.align 8
_c6Ao:
_c6Ao:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6Ay
_c6Ax:
	movq 8(%rbp),%rax
	testq %rax,%rax
	je _c6B8
_c6AG:
	addq $-16,%r12
	movq $block_c6AE_info,8(%rbp)
	movl $64,%esi
	subq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallShiftLPositive_entry
_c6B8:
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6Ay:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6Ao, .-_c6Ao


==================== Asm code ====================
2018-03-16 15:53:50.380833801 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Ao_info:
	.quad	_c6Ao
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.381769743 UTC

.section .text
.align 8
_c6AE:
_c6AE:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6AN
_u6Bb:
	addq $8,%rbp
	jmp _c6B5
_c6AN:
	movq $block_c6AK_info,(%rbp)
	movq 7(%rbx),%rbx
	testb $7,%bl
	jne _c6AK
_c6AO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6AE, .-_c6AE


==================== Asm code ====================
2018-03-16 15:53:50.382547792 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6AE_info:
	.quad	_c6AE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.383345557 UTC

.section .text
.align 8
_c6AK:
_c6AK:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6AU
_u6Bc:
	addq $8,%rbp
	jmp _c6B5
_c6AX:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_c6AU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6AX
_c6AW:
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6AK, .-_c6AK


==================== Asm code ====================
2018-03-16 15:53:50.384171928 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6AK_info:
	.quad	_c6AK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.38494929 UTC

.section .text
.align 8
_c6B5:
_c6B5:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6B5, .-_c6B5


==================== Asm code ====================
2018-03-16 15:53:50.390684279 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.shiftRPositive_closure
.type GHC.Integer.Type.shiftRPositive_closure, @object
GHC.Integer.Type.shiftRPositive_closure:
	.quad	GHC.Integer.Type.shiftRPositive_info


==================== Asm code ====================
2018-03-16 15:53:50.391870355 UTC

.section .text
.align 8
.globl GHC.Integer.Type.shiftRPositive_entry
.type GHC.Integer.Type.shiftRPositive_entry, @object
GHC.Integer.Type.shiftRPositive_entry:
_c6BS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6BT
_u6C9:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c6BI
_c6BT:
	movl $GHC.Integer.Type.shiftRPositive_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.shiftRPositive_entry, .-GHC.Integer.Type.shiftRPositive_entry


==================== Asm code ====================
2018-03-16 15:53:50.392903144 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.shiftRPositive_info
.type GHC.Integer.Type.shiftRPositive_info, @object
GHC.Integer.Type.shiftRPositive_info:
	.quad	GHC.Integer.Type.shiftRPositive_entry
	.quad	0
	.quad	14
	.quad	8589934606


==================== Asm code ====================
2018-03-16 15:53:50.394128787 UTC

.section .text
.align 8
_c6BI:
_c6BI:
	movq (%rbp),%rax
	movq $block_c6BL_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c6BL
_c6BM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6BI, .-_c6BI


==================== Asm code ====================
2018-03-16 15:53:50.39546831 UTC

.section .text
.align 8
_c6BL:
_c6BL:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6BP
_c6BQ:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6BP:
	movq 8(%rbp),%rax
	cmpq $64,%rax
	jl _c6C1
_c6C2:
	movq 7(%rbx),%rbx
	movq %rbx,(%rbp)
	addq $-64,%rax
	movq %rax,8(%rbp)
	jmp _c6BI
_c6C1:
	movq %rax,%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.smallShiftRPositive_entry
	.size _c6BL, .-_c6BL


==================== Asm code ====================
2018-03-16 15:53:50.396499512 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6BL_info:
	.quad	_c6BL
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.403399738 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.shiftRInteger_closure
.type GHC.Integer.Type.shiftRInteger_closure, @object
GHC.Integer.Type.shiftRInteger_closure:
	.quad	GHC.Integer.Type.shiftRInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:50.404799178 UTC

.section .text
.align 8
.globl GHC.Integer.Type.shiftRInteger_entry
.type GHC.Integer.Type.shiftRInteger_entry, @object
GHC.Integer.Type.shiftRInteger_entry:
_c6CG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6CH
_c6CI:
	movq $block_c6Cy_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c6Cy
_c6Cz:
	movq (%rbx),%rax
	jmp *(%rax)
_c6CH:
	movl $GHC.Integer.Type.shiftRInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.shiftRInteger_entry, .-GHC.Integer.Type.shiftRInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.406458089 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.shiftRInteger_info
.type GHC.Integer.Type.shiftRInteger_info, @object
GHC.Integer.Type.shiftRInteger_info:
	.quad	GHC.Integer.Type.shiftRInteger_entry
	.quad	0
	.quad	12884901902
	.quad	8589934606
	.quad	S3Xx_srt+64


==================== Asm code ====================
2018-03-16 15:53:50.407821422 UTC

.section .text
.align 8
_c6Cy:
_c6Cy:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u6D2
_c6CE:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u6D2:
	cmpq $2,%rax
	jb _c6CC
_c6CD:
	movq $block_c6CO_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.complementInteger_entry
_c6CC:
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.shiftRPositive_entry
	.size _c6Cy, .-_c6Cy


==================== Asm code ====================
2018-03-16 15:53:50.408815973 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Cy_info:
	.quad	_c6Cy
	.quad	65
	.quad	12884901918
	.quad	S3Xx_srt+64


==================== Asm code ====================
2018-03-16 15:53:50.409715423 UTC

.section .text
.align 8
_c6CO:
_c6CO:
	movq 8(%rbp),%rax
	movq $block_c6CS_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.shiftRInteger_entry
	.size _c6CO, .-_c6CO


==================== Asm code ====================
2018-03-16 15:53:50.410436037 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6CO_info:
	.quad	_c6CO
	.quad	65
	.quad	12884901918
	.quad	S3Xx_srt+64


==================== Asm code ====================
2018-03-16 15:53:50.411213892 UTC

.section .text
.align 8
_c6CS:
_c6CS:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.complementInteger_entry
	.size _c6CS, .-_c6CS


==================== Asm code ====================
2018-03-16 15:53:50.411841661 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6CS_info:
	.quad	_c6CS
	.quad	0
	.quad	4294967326
	.quad	S3Xx_srt+64


==================== Asm code ====================
2018-03-16 15:53:50.416546977 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.shiftLPositive_closure
.type GHC.Integer.Type.shiftLPositive_closure, @object
GHC.Integer.Type.shiftLPositive_closure:
	.quad	GHC.Integer.Type.shiftLPositive_info


==================== Asm code ====================
2018-03-16 15:53:50.417710208 UTC

.section .text
.align 8
.globl GHC.Integer.Type.shiftLPositive_entry
.type GHC.Integer.Type.shiftLPositive_entry, @object
GHC.Integer.Type.shiftLPositive_entry:
_c6DF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6DG
_u6DL:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c6Dm
_c6DG:
	movl $GHC.Integer.Type.shiftLPositive_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.shiftLPositive_entry, .-GHC.Integer.Type.shiftLPositive_entry


==================== Asm code ====================
2018-03-16 15:53:50.418387987 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.shiftLPositive_info
.type GHC.Integer.Type.shiftLPositive_info, @object
GHC.Integer.Type.shiftLPositive_info:
	.quad	GHC.Integer.Type.shiftLPositive_entry
	.quad	0
	.quad	14
	.quad	8589934606


==================== Asm code ====================
2018-03-16 15:53:50.419261948 UTC

.section .text
.align 8
_c6Dm:
_c6Dm:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	cmpq $64,%rbx
	jl _c6DD
_c6DE:
	movq $block_c6Dt_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c6Dt
_c6Du:
	movq (%rbx),%rax
	jmp *(%rax)
_c6DD:
	movq %rbx,%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.smallShiftLPositive_entry
	.size _c6Dm, .-_c6Dm


==================== Asm code ====================
2018-03-16 15:53:50.420190325 UTC

.section .text
.align 8
_c6Dt:
_c6Dt:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6DK
_c6DJ:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq $0,(%r12)
	leaq -15(%r12),%rax
	movq %rax,(%rbp)
	addq $-64,8(%rbp)
	jmp _c6Dm
_c6DK:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6Dt, .-_c6Dt


==================== Asm code ====================
2018-03-16 15:53:50.420916839 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Dt_info:
	.quad	_c6Dt
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.42617843 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.shiftLInteger_closure
.type GHC.Integer.Type.shiftLInteger_closure, @object
GHC.Integer.Type.shiftLInteger_closure:
	.quad	GHC.Integer.Type.shiftLInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.427509849 UTC

.section .text
.align 8
.globl GHC.Integer.Type.shiftLInteger_entry
.type GHC.Integer.Type.shiftLInteger_entry, @object
GHC.Integer.Type.shiftLInteger_entry:
_c6Ee:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6Ef
_c6Eg:
	movq $block_c6E6_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c6E6
_c6E7:
	movq (%rbx),%rax
	jmp *(%rax)
_c6Ef:
	movl $GHC.Integer.Type.shiftLInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.shiftLInteger_entry, .-GHC.Integer.Type.shiftLInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.42829899 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.shiftLInteger_info
.type GHC.Integer.Type.shiftLInteger_info, @object
GHC.Integer.Type.shiftLInteger_info:
	.quad	GHC.Integer.Type.shiftLInteger_entry
	.quad	0
	.quad	14
	.quad	8589934606


==================== Asm code ====================
2018-03-16 15:53:50.429189985 UTC

.section .text
.align 8
_c6E6:
_c6E6:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u6EG
_c6Ec:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u6EG:
	movq 8(%rbp),%rcx
	cmpq $2,%rax
	jb _c6Ea
_c6Eb:
	movq $block_c6Eu_info,8(%rbp)
	movq %rcx,%rsi
	movq 6(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.shiftLPositive_entry
_c6Ea:
	movq $block_c6Ej_info,8(%rbp)
	movq %rcx,%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.shiftLPositive_entry
	.size _c6E6, .-_c6E6


==================== Asm code ====================
2018-03-16 15:53:50.430074442 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6E6_info:
	.quad	_c6E6
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.430895237 UTC

.section .text
.align 8
_c6Ej:
_c6Ej:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6Er
_c6Eq:
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6Er:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6Ej, .-_c6Ej


==================== Asm code ====================
2018-03-16 15:53:50.431616556 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Ej_info:
	.quad	_c6Ej
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.432423879 UTC

.section .text
.align 8
_c6Eu:
_c6Eu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6EC
_c6EB:
	movq $GHC.Integer.Type.Negative_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6EC:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6Eu, .-_c6Eu


==================== Asm code ====================
2018-03-16 15:53:50.433820237 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Eu_info:
	.quad	_c6Eu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.442009653 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.some_closure
.type GHC.Integer.Type.some_closure, @object
GHC.Integer.Type.some_closure:
	.quad	GHC.Integer.Type.some_info


==================== Asm code ====================
2018-03-16 15:53:50.443650277 UTC

.section .text
.align 8
.globl GHC.Integer.Type.some_entry
.type GHC.Integer.Type.some_entry, @object
GHC.Integer.Type.some_entry:
_c6Fc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6Fd
_c6Fe:
	movq $block_c6F5_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c6F5
_c6F6:
	movq (%rbx),%rax
	jmp *(%rax)
_c6Fd:
	movl $GHC.Integer.Type.some_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.some_entry, .-GHC.Integer.Type.some_entry


==================== Asm code ====================
2018-03-16 15:53:50.444911818 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.some_info
.type GHC.Integer.Type.some_info, @object
GHC.Integer.Type.some_info:
	.quad	GHC.Integer.Type.some_entry
	.quad	0
	.quad	14
	.quad	8589934605


==================== Asm code ====================
2018-03-16 15:53:50.446650002 UTC

.section .text
.align 8
_c6F5:
_c6F5:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c6F9
_c6Fa:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6Fp
_c6Fo:
	testq %rax,%rax
	je _c6Fv
_c6Fu:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq $GHC.Integer.Type.None_closure+2,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6Fv:
	addq $-24,%r12
	movl $GHC.Integer.Type.None_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6Fp:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c6F9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6Fp
_c6Fj:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6F5, .-_c6F5


==================== Asm code ====================
2018-03-16 15:53:50.448193273 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6F5_info:
	.quad	_c6F5
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.45941404 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.quotRemPositive_g_closure
.type GHC.Integer.Type.quotRemPositive_g_closure, @object
GHC.Integer.Type.quotRemPositive_g_closure:
	.quad	GHC.Integer.Type.quotRemPositive_g_info


==================== Asm code ====================
2018-03-16 15:53:50.460372828 UTC

.section .text
.align 8
.globl GHC.Integer.Type.quotRemPositive_g_entry
.type GHC.Integer.Type.quotRemPositive_g_entry, @object
GHC.Integer.Type.quotRemPositive_g_entry:
_c6FW:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c6FX
_u6Gx:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c6FM
_c6FX:
	movl $GHC.Integer.Type.quotRemPositive_g_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.quotRemPositive_g_entry, .-GHC.Integer.Type.quotRemPositive_g_entry


==================== Asm code ====================
2018-03-16 15:53:50.461382783 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.quotRemPositive_g_info
.type GHC.Integer.Type.quotRemPositive_g_info, @object
GHC.Integer.Type.quotRemPositive_g_info:
	.quad	GHC.Integer.Type.quotRemPositive_g_entry
	.quad	0
	.quad	14
	.quad	12884901907


==================== Asm code ====================
2018-03-16 15:53:50.462285236 UTC

.section .text
.align 8
_c6FM:
_c6FM:
	movq $block_c6FP_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c6FP
_c6FQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6FM, .-_c6FM


==================== Asm code ====================
2018-03-16 15:53:50.46328333 UTC

.section .text
.align 8
_c6FP:
_c6FP:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c6FT
_c6FU:
	movq $block_c6Ga_info,-8(%rbp)
	movq 6(%rbx),%rcx
	movq %rcx,%rsi
	movq %rax,%r14
	movq 14(%rbx),%rax
	movq %rax,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.comparePositive_entry
_c6FT:
	movq $block_c6G1_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c6G1
_c6G3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6FP, .-_c6FP


==================== Asm code ====================
2018-03-16 15:53:50.464094709 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6FP_info:
	.quad	_c6FP
	.quad	195
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.464916352 UTC

.section .text
.align 8
_c6G1:
_c6G1:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6G1, .-_c6G1


==================== Asm code ====================
2018-03-16 15:53:50.465769155 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6G1_info:
	.quad	_c6G1
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.466712863 UTC

.section .text
.align 8
_c6Ga:
_c6Ga:
	movq 32(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c6Gq
_c6Gi:
	movq $block_c6Gf_info,(%rbp)
	movq 24(%rbp),%rsi
	movq %rax,%r14
	jmp GHC.Integer.Type.minusPositive_entry
_c6Gq:
	movq 16(%rbp),%rbx
	shlq $1,%rbx
	movq %rbx,16(%rbp)
	movq 8(%rbp),%rbx
	movq %rbx,24(%rbp)
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp _c6FM
	.size _c6Ga, .-_c6Ga


==================== Asm code ====================
2018-03-16 15:53:50.467837804 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Ga_info:
	.quad	_c6Ga
	.quad	132
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.469110487 UTC

.section .text
.align 8
_c6Gf:
_c6Gf:
	movq 16(%rbp),%rax
	shlq $1,%rax
	incq %rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	movq %rbx,32(%rbp)
	addq $16,%rbp
	jmp _c6FM
	.size _c6Gf, .-_c6Gf


==================== Asm code ====================
2018-03-16 15:53:50.471249939 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Gf_info:
	.quad	_c6Gf
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.49105794 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.quotRemPositive_closure
.type GHC.Integer.Type.quotRemPositive_closure, @object
GHC.Integer.Type.quotRemPositive_closure:
	.quad	GHC.Integer.Type.quotRemPositive_info


==================== Asm code ====================
2018-03-16 15:53:50.492119509 UTC

.section .text
.align 8
sat_s3IW_entry:
_c6HC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6HD
_c6HE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq -1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp mkSubtractors_s3IR_entry
_c6HD:
	jmp *-16(%r13)
	.size sat_s3IW_entry, .-sat_s3IW_entry


==================== Asm code ====================
2018-03-16 15:53:50.492890441 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3IW_info:
	.quad	sat_s3IW_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:53:50.493925573 UTC

.section .text
.align 8
sat_s3IU_entry:
_c6HJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6HK
_c6HL:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.smallShiftLPositive_entry
_c6HK:
	jmp *-16(%r13)
	.size sat_s3IU_entry, .-sat_s3IU_entry


==================== Asm code ====================
2018-03-16 15:53:50.495387885 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3IU_info:
	.quad	sat_s3IU_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:53:50.496457492 UTC

.section .text
.align 8
mkSubtractors_s3IR_entry:
_c6HP:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c6HT
_c6HS:
	testq %r14,%r14
	je _c6HO
_c6HN:
	movq 7(%rbx),%rax
	movq $sat_s3IW_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %r14,-56(%r12)
	movq $sat_s3IU_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq $GHC.Integer.Type.Cons_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c6HT:
	movq $88,904(%r13)
	jmp *-8(%r13)
_c6HO:
	movq 15(%rbx),%rax
	addq $-88,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size mkSubtractors_s3IR_entry, .-mkSubtractors_s3IR_entry


==================== Asm code ====================
2018-03-16 15:53:50.497455382 UTC

.section .data.rel.ro
.align 8
.align 1
mkSubtractors_s3IR_info:
	.quad	mkSubtractors_s3IR_entry
	.quad	2
	.quad	11
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:53:50.498600235 UTC

.section .text
.align 8
subtractors_s3IP_entry:
_c6HV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6HW
_c6HX:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c6HZ
_c6HY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $GHC.Integer.Type.Cons_con_info,-40(%r12)
	movq %rax,-32(%r12)
	movq $GHC.Integer.Type.Nil_closure+1,-24(%r12)
	movq $mkSubtractors_s3IR_info,-16(%r12)
	movq %rax,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	movl $63,%r14d
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp mkSubtractors_s3IR_entry
_c6HZ:
	movq $48,904(%r13)
_c6HW:
	jmp *-16(%r13)
	.size subtractors_s3IP_entry, .-subtractors_s3IP_entry


==================== Asm code ====================
2018-03-16 15:53:50.499711883 UTC

.section .data.rel.ro
.align 8
.align 1
subtractors_s3IP_info:
	.quad	subtractors_s3IP_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:53:50.500853077 UTC

.section .text
.align 8
sat_s3Jc_entry:
_c6Iq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6Ir
_c6Is:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.some_entry
_c6Ir:
	jmp *-16(%r13)
	.size sat_s3Jc_entry, .-sat_s3Jc_entry


==================== Asm code ====================
2018-03-16 15:53:50.50209255 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3Jc_info:
	.quad	sat_s3Jc_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:53:50.503200927 UTC

.section .text
.align 8
sat_s3Ji_entry:
_c6IG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6IH
_c6II:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.some_entry
_c6IH:
	jmp *-16(%r13)
	.size sat_s3Ji_entry, .-sat_s3Ji_entry


==================== Asm code ====================
2018-03-16 15:53:50.504243921 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3Ji_info:
	.quad	sat_s3Ji_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:53:50.505465981 UTC

.section .text
.align 8
sat_s3Jm_entry:
_c6IS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6IT
_c6IU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.some_entry
_c6IT:
	jmp *-16(%r13)
	.size sat_s3Jm_entry, .-sat_s3Jm_entry


==================== Asm code ====================
2018-03-16 15:53:50.506336205 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3Jm_info:
	.quad	sat_s3Jm_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:53:50.507536914 UTC

.section .text
.align 8
f2_s3IX_entry:
_c6IZ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c6J0
_c6J1:
	movq $block_c6I5_info,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c6I5
_c6I6:
	movq (%rbx),%rax
	jmp *(%rax)
_c6J0:
	jmp *-8(%r13)
	.size f2_s3IX_entry, .-f2_s3IX_entry


==================== Asm code ====================
2018-03-16 15:53:50.508293624 UTC

.section .data.rel.ro
.align 8
.align 1
f2_s3IX_info:
	.quad	f2_s3IX_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:50.509143035 UTC

.section .text
.align 8
_c6I5:
_c6I5:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6IW
_c6IX:
	movl $GHC.Integer.Type.None_closure+2,%r14d
	movl $GHC.Integer.Type.None_closure+2,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6IW:
	movq $block_c6Ia_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp f2_s3IX_entry
	.size _c6I5, .-_c6I5


==================== Asm code ====================
2018-03-16 15:53:50.509997924 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6I5_info:
	.quad	_c6I5
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.510799957 UTC

.section .text
.align 8
_c6Ia:
_c6Ia:
	movq $block_c6Ic_info,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c6Ic
_c6Id:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6Ia, .-_c6Ia


==================== Asm code ====================
2018-03-16 15:53:50.511536331 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Ia_info:
	.quad	_c6Ia
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.512572265 UTC

.section .text
.align 8
_c6Ic:
_c6Ic:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c6J5
_c6Jc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6Jf
_c6Je:
	testq %rcx,%rcx
	je _c6Jl
_c6Jh:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq $GHC.Integer.Type.None_closure+2,-8(%r12)
	movq %rcx,(%r12)
	movq $block_c6Iy_info,(%rbp)
	leaq -15(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Type.quotRemPositive_g_entry
_c6Jl:
	addq $-24,%r12
	movq $block_c6IK_info,(%rbp)
	movl $GHC.Integer.Type.None_closure+2,%edi
	movq %rax,%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Type.quotRemPositive_g_entry
_c6Jf:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c6J5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6Jf
_c6J7:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rcx,(%r12)
	movq $block_c6Ii_info,(%rbp)
	leaq -15(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Type.quotRemPositive_g_entry
	.size _c6Ic, .-_c6Ic


==================== Asm code ====================
2018-03-16 15:53:50.513557985 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Ic_info:
	.quad	_c6Ic
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.514278363 UTC

.section .text
.align 8
_c6Ii:
_c6Ii:
	movq %r14,16(%rbp)
	movq %rbx,24(%rbp)
	jmp _c6Ij
	.size _c6Ii, .-_c6Ii


==================== Asm code ====================
2018-03-16 15:53:50.514942259 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Ii_info:
	.quad	_c6Ii
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.515787312 UTC

.section .text
.align 8
_c6Ij:
_c6Ij:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c6Jb
_c6Ja:
	movq $sat_s3Jc_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%r14
	leaq -24(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6Jb:
	movq $32,904(%r13)
	movq $block_c6Ij_info,(%rbp)
	jmp stg_gc_noregs
	.size _c6Ij, .-_c6Ij


==================== Asm code ====================
2018-03-16 15:53:50.516849573 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Ij_info:
	.quad	_c6Ij
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.517742977 UTC

.section .text
.align 8
_c6IK:
_c6IK:
	movq %r14,16(%rbp)
	movq %rbx,24(%rbp)
	jmp _c6IL
	.size _c6IK, .-_c6IK


==================== Asm code ====================
2018-03-16 15:53:50.518474593 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6IK_info:
	.quad	_c6IK
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.519321817 UTC

.section .text
.align 8
_c6IL:
_c6IL:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c6Jo
_c6Jn:
	movq $sat_s3Jm_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%r14
	leaq -24(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6Jo:
	movq $32,904(%r13)
	movq $block_c6IL_info,(%rbp)
	jmp stg_gc_noregs
	.size _c6IL, .-_c6IL


==================== Asm code ====================
2018-03-16 15:53:50.520065377 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6IL_info:
	.quad	_c6IL
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.52082181 UTC

.section .text
.align 8
_c6Iy:
_c6Iy:
	movq %r14,16(%rbp)
	movq %rbx,24(%rbp)
	jmp _c6Iz
	.size _c6Iy, .-_c6Iy


==================== Asm code ====================
2018-03-16 15:53:50.521511517 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Iy_info:
	.quad	_c6Iy
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.522366288 UTC

.section .text
.align 8
_c6Iz:
_c6Iz:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c6Jk
_c6Jj:
	movq $sat_s3Ji_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%r14
	leaq -24(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6Jk:
	movq $32,904(%r13)
	movq $block_c6Iz_info,(%rbp)
	jmp stg_gc_noregs
	.size _c6Iz, .-_c6Iz


==================== Asm code ====================
2018-03-16 15:53:50.523099375 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Iz_info:
	.quad	_c6Iz
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.523821047 UTC

.section .text
.align 8
sat_s3Jr_entry:
_c6JH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6JI
_c6JJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.digitsMaybeZeroToInteger_entry
_c6JI:
	jmp *-16(%r13)
	.size sat_s3Jr_entry, .-sat_s3Jr_entry


==================== Asm code ====================
2018-03-16 15:53:50.524547017 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3Jr_info:
	.quad	sat_s3Jr_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:53:50.525433403 UTC

.section .text
.align 8
sat_s3Jq_entry:
_c6JO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6JP
_c6JQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.digitsMaybeZeroToInteger_entry
_c6JP:
	jmp *-16(%r13)
	.size sat_s3Jq_entry, .-sat_s3Jq_entry


==================== Asm code ====================
2018-03-16 15:53:50.526681007 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3Jq_info:
	.quad	sat_s3Jq_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:53:50.527607676 UTC

.section .text
.align 8
.globl GHC.Integer.Type.quotRemPositive_entry
.type GHC.Integer.Type.quotRemPositive_entry, @object
GHC.Integer.Type.quotRemPositive_entry:
_c6JR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6JS
_c6JT:
	movq $block_c6Hf_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c6Hf
_c6Hg:
	movq (%rbx),%rax
	jmp *(%rax)
_c6JS:
	movl $GHC.Integer.Type.quotRemPositive_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.quotRemPositive_entry, .-GHC.Integer.Type.quotRemPositive_entry


==================== Asm code ====================
2018-03-16 15:53:50.528358489 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.quotRemPositive_info
.type GHC.Integer.Type.quotRemPositive_info, @object
GHC.Integer.Type.quotRemPositive_info:
	.quad	GHC.Integer.Type.quotRemPositive_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.529186601 UTC

.section .text
.align 8
_c6Hf:
_c6Hf:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c6JW
_c6JV:
	movq $subtractors_s3IP_info,-32(%r12)
	movq %rbx,-16(%r12)
	movq $f2_s3IX_info,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%rax
	movq $block_c6JB_info,8(%rbp)
	movq %rax,%r14
	leaq -7(%r12),%rbx
	addq $8,%rbp
	jmp f2_s3IX_entry
_c6JW:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6Hf, .-_c6Hf


==================== Asm code ====================
2018-03-16 15:53:50.530011539 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Hf_info:
	.quad	_c6Hf
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.531209547 UTC

.section .text
.align 8
_c6JB:
_c6JB:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c6JZ
_c6JY:
	movq $sat_s3Jr_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $sat_s3Jq_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%r14
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6JZ:
	movq $48,904(%r13)
	jmp stg_gc_pp
	.size _c6JB, .-_c6JB


==================== Asm code ====================
2018-03-16 15:53:50.532245917 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6JB_info:
	.quad	_c6JB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.544305642 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.quotRemInteger_closure
.type GHC.Integer.Type.quotRemInteger_closure, @object
GHC.Integer.Type.quotRemInteger_closure:
	.quad	GHC.Integer.Type.quotRemInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.545332863 UTC

.section .text
.align 8
sat_s3JE_entry:
_c6Ma:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6Mb
_c6Mc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
_c6Mb:
	jmp *-16(%r13)
	.size sat_s3JE_entry, .-sat_s3JE_entry


==================== Asm code ====================
2018-03-16 15:53:50.546058036 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3JE_info:
	.quad	sat_s3JE_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:53:50.546864796 UTC

.section .text
.align 8
sat_s3JM_entry:
_c6Mq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6Mr
_c6Ms:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
_c6Mr:
	jmp *-16(%r13)
	.size sat_s3JM_entry, .-sat_s3JM_entry


==================== Asm code ====================
2018-03-16 15:53:50.547959908 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3JM_info:
	.quad	sat_s3JM_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:53:50.5487444 UTC

.section .text
.align 8
sat_s3JL_entry:
_c6Mx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6My
_c6Mz:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
_c6My:
	jmp *-16(%r13)
	.size sat_s3JL_entry, .-sat_s3JL_entry


==================== Asm code ====================
2018-03-16 15:53:50.549525079 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3JL_info:
	.quad	sat_s3JL_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:53:50.55032275 UTC

.section .text
.align 8
sat_s3JR_entry:
_c6MI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6MJ
_c6MK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
_c6MJ:
	jmp *-16(%r13)
	.size sat_s3JR_entry, .-sat_s3JR_entry


==================== Asm code ====================
2018-03-16 15:53:50.551029252 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3JR_info:
	.quad	sat_s3JR_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:53:50.551962073 UTC

.section .text
.align 8
.globl GHC.Integer.Type.quotRemInteger_entry
.type GHC.Integer.Type.quotRemInteger_entry, @object
GHC.Integer.Type.quotRemInteger_entry:
_c6MP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6MQ
_c6MR:
	movq $block_c6LJ_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c6LJ
_c6LK:
	movq (%rbx),%rax
	jmp *(%rax)
_c6MQ:
	movl $GHC.Integer.Type.quotRemInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.quotRemInteger_entry, .-GHC.Integer.Type.quotRemInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.552786432 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.quotRemInteger_info
.type GHC.Integer.Type.quotRemInteger_info, @object
GHC.Integer.Type.quotRemInteger_info:
	.quad	GHC.Integer.Type.quotRemInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.553754965 UTC

.section .text
.align 8
_c6LJ:
_c6LJ:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	je _c6MN
_c6MM:
	movq $block_c6LO_info,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c6LO
_c6LP:
	movq (%rbx),%rax
	jmp *(%rax)
_c6MN:
	movq $block_c6Nr_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c6Nr
_c6Nt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6LJ, .-_c6LJ


==================== Asm code ====================
2018-03-16 15:53:50.554543811 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6LJ_info:
	.quad	_c6LJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.555294056 UTC

.section .text
.align 8
_c6Nr:
_c6Nr:
	movl $GHC.Integer.Type.Naught_closure+3,%r14d
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6Nr, .-_c6Nr


==================== Asm code ====================
2018-03-16 15:53:50.556041945 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Nr_info:
	.quad	_c6Nr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.556936999 UTC

.section .text
.align 8
_c6LO:
_c6LO:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c6No
_c6MV:
	movq $block_c6LT_info,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c6LT
_c6LU:
	movq (%rbx),%rax
	jmp *(%rax)
_c6No:
	movl $GHC.Integer.Type.errorInteger_closure+1,%r14d
	movl $GHC.Integer.Type.errorInteger_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6LO, .-_c6LO


==================== Asm code ====================
2018-03-16 15:53:50.558966199 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6LO_info:
	.quad	_c6LO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.560455667 UTC

.section .text
.align 8
_c6LT:
_c6LT:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $2,%rcx
	jb _c6MY
_c6N9:
	movq $block_c6Mf_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c6Mf
_c6Mg:
	movq (%rbx),%rax
	jmp *(%rax)
_c6MY:
	movq $block_c6LY_info,(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c6LY
_c6LZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6LT, .-_c6LT


==================== Asm code ====================
2018-03-16 15:53:50.561866563 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6LT_info:
	.quad	_c6LT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.563010609 UTC

.section .text
.align 8
_c6LY:
_c6LY:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $2,%rcx
	jb _c6N2
_c6N4:
	movq $block_c6M4_info,8(%rbp)
	movq 6(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.quotRemPositive_entry
_c6N2:
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.quotRemPositive_entry
	.size _c6LY, .-_c6LY


==================== Asm code ====================
2018-03-16 15:53:50.563830303 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6LY_info:
	.quad	_c6LY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.564700334 UTC

.section .text
.align 8
_c6M4:
_c6M4:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6N7
_c6N6:
	movq $sat_s3JE_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6N7:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c6M4, .-_c6M4


==================== Asm code ====================
2018-03-16 15:53:50.565641204 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6M4_info:
	.quad	_c6M4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.566577158 UTC

.section .text
.align 8
_c6Mf:
_c6Mf:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $2,%rcx
	jb _c6Nc
_c6Nh:
	movq $block_c6MC_info,8(%rbp)
	movq 6(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.quotRemPositive_entry
_c6Nc:
	movq $block_c6Mk_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.quotRemPositive_entry
	.size _c6Mf, .-_c6Mf


==================== Asm code ====================
2018-03-16 15:53:50.567440595 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Mf_info:
	.quad	_c6Mf
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.568309158 UTC

.section .text
.align 8
_c6Mk:
_c6Mk:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c6Nf
_c6Ne:
	movq $sat_s3JM_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $sat_s3JL_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%r14
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6Nf:
	movq $48,904(%r13)
	jmp stg_gc_pp
	.size _c6Mk, .-_c6Mk


==================== Asm code ====================
2018-03-16 15:53:50.570205723 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Mk_info:
	.quad	_c6Mk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.571148779 UTC

.section .text
.align 8
_c6MC:
_c6MC:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6Nk
_c6Nj:
	movq $sat_s3JR_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6Nk:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c6MC, .-_c6MC


==================== Asm code ====================
2018-03-16 15:53:50.571868396 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6MC_info:
	.quad	_c6MC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.579020884 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.divModInteger_closure
.type GHC.Integer.Type.divModInteger_closure, @object
GHC.Integer.Type.divModInteger_closure:
	.quad	GHC.Integer.Type.divModInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:50.580218376 UTC

.section .text
.align 8
sat_s3K3_entry:
_c6Pg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6Ph
_c6Pi:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c6Ph:
	jmp *-16(%r13)
	.size sat_s3K3_entry, .-sat_s3K3_entry


==================== Asm code ====================
2018-03-16 15:53:50.58181517 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3K3_info:
	.quad	sat_s3K3_entry
	.quad	2
	.quad	4294967314
	.quad	S3Xx_srt+40


==================== Asm code ====================
2018-03-16 15:53:50.5827876 UTC

.section .text
.align 8
sat_s3K2_entry:
_c6Pn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6Po
_c6Pp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.Integer.Type.oneInteger_closure+1,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.minusInteger_entry
_c6Po:
	jmp *-16(%r13)
	.size sat_s3K2_entry, .-sat_s3K2_entry


==================== Asm code ====================
2018-03-16 15:53:50.583532239 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3K2_info:
	.quad	sat_s3K2_entry
	.quad	1
	.quad	4294967312
	.quad	S3Xx_srt+48


==================== Asm code ====================
2018-03-16 15:53:50.584365768 UTC

.section .text
.align 8
.globl GHC.Integer.Type.divModInteger_entry
.type GHC.Integer.Type.divModInteger_entry, @object
GHC.Integer.Type.divModInteger_entry:
_c6Pq:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c6Pr
_c6Ps:
	movq $block_c6OT_info,-16(%rbp)
	movq %rsi,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.quotRemInteger_entry
_c6Pr:
	movl $GHC.Integer.Type.divModInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.divModInteger_entry, .-GHC.Integer.Type.divModInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.585166752 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.divModInteger_info
.type GHC.Integer.Type.divModInteger_info, @object
GHC.Integer.Type.divModInteger_info:
	.quad	GHC.Integer.Type.divModInteger_entry
	.quad	0
	.quad	150323855374
	.quad	8589934607
	.quad	S3Xx_srt+40


==================== Asm code ====================
2018-03-16 15:53:50.586264396 UTC

.section .text
.align 8
_c6OT:
_c6OT:
	movq $block_c6OV_info,-16(%rbp)
	movq %r14,%rax
	movq 8(%rbp),%r14
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.signumInteger_entry
	.size _c6OT, .-_c6OT


==================== Asm code ====================
2018-03-16 15:53:50.587012422 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6OT_info:
	.quad	_c6OT
	.quad	1
	.quad	12884901918
	.quad	S3Xx_srt+40


==================== Asm code ====================
2018-03-16 15:53:50.587757672 UTC

.section .text
.align 8
_c6OV:
_c6OV:
	movq $block_c6OZ_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.negateInteger_entry
	.size _c6OV, .-_c6OV


==================== Asm code ====================
2018-03-16 15:53:50.588486354 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6OV_info:
	.quad	_c6OV
	.quad	3
	.quad	12884901918
	.quad	S3Xx_srt+40


==================== Asm code ====================
2018-03-16 15:53:50.589337887 UTC

.section .text
.align 8
_c6OZ:
_c6OZ:
	movq $block_c6P3_info,-8(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.signumInteger_entry
	.size _c6OZ, .-_c6OZ


==================== Asm code ====================
2018-03-16 15:53:50.590158337 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6OZ_info:
	.quad	_c6OZ
	.quad	3
	.quad	12884901918
	.quad	S3Xx_srt+40


==================== Asm code ====================
2018-03-16 15:53:50.591043029 UTC

.section .text
.align 8
_c6P3:
_c6P3:
	movq 8(%rbp),%rax
	movq $block_c6P7_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c6P3, .-_c6P3


==================== Asm code ====================
2018-03-16 15:53:50.592239253 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6P3_info:
	.quad	_c6P3
	.quad	4
	.quad	12884901918
	.quad	S3Xx_srt+40


==================== Asm code ====================
2018-03-16 15:53:50.593335473 UTC

.section .text
.align 8
_c6P7:
_c6P7:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	cmpq $1,%rbx
	je _c6PB
_c6PA:
	movq %rcx,%r14
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6PE:
	movq $56,904(%r13)
	jmp stg_gc_unbx_r1
_c6PB:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c6PE
_c6PD:
	movq $sat_s3K3_info,-48(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rcx,-24(%r12)
	movq $sat_s3K2_info,-16(%r12)
	movq %rax,(%r12)
	leaq -48(%r12),%r14
	leaq -16(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6P7, .-_c6P7


==================== Asm code ====================
2018-03-16 15:53:50.594249189 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6P7_info:
	.quad	_c6P7
	.quad	3
	.quad	12884901918
	.quad	S3Xx_srt+40


==================== Asm code ====================
2018-03-16 15:53:50.598255554 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.divInteger_closure
.type GHC.Integer.Type.divInteger_closure, @object
GHC.Integer.Type.divInteger_closure:
	.quad	GHC.Integer.Type.divInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:50.599274536 UTC

.section .text
.align 8
.globl GHC.Integer.Type.divInteger_entry
.type GHC.Integer.Type.divInteger_entry, @object
GHC.Integer.Type.divInteger_entry:
_c6Qg:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6Qh
_c6Qi:
	movq $block_c6Qe_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.divModInteger_entry
_c6Qh:
	movl $GHC.Integer.Type.divInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.divInteger_entry, .-GHC.Integer.Type.divInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.600092081 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.divInteger_info
.type GHC.Integer.Type.divInteger_info, @object
GHC.Integer.Type.divInteger_info:
	.quad	GHC.Integer.Type.divInteger_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3Xx_srt+80


==================== Asm code ====================
2018-03-16 15:53:50.600909014 UTC

.section .text
.align 8
_c6Qe:
_c6Qe:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6Qe, .-_c6Qe


==================== Asm code ====================
2018-03-16 15:53:50.60173694 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Qe_info:
	.quad	_c6Qe
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.607468451 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.modInteger_closure
.type GHC.Integer.Type.modInteger_closure, @object
GHC.Integer.Type.modInteger_closure:
	.quad	GHC.Integer.Type.modInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:50.608559351 UTC

.section .text
.align 8
.globl GHC.Integer.Type.modInteger_entry
.type GHC.Integer.Type.modInteger_entry, @object
GHC.Integer.Type.modInteger_entry:
_c6QA:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6QB
_c6QC:
	movq $block_c6Qy_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.divModInteger_entry
_c6QB:
	movl $GHC.Integer.Type.modInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.modInteger_entry, .-GHC.Integer.Type.modInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.609546134 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.modInteger_info
.type GHC.Integer.Type.modInteger_info, @object
GHC.Integer.Type.modInteger_info:
	.quad	GHC.Integer.Type.modInteger_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S3Xx_srt+80


==================== Asm code ====================
2018-03-16 15:53:50.610649914 UTC

.section .text
.align 8
_c6Qy:
_c6Qy:
	movq %r14,%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6Qy, .-_c6Qy


==================== Asm code ====================
2018-03-16 15:53:50.611557393 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Qy_info:
	.quad	_c6Qy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.615179786 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.quotInteger_closure
.type GHC.Integer.Type.quotInteger_closure, @object
GHC.Integer.Type.quotInteger_closure:
	.quad	GHC.Integer.Type.quotInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.616647332 UTC

.section .text
.align 8
.globl GHC.Integer.Type.quotInteger_entry
.type GHC.Integer.Type.quotInteger_entry, @object
GHC.Integer.Type.quotInteger_entry:
_c6QU:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6QV
_c6QW:
	movq $block_c6QS_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.quotRemInteger_entry
_c6QV:
	movl $GHC.Integer.Type.quotInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.quotInteger_entry, .-GHC.Integer.Type.quotInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.618214655 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.quotInteger_info
.type GHC.Integer.Type.quotInteger_info, @object
GHC.Integer.Type.quotInteger_info:
	.quad	GHC.Integer.Type.quotInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.61907336 UTC

.section .text
.align 8
_c6QS:
_c6QS:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6QS, .-_c6QS


==================== Asm code ====================
2018-03-16 15:53:50.619732011 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6QS_info:
	.quad	_c6QS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.623269463 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.remInteger_closure
.type GHC.Integer.Type.remInteger_closure, @object
GHC.Integer.Type.remInteger_closure:
	.quad	GHC.Integer.Type.remInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.62425477 UTC

.section .text
.align 8
.globl GHC.Integer.Type.remInteger_entry
.type GHC.Integer.Type.remInteger_entry, @object
GHC.Integer.Type.remInteger_entry:
_c6Re:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c6Rf
_c6Rg:
	movq $block_c6Rc_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.quotRemInteger_entry
_c6Rf:
	movl $GHC.Integer.Type.remInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.remInteger_entry, .-GHC.Integer.Type.remInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.625044096 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.remInteger_info
.type GHC.Integer.Type.remInteger_info, @object
GHC.Integer.Type.remInteger_info:
	.quad	GHC.Integer.Type.remInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.625864099 UTC

.section .text
.align 8
_c6Rc:
_c6Rc:
	movq %r14,%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6Rc, .-_c6Rc


==================== Asm code ====================
2018-03-16 15:53:50.626737336 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Rc_info:
	.quad	_c6Rc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.633173329 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.andDigits_closure
.type GHC.Integer.Type.andDigits_closure, @object
GHC.Integer.Type.andDigits_closure:
	.quad	GHC.Integer.Type.andDigits_info


==================== Asm code ====================
2018-03-16 15:53:50.634521932 UTC

.section .text
.align 8
.globl GHC.Integer.Type.andDigits_entry
.type GHC.Integer.Type.andDigits_entry, @object
GHC.Integer.Type.andDigits_entry:
_c6RD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c6RE
_c6RF:
	movq $block_c6Rw_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c6Rw
_c6Rx:
	movq (%rbx),%rax
	jmp *(%rax)
_c6RE:
	movl $GHC.Integer.Type.andDigits_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.andDigits_entry, .-GHC.Integer.Type.andDigits_entry


==================== Asm code ====================
2018-03-16 15:53:50.635306067 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.andDigits_info
.type GHC.Integer.Type.andDigits_info, @object
GHC.Integer.Type.andDigits_info:
	.quad	GHC.Integer.Type.andDigits_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.636340521 UTC

.section .text
.align 8
_c6Rw:
_c6Rw:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c6RA
_c6RB:
	movq $block_c6S8_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c6S8
_c6Sa:
	movq (%rbx),%rax
	jmp *(%rax)
_c6RA:
	movq $block_c6RI_info,-8(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %rdx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c6RI
_c6RK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6Rw, .-_c6Rw


==================== Asm code ====================
2018-03-16 15:53:50.637229535 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Rw_info:
	.quad	_c6Rw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.638742324 UTC

.section .text
.align 8
_c6RI:
_c6RI:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6RY
_c6S5:
	movl $GHC.Integer.Type.None_closure+2,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6RY:
	movq $block_c6RO_info,(%rbp)
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.Integer.Type.andDigits_entry
	.size _c6RI, .-_c6RI


==================== Asm code ====================
2018-03-16 15:53:50.639549502 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6RI_info:
	.quad	_c6RI
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.640466371 UTC

.section .text
.align 8
_c6RO:
_c6RO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6S1
_c6S0:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rax
	andq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6S1:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6RO, .-_c6RO


==================== Asm code ====================
2018-03-16 15:53:50.641658887 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6RO_info:
	.quad	_c6RO
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.642514678 UTC

.section .text
.align 8
_c6S8:
_c6S8:
	movl $GHC.Integer.Type.None_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6S8, .-_c6S8


==================== Asm code ====================
2018-03-16 15:53:50.643234332 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6S8_info:
	.quad	_c6S8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.650298185 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.andDigitsOnes_closure
.type GHC.Integer.Type.andDigitsOnes_closure, @object
GHC.Integer.Type.andDigitsOnes_closure:
	.quad	GHC.Integer.Type.andDigitsOnes_info


==================== Asm code ====================
2018-03-16 15:53:50.65228785 UTC

.section .text
.align 8
.globl GHC.Integer.Type.andDigitsOnes_entry
.type GHC.Integer.Type.andDigitsOnes_entry, @object
GHC.Integer.Type.andDigitsOnes_entry:
_c6SY:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c6SZ
_c6T0:
	movq $block_c6SR_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c6SR
_c6SS:
	movq (%rbx),%rax
	jmp *(%rax)
_c6SZ:
	movl $GHC.Integer.Type.andDigitsOnes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.andDigitsOnes_entry, .-GHC.Integer.Type.andDigitsOnes_entry


==================== Asm code ====================
2018-03-16 15:53:50.653372114 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.andDigitsOnes_info
.type GHC.Integer.Type.andDigitsOnes_info, @object
GHC.Integer.Type.andDigitsOnes_info:
	.quad	GHC.Integer.Type.andDigitsOnes_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.65451282 UTC

.section .text
.align 8
_c6SR:
_c6SR:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c6SV
_c6SW:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c6SV:
	movq $block_c6T3_info,-8(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %rdx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c6T3
_c6T5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6SR, .-_c6SR


==================== Asm code ====================
2018-03-16 15:53:50.655354061 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6SR_info:
	.quad	_c6SR
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.65626717 UTC

.section .text
.align 8
_c6T3:
_c6T3:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6Tj
_c6Tq:
	movl $GHC.Integer.Type.None_closure+2,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6Tj:
	movq $block_c6T9_info,(%rbp)
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.Integer.Type.andDigitsOnes_entry
	.size _c6T3, .-_c6T3


==================== Asm code ====================
2018-03-16 15:53:50.657075751 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6T3_info:
	.quad	_c6T3
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.658461609 UTC

.section .text
.align 8
_c6T9:
_c6T9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6Tm
_c6Tl:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rax
	andq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6Tm:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6T9, .-_c6T9


==================== Asm code ====================
2018-03-16 15:53:50.659195042 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6T9_info:
	.quad	_c6T9
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.665545071 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.orDigits_closure
.type GHC.Integer.Type.orDigits_closure, @object
GHC.Integer.Type.orDigits_closure:
	.quad	GHC.Integer.Type.orDigits_info


==================== Asm code ====================
2018-03-16 15:53:50.666637666 UTC

.section .text
.align 8
.globl GHC.Integer.Type.orDigits_entry
.type GHC.Integer.Type.orDigits_entry, @object
GHC.Integer.Type.orDigits_entry:
_c6U9:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c6Ua
_c6Ub:
	movq $block_c6U2_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c6U2
_c6U3:
	movq (%rbx),%rax
	jmp *(%rax)
_c6Ua:
	movl $GHC.Integer.Type.orDigits_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.orDigits_entry, .-GHC.Integer.Type.orDigits_entry


==================== Asm code ====================
2018-03-16 15:53:50.667401263 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.orDigits_info
.type GHC.Integer.Type.orDigits_info, @object
GHC.Integer.Type.orDigits_info:
	.quad	GHC.Integer.Type.orDigits_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.668377897 UTC

.section .text
.align 8
_c6U2:
_c6U2:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c6U6
_c6U7:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c6U6:
	movq $block_c6Ue_info,-16(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rdx,-8(%rbp)
	movq %rsi,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c6Ue
_c6Ug:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6U2, .-_c6U2


==================== Asm code ====================
2018-03-16 15:53:50.66922241 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6U2_info:
	.quad	_c6U2
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.670157494 UTC

.section .text
.align 8
_c6Ue:
_c6Ue:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6Uu
_c6UB:
	movq 24(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c6Uu:
	movq 8(%rbp),%rax
	movq $block_c6Uk_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.orDigits_entry
	.size _c6Ue, .-_c6Ue


==================== Asm code ====================
2018-03-16 15:53:50.670934691 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Ue_info:
	.quad	_c6Ue
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.671847739 UTC

.section .text
.align 8
_c6Uk:
_c6Uk:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6Ux
_c6Uw:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	orq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6Ux:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6Uk, .-_c6Uk


==================== Asm code ====================
2018-03-16 15:53:50.672686784 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Uk_info:
	.quad	_c6Uk
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.688202828 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.orInteger_closure
.type GHC.Integer.Type.orInteger_closure, @object
GHC.Integer.Type.orInteger_closure:
	.quad	GHC.Integer.Type.orInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.689596016 UTC

.section .text
.align 8
.globl GHC.Integer.Type.orInteger_entry
.type GHC.Integer.Type.orInteger_entry, @object
GHC.Integer.Type.orInteger_entry:
_c6Vl:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c6Vm
_u6XG:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c6Vb
_c6Vm:
	movl $GHC.Integer.Type.orInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.orInteger_entry, .-GHC.Integer.Type.orInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.690791778 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.orInteger_info
.type GHC.Integer.Type.orInteger_info, @object
GHC.Integer.Type.orInteger_info:
	.quad	GHC.Integer.Type.orInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.691844335 UTC

.section .text
.align 8
_c6Vb:
_c6Vb:
	movq (%rbp),%rax
	movq $block_c6Ve_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c6Ve
_c6Vf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6Vb, .-_c6Vb


==================== Asm code ====================
2018-03-16 15:53:50.693173302 UTC

.section .text
.align 8
_c6Ve:
_c6Ve:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	je _c6Vj
_c6Vi:
	movq $block_c6Vq_info,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c6Vq
_c6Vs:
	movq (%rbx),%rax
	jmp *(%rax)
_c6Vj:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6Ve, .-_c6Ve


==================== Asm code ====================
2018-03-16 15:53:50.694190455 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Ve_info:
	.quad	_c6Ve
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.69539243 UTC

.section .text
.align 8
_c6Vq:
_c6Vq:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	je _c6Xw
_c6Vz:
	movq $block_c6Vw_info,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c6Vw
_c6VA:
	movq (%rbx),%rax
	jmp *(%rax)
_c6Xw:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6Vq, .-_c6Vq


==================== Asm code ====================
2018-03-16 15:53:50.696267845 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Vq_info:
	.quad	_c6Vq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.698225831 UTC

.section .text
.align 8
_c6Vw:
_c6Vw:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $2,%rcx
	jb _c6VH
_c6WG:
	movq $block_c6WE_info,-8(%rbp)
	movq %rbx,%rcx
	movq 6(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c6WE
_c6WH:
	movq (%rbx),%rax
	jmp *(%rax)
_c6VH:
	movq $block_c6VE_info,(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c6VE
_c6VI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c6Vw, .-_c6Vw


==================== Asm code ====================
2018-03-16 15:53:50.699129342 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Vw_info:
	.quad	_c6Vw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.700135467 UTC

.section .text
.align 8
_c6VE:
_c6VE:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	jb _c6VT
_c6W9:
	movq $block_c6VZ_info,(%rbp)
	movl $GHC.Integer.Type.onePositive_closure+1,%esi
	movq 6(%rbx),%r14
	jmp GHC.Integer.Type.minusPositive_entry
_c6VT:
	movq 8(%rbp),%rax
	movq $block_c6VM_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.orDigits_entry
	.size _c6VE, .-_c6VE


==================== Asm code ====================
2018-03-16 15:53:50.701154999 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6VE_info:
	.quad	_c6VE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.702325296 UTC

.section .text
.align 8
_c6VM:
_c6VM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6VW
_c6VV:
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c6VW:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c6VM, .-_c6VM


==================== Asm code ====================
2018-03-16 15:53:50.703284072 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6VM_info:
	.quad	_c6VM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.704219003 UTC

.section .text
.align 8
_c6VZ:
_c6VZ:
	movq $block_c6W3_info,(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp GHC.Integer.Type.flipBitsDigits_entry
	.size _c6VZ, .-_c6VZ


==================== Asm code ====================
2018-03-16 15:53:50.705129128 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6VZ_info:
	.quad	_c6VZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.706109701 UTC

.section .text
.align 8
_c6W3:
_c6W3:
	movq 8(%rbp),%rax
	movq $block_c6W7_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.andDigitsOnes_entry
	.size _c6W3, .-_c6W3


==================== Asm code ====================
2018-03-16 15:53:50.706861404 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6W3_info:
	.quad	_c6W3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.707664244 UTC

.section .text
.align 8
_c6W7:
_c6W7:
	movq $block_c6Wf_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.$wsuccPositive_entry
	.size _c6W7, .-_c6W7


==================== Asm code ====================
2018-03-16 15:53:50.708865018 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6W7_info:
	.quad	_c6W7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.709914317 UTC

.section .text
.align 8
_c6Wf:
_c6Wf:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c6Wg
	.size _c6Wf, .-_c6Wf


==================== Asm code ====================
2018-03-16 15:53:50.710543996 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Wf_info:
	.quad	_c6Wf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.711445308 UTC

.section .text
.align 8
_c6Wg:
_c6Wg:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6Wo
_c6Wn:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c6Wk_info,16(%rbp)
	leaq -15(%r12),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.removeZeroTails_entry
_c6Wo:
	movq $24,904(%r13)
	movq $block_c6Wg_info,(%rbp)
	jmp stg_gc_noregs
	.size _c6Wg, .-_c6Wg


==================== Asm code ====================
2018-03-16 15:53:50.712317021 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Wg_info:
	.quad	_c6Wg
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.713205436 UTC

.section .text
.align 8
_c6Wk:
_c6Wk:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6Wu
_u6XI:
	addq $8,%rbp
	jmp _c6Xs
_c6Wx:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_c6Wu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6Wx
_c6Ww:
	movq $GHC.Integer.Type.Negative_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6Wk, .-_c6Wk


==================== Asm code ====================
2018-03-16 15:53:50.714058071 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Wk_info:
	.quad	_c6Wk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.714947738 UTC

.section .text
.align 8
_c6WE:
_c6WE:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	jb _c6WN
_c6X0:
	movq $block_c6WQ_info,(%rbp)
	movl $GHC.Integer.Type.onePositive_closure+1,%esi
	movq 6(%rbx),%r14
	jmp GHC.Integer.Type.minusPositive_entry
_c6WN:
	movq %rbx,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c6Vb
	.size _c6WE, .-_c6WE


==================== Asm code ====================
2018-03-16 15:53:50.715762499 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6WE_info:
	.quad	_c6WE
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.716619818 UTC

.section .text
.align 8
_c6WQ:
_c6WQ:
	movq 8(%rbp),%rax
	movq $block_c6WU_info,8(%rbp)
	movl $GHC.Integer.Type.onePositive_closure+1,%esi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
	.size _c6WQ, .-_c6WQ


==================== Asm code ====================
2018-03-16 15:53:50.717589296 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6WQ_info:
	.quad	_c6WQ
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.718478964 UTC

.section .text
.align 8
_c6WU:
_c6WU:
	movq 8(%rbp),%rax
	movq $block_c6WY_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.andDigits_entry
	.size _c6WU, .-_c6WU


==================== Asm code ====================
2018-03-16 15:53:50.719935313 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6WU_info:
	.quad	_c6WU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.720817025 UTC

.section .text
.align 8
_c6WY:
_c6WY:
	movq $block_c6X6_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.$wsuccPositive_entry
	.size _c6WY, .-_c6WY


==================== Asm code ====================
2018-03-16 15:53:50.721783901 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6WY_info:
	.quad	_c6WY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.722784513 UTC

.section .text
.align 8
_c6X6:
_c6X6:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c6X7
	.size _c6X6, .-_c6X6


==================== Asm code ====================
2018-03-16 15:53:50.723527648 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6X6_info:
	.quad	_c6X6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.724437233 UTC

.section .text
.align 8
_c6X7:
_c6X7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c6Xf
_c6Xe:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c6Xb_info,16(%rbp)
	leaq -15(%r12),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.removeZeroTails_entry
_c6Xf:
	movq $24,904(%r13)
	movq $block_c6X7_info,(%rbp)
	jmp stg_gc_noregs
	.size _c6X7, .-_c6X7


==================== Asm code ====================
2018-03-16 15:53:50.725721756 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6X7_info:
	.quad	_c6X7
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.726707181 UTC

.section .text
.align 8
_c6Xb:
_c6Xb:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6Xl
_u6XL:
	addq $8,%rbp
	jmp _c6Xs
_c6Xo:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_c6Xl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c6Xo
_c6Xn:
	movq $GHC.Integer.Type.Negative_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6Xb, .-_c6Xb


==================== Asm code ====================
2018-03-16 15:53:50.727580387 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Xb_info:
	.quad	_c6Xb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.728382268 UTC

.section .text
.align 8
_c6Xs:
_c6Xs:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6Xs, .-_c6Xs


==================== Asm code ====================
2018-03-16 15:53:50.737619473 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.mkInteger_f_closure
.type GHC.Integer.Type.mkInteger_f_closure, @object
GHC.Integer.Type.mkInteger_f_closure:
	.quad	GHC.Integer.Type.mkInteger_f_info


==================== Asm code ====================
2018-03-16 15:53:50.739245868 UTC

.section .text
.align 8
.globl GHC.Integer.Type.mkInteger_f_entry
.type GHC.Integer.Type.mkInteger_f_entry, @object
GHC.Integer.Type.mkInteger_f_entry:
_c6ZF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c6ZG
_c6ZH:
	movq $block_c6Zy_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c6Zy
_c6Zz:
	movq (%rbx),%rax
	jmp *(%rax)
_c6ZG:
	movl $GHC.Integer.Type.mkInteger_f_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.mkInteger_f_entry, .-GHC.Integer.Type.mkInteger_f_entry


==================== Asm code ====================
2018-03-16 15:53:50.740491375 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.mkInteger_f_info
.type GHC.Integer.Type.mkInteger_f_info, @object
GHC.Integer.Type.mkInteger_f_info:
	.quad	GHC.Integer.Type.mkInteger_f_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:50.741825549 UTC

.section .text
.align 8
_c6Zy:
_c6Zy:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c6ZC
_c6ZD:
	movq $block_c6ZN_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c6ZN
_c6ZO:
	movq (%rbx),%rax
	jmp *(%rax)
_c6ZC:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c6Zy, .-_c6Zy


==================== Asm code ====================
2018-03-16 15:53:50.743017931 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6Zy_info:
	.quad	_c6Zy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.744185731 UTC

.section .text
.align 8
_c6ZN:
_c6ZN:
	movq $block_c6ZS_info,(%rbp)
	movq 8(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.Integer.Type.mkInteger_f_entry
	.size _c6ZN, .-_c6ZN


==================== Asm code ====================
2018-03-16 15:53:50.745236849 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6ZN_info:
	.quad	_c6ZN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.746410104 UTC

.section .text
.align 8
_c6ZS:
_c6ZS:
	movq $block_c6ZW_info,(%rbp)
	movl $31,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _c6ZS, .-_c6ZS


==================== Asm code ====================
2018-03-16 15:53:50.747897436 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6ZS_info:
	.quad	_c6ZS
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.749001776 UTC

.section .text
.align 8
_c6ZW:
_c6ZW:
	movq $block_c700_info,(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c6ZW, .-_c6ZW


==================== Asm code ====================
2018-03-16 15:53:50.750037177 UTC

.section .data.rel.ro
.align 8
.align 1
block_c6ZW_info:
	.quad	_c6ZW
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.751155534 UTC

.section .text
.align 8
_c700:
_c700:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.orInteger_entry
	.size _c700, .-_c700


==================== Asm code ====================
2018-03-16 15:53:50.752118519 UTC

.section .data.rel.ro
.align 8
.align 1
block_c700_info:
	.quad	_c700
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.757807282 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.mkInteger_closure
.type GHC.Integer.Type.mkInteger_closure, @object
GHC.Integer.Type.mkInteger_closure:
	.quad	GHC.Integer.Type.mkInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.759462157 UTC

.section .text
.align 8
.globl GHC.Integer.Type.mkInteger_entry
.type GHC.Integer.Type.mkInteger_entry, @object
GHC.Integer.Type.mkInteger_entry:
_c70M:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c70N
_c70O:
	movq $block_c70F_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c70F
_c70G:
	movq (%rbx),%rax
	jmp *(%rax)
_c70N:
	movl $GHC.Integer.Type.mkInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.mkInteger_entry, .-GHC.Integer.Type.mkInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.760704112 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.mkInteger_info
.type GHC.Integer.Type.mkInteger_info, @object
GHC.Integer.Type.mkInteger_info:
	.quad	GHC.Integer.Type.mkInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.762836727 UTC

.section .text
.align 8
_c70F:
_c70F:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c70J
_c70K:
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.mkInteger_f_entry
_c70J:
	movq $block_c70R_info,8(%rbp)
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.mkInteger_f_entry
	.size _c70F, .-_c70F


==================== Asm code ====================
2018-03-16 15:53:50.763996086 UTC

.section .data.rel.ro
.align 8
.align 1
block_c70F_info:
	.quad	_c70F
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.765091981 UTC

.section .text
.align 8
_c70R:
_c70R:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
	.size _c70R, .-_c70R


==================== Asm code ====================
2018-03-16 15:53:50.766177312 UTC

.section .data.rel.ro
.align 8
.align 1
block_c70R_info:
	.quad	_c70R
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.790583992 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.andInteger_closure
.type GHC.Integer.Type.andInteger_closure, @object
GHC.Integer.Type.andInteger_closure:
	.quad	GHC.Integer.Type.andInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.791950484 UTC

.section .text
.align 8
.globl GHC.Integer.Type.andInteger_entry
.type GHC.Integer.Type.andInteger_entry, @object
GHC.Integer.Type.andInteger_entry:
_c71q:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c71r
_u73V:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c71g
_c71r:
	movl $GHC.Integer.Type.andInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.andInteger_entry, .-GHC.Integer.Type.andInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.792827537 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.andInteger_info
.type GHC.Integer.Type.andInteger_info, @object
GHC.Integer.Type.andInteger_info:
	.quad	GHC.Integer.Type.andInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.794104972 UTC

.section .text
.align 8
_c71g:
_c71g:
	movq (%rbp),%rax
	movq $block_c71j_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c71j
_c71k:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c71g, .-_c71g


==================== Asm code ====================
2018-03-16 15:53:50.795736467 UTC

.section .text
.align 8
_c71j:
_c71j:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	je _c71o
_c71n:
	movq $block_c71v_info,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c71v
_c71x:
	movq (%rbx),%rax
	jmp *(%rax)
_c71o:
	movq $block_c73H_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c73H
_c73J:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c71j, .-_c71j


==================== Asm code ====================
2018-03-16 15:53:50.796604795 UTC

.section .data.rel.ro
.align 8
.align 1
block_c71j_info:
	.quad	_c71j
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.797657209 UTC

.section .text
.align 8
_c73H:
_c73H:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c73H, .-_c73H


==================== Asm code ====================
2018-03-16 15:53:50.798650632 UTC

.section .data.rel.ro
.align 8
.align 1
block_c73H_info:
	.quad	_c73H
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.799748522 UTC

.section .text
.align 8
_c71v:
_c71v:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _u73W
_c71E:
	movq $block_c71B_info,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c71B
_c71F:
	movq (%rbx),%rax
	jmp *(%rax)
_u73W:
	addq $16,%rbp
	jmp _c73E
	.size _c71v, .-_c71v


==================== Asm code ====================
2018-03-16 15:53:50.800653349 UTC

.section .data.rel.ro
.align 8
.align 1
block_c71v_info:
	.quad	_c71v
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.801797703 UTC

.section .text
.align 8
_c71B:
_c71B:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $2,%rcx
	jb _c71M
_c72O:
	movq $block_c72M_info,-8(%rbp)
	movq %rbx,%rcx
	movq 6(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c72M
_c72P:
	movq (%rbx),%rax
	jmp *(%rax)
_c71M:
	movq $block_c71J_info,(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c71J
_c71N:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c71B, .-_c71B


==================== Asm code ====================
2018-03-16 15:53:50.802613284 UTC

.section .data.rel.ro
.align 8
.align 1
block_c71B_info:
	.quad	_c71B
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.803494 UTC

.section .text
.align 8
_c71J:
_c71J:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	jb _c71U
_c72p:
	movq $block_c72f_info,(%rbp)
	movl $GHC.Integer.Type.onePositive_closure+1,%esi
	movq 6(%rbx),%r14
	jmp GHC.Integer.Type.minusPositive_entry
_c71U:
	movq 8(%rbp),%rax
	movq $block_c71R_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.andDigits_entry
	.size _c71J, .-_c71J


==================== Asm code ====================
2018-03-16 15:53:50.804255093 UTC

.section .data.rel.ro
.align 8
.align 1
block_c71J_info:
	.quad	_c71J
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.805320702 UTC

.section .text
.align 8
_c71R:
_c71R:
	movq $block_c71Y_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.removeZeroTails_entry
	.size _c71R, .-_c71R


==================== Asm code ====================
2018-03-16 15:53:50.806343897 UTC

.section .data.rel.ro
.align 8
.align 1
block_c71R_info:
	.quad	_c71R
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.808109272 UTC

.section .text
.align 8
_c71Y:
_c71Y:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c725
_u73X:
	addq $8,%rbp
	jmp _c73E
_c728:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_c725:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c728
_c727:
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c71Y, .-_c71Y


==================== Asm code ====================
2018-03-16 15:53:50.809106515 UTC

.section .data.rel.ro
.align 8
.align 1
block_c71Y_info:
	.quad	_c71Y
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.810165904 UTC

.section .text
.align 8
_c72f:
_c72f:
	movq $block_c72j_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.flipBitsDigits_entry
	.size _c72f, .-_c72f


==================== Asm code ====================
2018-03-16 15:53:50.810868107 UTC

.section .data.rel.ro
.align 8
.align 1
block_c72f_info:
	.quad	_c72f
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.811714472 UTC

.section .text
.align 8
_c72j:
_c72j:
	movq 8(%rbp),%rax
	movq $block_c72n_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.andDigitsOnes_entry
	.size _c72j, .-_c72j


==================== Asm code ====================
2018-03-16 15:53:50.812658455 UTC

.section .data.rel.ro
.align 8
.align 1
block_c72j_info:
	.quad	_c72j
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.813566774 UTC

.section .text
.align 8
_c72n:
_c72n:
	movq $block_c72v_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.removeZeroTails_entry
	.size _c72n, .-_c72n


==================== Asm code ====================
2018-03-16 15:53:50.814520477 UTC

.section .data.rel.ro
.align 8
.align 1
block_c72n_info:
	.quad	_c72n
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.815735594 UTC

.section .text
.align 8
_c72v:
_c72v:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c72C
_u73Y:
	addq $8,%rbp
	jmp _c73E
_c72F:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_c72C:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c72F
_c72E:
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c72v, .-_c72v


==================== Asm code ====================
2018-03-16 15:53:50.816760541 UTC

.section .data.rel.ro
.align 8
.align 1
block_c72v_info:
	.quad	_c72v
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.817850084 UTC

.section .text
.align 8
_c72M:
_c72M:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	jb _c72V
_c738:
	movq $block_c72Y_info,(%rbp)
	movl $GHC.Integer.Type.onePositive_closure+1,%esi
	movq 6(%rbx),%r14
	jmp GHC.Integer.Type.minusPositive_entry
_c72V:
	movq %rbx,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c71g
	.size _c72M, .-_c72M


==================== Asm code ====================
2018-03-16 15:53:50.81923701 UTC

.section .data.rel.ro
.align 8
.align 1
block_c72M_info:
	.quad	_c72M
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.820103803 UTC

.section .text
.align 8
_c72Y:
_c72Y:
	movq 8(%rbp),%rax
	movq $block_c732_info,8(%rbp)
	movl $GHC.Integer.Type.onePositive_closure+1,%esi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
	.size _c72Y, .-_c72Y


==================== Asm code ====================
2018-03-16 15:53:50.820908616 UTC

.section .data.rel.ro
.align 8
.align 1
block_c72Y_info:
	.quad	_c72Y
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.821765564 UTC

.section .text
.align 8
_c732:
_c732:
	movq 8(%rbp),%rax
	movq $block_c736_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.orDigits_entry
	.size _c732, .-_c732


==================== Asm code ====================
2018-03-16 15:53:50.822523619 UTC

.section .data.rel.ro
.align 8
.align 1
block_c732_info:
	.quad	_c732
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.823335039 UTC

.section .text
.align 8
_c736:
_c736:
	movq $block_c73e_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.$wsuccPositive_entry
	.size _c736, .-_c736


==================== Asm code ====================
2018-03-16 15:53:50.82411724 UTC

.section .data.rel.ro
.align 8
.align 1
block_c736_info:
	.quad	_c736
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.824909159 UTC

.section .text
.align 8
_c73e:
_c73e:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c73f
	.size _c73e, .-_c73e


==================== Asm code ====================
2018-03-16 15:53:50.825873588 UTC

.section .data.rel.ro
.align 8
.align 1
block_c73e_info:
	.quad	_c73e
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.826847354 UTC

.section .text
.align 8
_c73f:
_c73f:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c73n
_c73m:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c73j_info,16(%rbp)
	leaq -15(%r12),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.removeZeroTails_entry
_c73n:
	movq $24,904(%r13)
	movq $block_c73f_info,(%rbp)
	jmp stg_gc_noregs
	.size _c73f, .-_c73f


==================== Asm code ====================
2018-03-16 15:53:50.827904901 UTC

.section .data.rel.ro
.align 8
.align 1
block_c73f_info:
	.quad	_c73f
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.82968541 UTC

.section .text
.align 8
_c73j:
_c73j:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c73t
_u741:
	addq $8,%rbp
	jmp _c73E
_c73w:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_c73t:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c73w
_c73v:
	movq $GHC.Integer.Type.Negative_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c73j, .-_c73j


==================== Asm code ====================
2018-03-16 15:53:50.830661996 UTC

.section .data.rel.ro
.align 8
.align 1
block_c73j_info:
	.quad	_c73j
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.831672581 UTC

.section .text
.align 8
_c73E:
_c73E:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c73E, .-_c73E


==================== Asm code ====================
2018-03-16 15:53:50.836405516 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.testBitInteger_closure
.type GHC.Integer.Type.testBitInteger_closure, @object
GHC.Integer.Type.testBitInteger_closure:
	.quad	GHC.Integer.Type.testBitInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.838015745 UTC

.section .text
.align 8
.globl GHC.Integer.Type.testBitInteger_entry
.type GHC.Integer.Type.testBitInteger_entry, @object
GHC.Integer.Type.testBitInteger_entry:
_c75Q:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c75Y
_c75Z:
	movq $block_c75O_info,-16(%rbp)
	movq %r14,%rax
	movl $GHC.Integer.Type.oneInteger_closure+1,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c75Y:
	movl $GHC.Integer.Type.testBitInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.testBitInteger_entry, .-GHC.Integer.Type.testBitInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.838870575 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.testBitInteger_info
.type GHC.Integer.Type.testBitInteger_info, @object
GHC.Integer.Type.testBitInteger_info:
	.quad	GHC.Integer.Type.testBitInteger_entry
	.quad	0
	.quad	14
	.quad	8589934606


==================== Asm code ====================
2018-03-16 15:53:50.84003255 UTC

.section .text
.align 8
_c75O:
_c75O:
	movq 8(%rbp),%rax
	movq $block_c75T_info,8(%rbp)
	movq %rbx,%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.andInteger_entry
	.size _c75O, .-_c75O


==================== Asm code ====================
2018-03-16 15:53:50.841101289 UTC

.section .data.rel.ro
.align 8
.align 1
block_c75O_info:
	.quad	_c75O
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.842493207 UTC

.section .text
.align 8
_c75T:
_c75T:
	movq $block_c75X_info,(%rbp)
	movl $GHC.Integer.Type.Naught_closure+3,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.neqInteger#_entry
	.size _c75T, .-_c75T


==================== Asm code ====================
2018-03-16 15:53:50.843240398 UTC

.section .data.rel.ro
.align 8
.align 1
block_c75T_info:
	.quad	_c75T
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.844209825 UTC

.section .text
.align 8
_c75X:
_c75X:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl(%rbx),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c75X, .-_c75X


==================== Asm code ====================
2018-03-16 15:53:50.845325369 UTC

.section .data.rel.ro
.align 8
.align 1
block_c75X_info:
	.quad	_c75X
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.851945963 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.xorDigits_closure
.type GHC.Integer.Type.xorDigits_closure, @object
GHC.Integer.Type.xorDigits_closure:
	.quad	GHC.Integer.Type.xorDigits_info


==================== Asm code ====================
2018-03-16 15:53:50.853977197 UTC

.section .text
.align 8
.globl GHC.Integer.Type.xorDigits_entry
.type GHC.Integer.Type.xorDigits_entry, @object
GHC.Integer.Type.xorDigits_entry:
_c76x:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c76y
_c76z:
	movq $block_c76q_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c76q
_c76r:
	movq (%rbx),%rax
	jmp *(%rax)
_c76y:
	movl $GHC.Integer.Type.xorDigits_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.xorDigits_entry, .-GHC.Integer.Type.xorDigits_entry


==================== Asm code ====================
2018-03-16 15:53:50.855395586 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.xorDigits_info
.type GHC.Integer.Type.xorDigits_info, @object
GHC.Integer.Type.xorDigits_info:
	.quad	GHC.Integer.Type.xorDigits_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.856546625 UTC

.section .text
.align 8
_c76q:
_c76q:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c76u
_c76v:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c76u:
	movq $block_c76C_info,-16(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rdx,-8(%rbp)
	movq %rsi,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c76C
_c76E:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c76q, .-_c76q


==================== Asm code ====================
2018-03-16 15:53:50.857736322 UTC

.section .data.rel.ro
.align 8
.align 1
block_c76q_info:
	.quad	_c76q
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.858686342 UTC

.section .text
.align 8
_c76C:
_c76C:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c76S
_c76Z:
	movq 24(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c76S:
	movq 8(%rbp),%rax
	movq $block_c76I_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.xorDigits_entry
	.size _c76C, .-_c76C


==================== Asm code ====================
2018-03-16 15:53:50.859486769 UTC

.section .data.rel.ro
.align 8
.align 1
block_c76C_info:
	.quad	_c76C
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.860369658 UTC

.section .text
.align 8
_c76I:
_c76I:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76V
_c76U:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	xorq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c76V:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c76I, .-_c76I


==================== Asm code ====================
2018-03-16 15:53:50.861188842 UTC

.section .data.rel.ro
.align 8
.align 1
block_c76I_info:
	.quad	_c76I
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.874703408 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.xorInteger_closure
.type GHC.Integer.Type.xorInteger_closure, @object
GHC.Integer.Type.xorInteger_closure:
	.quad	GHC.Integer.Type.xorInteger_info


==================== Asm code ====================
2018-03-16 15:53:50.876196424 UTC

.section .text
.align 8
.globl GHC.Integer.Type.xorInteger_entry
.type GHC.Integer.Type.xorInteger_entry, @object
GHC.Integer.Type.xorInteger_entry:
_c77J:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c77K
_u7a3:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c77z
_c77K:
	movl $GHC.Integer.Type.xorInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.xorInteger_entry, .-GHC.Integer.Type.xorInteger_entry


==================== Asm code ====================
2018-03-16 15:53:50.877001124 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.xorInteger_info
.type GHC.Integer.Type.xorInteger_info, @object
GHC.Integer.Type.xorInteger_info:
	.quad	GHC.Integer.Type.xorInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:50.878232562 UTC

.section .text
.align 8
_c77z:
_c77z:
	movq (%rbp),%rax
	movq $block_c77C_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c77C
_c77D:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c77z, .-_c77z


==================== Asm code ====================
2018-03-16 15:53:50.879228901 UTC

.section .text
.align 8
_c77C:
_c77C:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	je _c77H
_c77G:
	movq $block_c77O_info,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c77O
_c77Q:
	movq (%rbx),%rax
	jmp *(%rax)
_c77H:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c77C, .-_c77C


==================== Asm code ====================
2018-03-16 15:53:50.880059733 UTC

.section .data.rel.ro
.align 8
.align 1
block_c77C_info:
	.quad	_c77C
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.880981597 UTC

.section .text
.align 8
_c77O:
_c77O:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	je _c79S
_c77X:
	movq $block_c77U_info,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c77U
_c77Y:
	movq (%rbx),%rax
	jmp *(%rax)
_c79S:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c77O, .-_c77O


==================== Asm code ====================
2018-03-16 15:53:50.881868716 UTC

.section .data.rel.ro
.align 8
.align 1
block_c77O_info:
	.quad	_c77O
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.88289982 UTC

.section .text
.align 8
_c77U:
_c77U:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $2,%rcx
	jb _c785
_c79a:
	movq $block_c798_info,-8(%rbp)
	movq %rbx,%rcx
	movq 6(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c798
_c79b:
	movq (%rbx),%rax
	jmp *(%rax)
_c785:
	movq $block_c782_info,(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c782
_c786:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c77U, .-_c77U


==================== Asm code ====================
2018-03-16 15:53:50.883738578 UTC

.section .data.rel.ro
.align 8
.align 1
block_c77U_info:
	.quad	_c77U
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.884670618 UTC

.section .text
.align 8
_c782:
_c782:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	jb _c78d
_c78E:
	movq $block_c78y_info,(%rbp)
	movl $GHC.Integer.Type.onePositive_closure+1,%esi
	movq 6(%rbx),%r14
	jmp GHC.Integer.Type.minusPositive_entry
_c78d:
	movq 8(%rbp),%rax
	movq $block_c78a_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.xorDigits_entry
	.size _c782, .-_c782


==================== Asm code ====================
2018-03-16 15:53:50.885611853 UTC

.section .data.rel.ro
.align 8
.align 1
block_c782_info:
	.quad	_c782
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.886858168 UTC

.section .text
.align 8
_c78a:
_c78a:
	movq $block_c78h_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.removeZeroTails_entry
	.size _c78a, .-_c78a


==================== Asm code ====================
2018-03-16 15:53:50.887563749 UTC

.section .data.rel.ro
.align 8
.align 1
block_c78a_info:
	.quad	_c78a
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.888506115 UTC

.section .text
.align 8
_c78h:
_c78h:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c78o
_u7a4:
	addq $8,%rbp
	jmp _c79O
_c78r:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_c78o:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c78r
_c78q:
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c78h, .-_c78h


==================== Asm code ====================
2018-03-16 15:53:50.889422866 UTC

.section .data.rel.ro
.align 8
.align 1
block_c78h_info:
	.quad	_c78h
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.890200177 UTC

.section .text
.align 8
_c78y:
_c78y:
	movq 8(%rbp),%rax
	movq $block_c78C_info,8(%rbp)
	movq %rbx,%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.xorDigits_entry
	.size _c78y, .-_c78y


==================== Asm code ====================
2018-03-16 15:53:50.89095163 UTC

.section .data.rel.ro
.align 8
.align 1
block_c78y_info:
	.quad	_c78y
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.89170789 UTC

.section .text
.align 8
_c78C:
_c78C:
	movq $block_c78J_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.$wsuccPositive_entry
	.size _c78C, .-_c78C


==================== Asm code ====================
2018-03-16 15:53:50.892413837 UTC

.section .data.rel.ro
.align 8
.align 1
block_c78C_info:
	.quad	_c78C
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.893353373 UTC

.section .text
.align 8
_c78J:
_c78J:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c78K
	.size _c78J, .-_c78J


==================== Asm code ====================
2018-03-16 15:53:50.894424349 UTC

.section .data.rel.ro
.align 8
.align 1
block_c78J_info:
	.quad	_c78J
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.89572357 UTC

.section .text
.align 8
_c78K:
_c78K:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c78S
_c78R:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c78O_info,16(%rbp)
	leaq -15(%r12),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.removeZeroTails_entry
_c78S:
	movq $24,904(%r13)
	movq $block_c78K_info,(%rbp)
	jmp stg_gc_noregs
	.size _c78K, .-_c78K


==================== Asm code ====================
2018-03-16 15:53:50.897526716 UTC

.section .data.rel.ro
.align 8
.align 1
block_c78K_info:
	.quad	_c78K
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.898964914 UTC

.section .text
.align 8
_c78O:
_c78O:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c78Y
_u7a6:
	addq $8,%rbp
	jmp _c79O
_c791:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_c78Y:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c791
_c790:
	movq $GHC.Integer.Type.Negative_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c78O, .-_c78O


==================== Asm code ====================
2018-03-16 15:53:50.900035407 UTC

.section .data.rel.ro
.align 8
.align 1
block_c78O_info:
	.quad	_c78O
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.90094376 UTC

.section .text
.align 8
_c798:
_c798:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	jb _c79h
_c79u:
	movq $block_c79k_info,(%rbp)
	movl $GHC.Integer.Type.onePositive_closure+1,%esi
	movq 6(%rbx),%r14
	jmp GHC.Integer.Type.minusPositive_entry
_c79h:
	movq %rbx,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c77z
	.size _c798, .-_c798


==================== Asm code ====================
2018-03-16 15:53:50.90200182 UTC

.section .data.rel.ro
.align 8
.align 1
block_c798_info:
	.quad	_c798
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.903004124 UTC

.section .text
.align 8
_c79k:
_c79k:
	movq 8(%rbp),%rax
	movq $block_c79o_info,8(%rbp)
	movl $GHC.Integer.Type.onePositive_closure+1,%esi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
	.size _c79k, .-_c79k


==================== Asm code ====================
2018-03-16 15:53:50.903798625 UTC

.section .data.rel.ro
.align 8
.align 1
block_c79k_info:
	.quad	_c79k
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.904581867 UTC

.section .text
.align 8
_c79o:
_c79o:
	movq 8(%rbp),%rax
	movq $block_c79s_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.xorDigits_entry
	.size _c79o, .-_c79o


==================== Asm code ====================
2018-03-16 15:53:50.905432165 UTC

.section .data.rel.ro
.align 8
.align 1
block_c79o_info:
	.quad	_c79o
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.906201254 UTC

.section .text
.align 8
_c79s:
_c79s:
	movq $block_c79A_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.removeZeroTails_entry
	.size _c79s, .-_c79s


==================== Asm code ====================
2018-03-16 15:53:50.907191254 UTC

.section .data.rel.ro
.align 8
.align 1
block_c79s_info:
	.quad	_c79s
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.908597103 UTC

.section .text
.align 8
_c79A:
_c79A:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c79H
_u7a8:
	addq $8,%rbp
	jmp _c79O
_c79K:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_c79H:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c79K
_c79J:
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c79A, .-_c79A


==================== Asm code ====================
2018-03-16 15:53:50.910146786 UTC

.section .data.rel.ro
.align 8
.align 1
block_c79A_info:
	.quad	_c79A
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:50.91109637 UTC

.section .text
.align 8
_c79O:
_c79O:
	movl $GHC.Integer.Type.Naught_closure+3,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c79O, .-_c79O


==================== Asm code ====================
2018-03-16 15:53:50.914049295 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$trModule4_bytes
.type GHC.Integer.Type.$trModule4_bytes, @object
GHC.Integer.Type.$trModule4_bytes:
	.asciz "integer-simple"


==================== Asm code ====================
2018-03-16 15:53:50.916693847 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$trModule3_closure
.type GHC.Integer.Type.$trModule3_closure, @object
GHC.Integer.Type.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:53:50.91935675 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$trModule2_bytes
.type GHC.Integer.Type.$trModule2_bytes, @object
GHC.Integer.Type.$trModule2_bytes:
	.asciz "GHC.Integer.Type"


==================== Asm code ====================
2018-03-16 15:53:50.922824078 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$trModule1_closure
.type GHC.Integer.Type.$trModule1_closure, @object
GHC.Integer.Type.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:53:50.925502664 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$trModule_closure
.type GHC.Integer.Type.$trModule_closure, @object
GHC.Integer.Type.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Integer.Type.$trModule3_closure+1
	.quad	GHC.Integer.Type.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:50.927926857 UTC

.section .data
.align 8
.align 1
$krep_r3Bp_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:50.930863512 UTC

.section .data
.align 8
.align 1
$krep1_r3Bq_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcWord#_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:50.934941917 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tcDigits2_bytes
.type GHC.Integer.Type.$tcDigits2_bytes, @object
GHC.Integer.Type.$tcDigits2_bytes:
	.asciz "Digits"


==================== Asm code ====================
2018-03-16 15:53:50.93805383 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tcDigits1_closure
.type GHC.Integer.Type.$tcDigits1_closure, @object
GHC.Integer.Type.$tcDigits1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tcDigits2_bytes


==================== Asm code ====================
2018-03-16 15:53:50.940613516 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tcDigits_closure
.type GHC.Integer.Type.$tcDigits_closure, @object
GHC.Integer.Type.$tcDigits_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tcDigits1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-1798881422218972136
	.quad	7069031713090282797
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:50.943131621 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'None1_closure
.type GHC.Integer.Type.$tc'None1_closure, @object
GHC.Integer.Type.$tc'None1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Integer.Type.$tcDigits_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:50.946296448 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tc'None3_bytes
.type GHC.Integer.Type.$tc'None3_bytes, @object
GHC.Integer.Type.$tc'None3_bytes:
	.asciz "'None"


==================== Asm code ====================
2018-03-16 15:53:50.949374398 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'None2_closure
.type GHC.Integer.Type.$tc'None2_closure, @object
GHC.Integer.Type.$tc'None2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tc'None3_bytes


==================== Asm code ====================
2018-03-16 15:53:50.952615701 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'None_closure
.type GHC.Integer.Type.$tc'None_closure, @object
GHC.Integer.Type.$tc'None_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tc'None2_closure+1
	.quad	GHC.Integer.Type.$tc'None1_closure+1
	.quad	903679638320298226
	.quad	-5469346920408273056
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:50.955912946 UTC

.section .data
.align 8
.align 1
$krep2_r3Br_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Integer.Type.$tc'None1_closure+1
	.quad	GHC.Integer.Type.$tc'None1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:50.959609888 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Some1_closure
.type GHC.Integer.Type.$tc'Some1_closure, @object
GHC.Integer.Type.$tc'Some1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_r3Bq_closure+1
	.quad	$krep2_r3Br_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:50.962705381 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tc'Some3_bytes
.type GHC.Integer.Type.$tc'Some3_bytes, @object
GHC.Integer.Type.$tc'Some3_bytes:
	.asciz "'Some"


==================== Asm code ====================
2018-03-16 15:53:50.965853197 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Some2_closure
.type GHC.Integer.Type.$tc'Some2_closure, @object
GHC.Integer.Type.$tc'Some2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tc'Some3_bytes


==================== Asm code ====================
2018-03-16 15:53:50.969316587 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Some_closure
.type GHC.Integer.Type.$tc'Some_closure, @object
GHC.Integer.Type.$tc'Some_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tc'Some2_closure+1
	.quad	GHC.Integer.Type.$tc'Some1_closure+4
	.quad	6045911439621864566
	.quad	-8743870717774539228
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:50.972796712 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tcInteger2_bytes
.type GHC.Integer.Type.$tcInteger2_bytes, @object
GHC.Integer.Type.$tcInteger2_bytes:
	.asciz "Integer"


==================== Asm code ====================
2018-03-16 15:53:50.97606874 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tcInteger1_closure
.type GHC.Integer.Type.$tcInteger1_closure, @object
GHC.Integer.Type.$tcInteger1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tcInteger2_bytes


==================== Asm code ====================
2018-03-16 15:53:50.979370909 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tcInteger_closure
.type GHC.Integer.Type.$tcInteger_closure, @object
GHC.Integer.Type.$tcInteger_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tcInteger1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-6186330285685223188
	.quad	-8863123377027041700
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:50.982564317 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Naught1_closure
.type GHC.Integer.Type.$tc'Naught1_closure, @object
GHC.Integer.Type.$tc'Naught1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Integer.Type.$tcInteger_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:50.985897816 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tc'Naught3_bytes
.type GHC.Integer.Type.$tc'Naught3_bytes, @object
GHC.Integer.Type.$tc'Naught3_bytes:
	.asciz "'Naught"


==================== Asm code ====================
2018-03-16 15:53:50.988582462 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Naught2_closure
.type GHC.Integer.Type.$tc'Naught2_closure, @object
GHC.Integer.Type.$tc'Naught2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tc'Naught3_bytes


==================== Asm code ====================
2018-03-16 15:53:50.991704678 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Naught_closure
.type GHC.Integer.Type.$tc'Naught_closure, @object
GHC.Integer.Type.$tc'Naught_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tc'Naught2_closure+1
	.quad	GHC.Integer.Type.$tc'Naught1_closure+1
	.quad	7287704174224038176
	.quad	776397532388787230
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:50.994362491 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Negative1_closure
.type GHC.Integer.Type.$tc'Negative1_closure, @object
GHC.Integer.Type.$tc'Negative1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Integer.Type.$tc'None1_closure+1
	.quad	GHC.Integer.Type.$tc'Naught1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:50.997540339 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tc'Positive2_bytes
.type GHC.Integer.Type.$tc'Positive2_bytes, @object
GHC.Integer.Type.$tc'Positive2_bytes:
	.asciz "'Positive"


==================== Asm code ====================
2018-03-16 15:53:51.000266423 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Positive1_closure
.type GHC.Integer.Type.$tc'Positive1_closure, @object
GHC.Integer.Type.$tc'Positive1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tc'Positive2_bytes


==================== Asm code ====================
2018-03-16 15:53:51.003165896 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Positive_closure
.type GHC.Integer.Type.$tc'Positive_closure, @object
GHC.Integer.Type.$tc'Positive_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tc'Positive1_closure+1
	.quad	GHC.Integer.Type.$tc'Negative1_closure+4
	.quad	6887932004110746796
	.quad	-9054853933958989681
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:51.006179551 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tc'Negative3_bytes
.type GHC.Integer.Type.$tc'Negative3_bytes, @object
GHC.Integer.Type.$tc'Negative3_bytes:
	.asciz "'Negative"


==================== Asm code ====================
2018-03-16 15:53:51.009817675 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Negative2_closure
.type GHC.Integer.Type.$tc'Negative2_closure, @object
GHC.Integer.Type.$tc'Negative2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tc'Negative3_bytes


==================== Asm code ====================
2018-03-16 15:53:51.01240186 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Negative_closure
.type GHC.Integer.Type.$tc'Negative_closure, @object
GHC.Integer.Type.$tc'Negative_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tc'Negative2_closure+1
	.quad	GHC.Integer.Type.$tc'Negative1_closure+4
	.quad	4010847856516363452
	.quad	-2822385425371619160
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:51.015114263 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tcList2_bytes
.type GHC.Integer.Type.$tcList2_bytes, @object
GHC.Integer.Type.$tcList2_bytes:
	.asciz "List"


==================== Asm code ====================
2018-03-16 15:53:51.01761555 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tcList1_closure
.type GHC.Integer.Type.$tcList1_closure, @object
GHC.Integer.Type.$tcList1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tcList2_bytes


==================== Asm code ====================
2018-03-16 15:53:51.020529676 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tcList_closure
.type GHC.Integer.Type.$tcList_closure, @object
GHC.Integer.Type.$tcList_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tcList1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	732340346576824023
	.quad	-8793628142119563116
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:51.022807251 UTC

.section .data
.align 8
.align 1
$krep3_r3Bs_closure:
	.quad	:_con_info
	.quad	$krep_r3Bp_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:51.025220873 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Nil1_closure
.type GHC.Integer.Type.$tc'Nil1_closure, @object
GHC.Integer.Type.$tc'Nil1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Integer.Type.$tcList_closure+1
	.quad	$krep3_r3Bs_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:51.02785733 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tc'Nil3_bytes
.type GHC.Integer.Type.$tc'Nil3_bytes, @object
GHC.Integer.Type.$tc'Nil3_bytes:
	.asciz "'Nil"


==================== Asm code ====================
2018-03-16 15:53:51.030893266 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Nil2_closure
.type GHC.Integer.Type.$tc'Nil2_closure, @object
GHC.Integer.Type.$tc'Nil2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tc'Nil3_bytes


==================== Asm code ====================
2018-03-16 15:53:51.033544776 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Nil_closure
.type GHC.Integer.Type.$tc'Nil_closure, @object
GHC.Integer.Type.$tc'Nil_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tc'Nil2_closure+1
	.quad	GHC.Integer.Type.$tc'Nil1_closure+1
	.quad	-4908158942199606165
	.quad	-9080427985304105481
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:51.035968743 UTC

.section .data
.align 8
.align 1
$krep4_r3Bt_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Integer.Type.$tc'Nil1_closure+1
	.quad	GHC.Integer.Type.$tc'Nil1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:51.038711815 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Cons1_closure
.type GHC.Integer.Type.$tc'Cons1_closure, @object
GHC.Integer.Type.$tc'Cons1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r3Bp_closure+2
	.quad	$krep4_r3Bt_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:51.041905064 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tc'Cons3_bytes
.type GHC.Integer.Type.$tc'Cons3_bytes, @object
GHC.Integer.Type.$tc'Cons3_bytes:
	.asciz "'Cons"


==================== Asm code ====================
2018-03-16 15:53:51.044461772 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Cons2_closure
.type GHC.Integer.Type.$tc'Cons2_closure, @object
GHC.Integer.Type.$tc'Cons2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tc'Cons3_bytes


==================== Asm code ====================
2018-03-16 15:53:51.047065521 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Cons_closure
.type GHC.Integer.Type.$tc'Cons_closure, @object
GHC.Integer.Type.$tc'Cons_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tc'Cons2_closure+1
	.quad	GHC.Integer.Type.$tc'Cons1_closure+4
	.quad	3906777924842222150
	.quad	5463288556346842885
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:51.049513921 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tcDigitsOnes2_bytes
.type GHC.Integer.Type.$tcDigitsOnes2_bytes, @object
GHC.Integer.Type.$tcDigitsOnes2_bytes:
	.asciz "DigitsOnes"


==================== Asm code ====================
2018-03-16 15:53:51.052200525 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tcDigitsOnes1_closure
.type GHC.Integer.Type.$tcDigitsOnes1_closure, @object
GHC.Integer.Type.$tcDigitsOnes1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tcDigitsOnes2_bytes


==================== Asm code ====================
2018-03-16 15:53:51.054703226 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tcDigitsOnes_closure
.type GHC.Integer.Type.$tcDigitsOnes_closure, @object
GHC.Integer.Type.$tcDigitsOnes_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tcDigitsOnes1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	4554239703586147919
	.quad	6957361150436389790
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:51.057202159 UTC

.section .data
.align 8
.align 1
$krep5_r3Bu_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Integer.Type.$tcDigitsOnes_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:51.059589436 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'DigitsOnes1_closure
.type GHC.Integer.Type.$tc'DigitsOnes1_closure, @object
GHC.Integer.Type.$tc'DigitsOnes1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Integer.Type.$tc'None1_closure+1
	.quad	$krep5_r3Bu_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:51.062845439 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tc'DigitsOnes3_bytes
.type GHC.Integer.Type.$tc'DigitsOnes3_bytes, @object
GHC.Integer.Type.$tc'DigitsOnes3_bytes:
	.asciz "'DigitsOnes"


==================== Asm code ====================
2018-03-16 15:53:51.065004795 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'DigitsOnes2_closure
.type GHC.Integer.Type.$tc'DigitsOnes2_closure, @object
GHC.Integer.Type.$tc'DigitsOnes2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tc'DigitsOnes3_bytes


==================== Asm code ====================
2018-03-16 15:53:51.067342355 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'DigitsOnes_closure
.type GHC.Integer.Type.$tc'DigitsOnes_closure, @object
GHC.Integer.Type.$tc'DigitsOnes_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tc'DigitsOnes2_closure+1
	.quad	GHC.Integer.Type.$tc'DigitsOnes1_closure+4
	.quad	-3235633334052056601
	.quad	1682512192113792266
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:51.070570852 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.encodeDouble#_closure
.type GHC.Integer.Type.encodeDouble#_closure, @object
GHC.Integer.Type.encodeDouble#_closure:
	.quad	GHC.Integer.Type.encodeDouble#_info


==================== Asm code ====================
2018-03-16 15:53:51.071961612 UTC

.section .text
.align 8
.globl GHC.Integer.Type.encodeDouble#_entry
.type GHC.Integer.Type.encodeDouble#_entry, @object
GHC.Integer.Type.encodeDouble#_entry:
_c7cK:
	subq $8,%rsp
	movq %r14,%rdi
	xorl %eax,%eax
	call __word_encodeDouble
	addq $8,%rsp
	movsd %xmm0,%xmm1
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.encodeDouble#_entry, .-GHC.Integer.Type.encodeDouble#_entry


==================== Asm code ====================
2018-03-16 15:53:51.072715954 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.encodeDouble#_info
.type GHC.Integer.Type.encodeDouble#_info, @object
GHC.Integer.Type.encodeDouble#_info:
	.quad	GHC.Integer.Type.encodeDouble#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:53:51.077806348 UTC

.section .data
.align 8
.align 1
f_r3Bv_closure:
	.quad	f_r3Bv_info


==================== Asm code ====================
2018-03-16 15:53:51.078710161 UTC

.section .text
.align 8
f_r3Bv_slow:
_c7cU:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movsd (%rbp),%xmm1
	addq $24,%rbp
	jmp f_r3Bv_entry
	.size f_r3Bv_slow, .-f_r3Bv_slow


==================== Asm code ====================
2018-03-16 15:53:51.079695824 UTC

.section .text
.align 8
f_r3Bv_entry:
_c7d5:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c7d6
_u7dl:
	movsd %xmm1,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c7cV
_c7d6:
	movl $f_r3Bv_closure,%ebx
	movsd %xmm1,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp *-8(%r13)
	.size f_r3Bv_entry, .-f_r3Bv_entry


==================== Asm code ====================
2018-03-16 15:53:51.080513559 UTC

.section .data.rel.ro
.align 8
.align 1
f_r3Bv_info:
	.quad	f_r3Bv_entry
	.quad	0
	.quad	14
	.quad	12884901888
	.quad	0
	.quad	323
	.quad	f_r3Bv_slow


==================== Asm code ====================
2018-03-16 15:53:51.083357833 UTC

.section .text
.align 8
_c7cV:
_c7cV:
	movq $block_c7cY_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7cY
_c7cZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c7cV, .-_c7cV


==================== Asm code ====================
2018-03-16 15:53:51.084483197 UTC

.section .text
.align 8
_c7cY:
_c7cY:
	movsd 8(%rbp),%xmm0
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c7d2
_c7d3:
	movsd %xmm0,%xmm1
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7d2:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rcx
	subq $8,%rsp
	movq %rax,%rsi
	movq 15(%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movsd %xmm0,72(%rsp)
	movq %rcx,%r14
	call __word_encodeDouble
	addq $8,%rsp
	movsd 64(%rsp),%xmm1
	addsd %xmm0,%xmm1
	movsd %xmm1,8(%rbp)
	movq %r14,16(%rbp)
	leaq 64(%rbx),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c7cV
	.size _c7cY, .-_c7cY


==================== Asm code ====================
2018-03-16 15:53:51.085433924 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7cY_info:
	.quad	_c7cY
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:51.090587189 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.encodeDoubleInteger_closure
.type GHC.Integer.Type.encodeDoubleInteger_closure, @object
GHC.Integer.Type.encodeDoubleInteger_closure:
	.quad	GHC.Integer.Type.encodeDoubleInteger_info


==================== Asm code ====================
2018-03-16 15:53:51.091780837 UTC

.section .text
.align 8
.globl GHC.Integer.Type.encodeDoubleInteger_entry
.type GHC.Integer.Type.encodeDoubleInteger_entry, @object
GHC.Integer.Type.encodeDoubleInteger_entry:
_c7dV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c7dW
_c7dX:
	movq $block_c7dN_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c7dN
_c7dO:
	movq (%rbx),%rax
	jmp *(%rax)
_c7dW:
	movl $GHC.Integer.Type.encodeDoubleInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.encodeDoubleInteger_entry, .-GHC.Integer.Type.encodeDoubleInteger_entry


==================== Asm code ====================
2018-03-16 15:53:51.09261339 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.encodeDoubleInteger_info
.type GHC.Integer.Type.encodeDoubleInteger_info, @object
GHC.Integer.Type.encodeDoubleInteger_info:
	.quad	GHC.Integer.Type.encodeDoubleInteger_entry
	.quad	0
	.quad	14
	.quad	8589934606


==================== Asm code ====================
2018-03-16 15:53:51.094278071 UTC

.section .text
.align 8
_c7dN:
_c7dN:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u7eg
_c7dT:
	xorpd %xmm1,%xmm1
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7eb:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_u7eg:
	movq 8(%rbp),%rcx
	cmpq $2,%rax
	jb _c7dR
_c7dS:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c7eb
_c7ea:
	movq 6(%rbx),%rax
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rax,(%r12)
	movq $block_c7e4_info,8(%rbp)
	movq %rcx,%rsi
	leaq -7(%r12),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
_c7dR:
	movq %rcx,%rsi
	movq 7(%rbx),%r14
	xorpd %xmm1,%xmm1
	addq $16,%rbp
	jmp f_r3Bv_entry
	.size _c7dN, .-_c7dN


==================== Asm code ====================
2018-03-16 15:53:51.09515528 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7dN_info:
	.quad	_c7dN
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:51.095917721 UTC

.section .text
.align 8
_c7e4:
_c7e4:
	movsd _n7eu(%rip),%xmm0
	xorpd %xmm0,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7e4, .-_c7e4
.section .rodata
.align 8
.align 8
_n7eu:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:53:51.09663956 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7e4_info:
	.quad	_c7e4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:51.099969256 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.encodeFloat#_closure
.type GHC.Integer.Type.encodeFloat#_closure, @object
GHC.Integer.Type.encodeFloat#_closure:
	.quad	GHC.Integer.Type.encodeFloat#_info


==================== Asm code ====================
2018-03-16 15:53:51.10133269 UTC

.section .text
.align 8
.globl GHC.Integer.Type.encodeFloat#_entry
.type GHC.Integer.Type.encodeFloat#_entry, @object
GHC.Integer.Type.encodeFloat#_entry:
_c7eG:
	subq $8,%rsp
	movq %r14,%rdi
	xorl %eax,%eax
	call __word_encodeFloat
	addq $8,%rsp
	movss %xmm0,%xmm1
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.encodeFloat#_entry, .-GHC.Integer.Type.encodeFloat#_entry


==================== Asm code ====================
2018-03-16 15:53:51.102359057 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.encodeFloat#_info
.type GHC.Integer.Type.encodeFloat#_info, @object
GHC.Integer.Type.encodeFloat#_info:
	.quad	GHC.Integer.Type.encodeFloat#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:53:51.110374141 UTC

.section .data
.align 8
.align 1
f1_r3Bw_closure:
	.quad	f1_r3Bw_info


==================== Asm code ====================
2018-03-16 15:53:51.111318401 UTC

.section .text
.align 8
f1_r3Bw_slow:
_c7eQ:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movss (%rbp),%xmm1
	addq $24,%rbp
	jmp f1_r3Bw_entry
	.size f1_r3Bw_slow, .-f1_r3Bw_slow


==================== Asm code ====================
2018-03-16 15:53:51.112225311 UTC

.section .text
.align 8
f1_r3Bw_entry:
_c7f1:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c7f2
_u7fh:
	movss %xmm1,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c7eR
_c7f2:
	movl $f1_r3Bw_closure,%ebx
	movss %xmm1,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp *-8(%r13)
	.size f1_r3Bw_entry, .-f1_r3Bw_entry


==================== Asm code ====================
2018-03-16 15:53:51.113010674 UTC

.section .data.rel.ro
.align 8
.align 1
f1_r3Bw_info:
	.quad	f1_r3Bw_entry
	.quad	0
	.quad	14
	.quad	12884901888
	.quad	0
	.quad	323
	.quad	f1_r3Bw_slow


==================== Asm code ====================
2018-03-16 15:53:51.113919166 UTC

.section .text
.align 8
_c7eR:
_c7eR:
	movq $block_c7eU_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7eU
_c7eV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c7eR, .-_c7eR


==================== Asm code ====================
2018-03-16 15:53:51.114943827 UTC

.section .text
.align 8
_c7eU:
_c7eU:
	movss 8(%rbp),%xmm0
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c7eY
_c7eZ:
	movss %xmm0,%xmm1
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7eY:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rcx
	subq $8,%rsp
	movq %rax,%rsi
	movq 15(%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movsd %xmm0,72(%rsp)
	movq %rcx,%r14
	call __word_encodeFloat
	addq $8,%rsp
	movsd 64(%rsp),%xmm1
	addss %xmm0,%xmm1
	movss %xmm1,8(%rbp)
	movq %r14,16(%rbp)
	leaq 64(%rbx),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c7eR
	.size _c7eU, .-_c7eU


==================== Asm code ====================
2018-03-16 15:53:51.11576463 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7eU_info:
	.quad	_c7eU
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:51.121987655 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.encodeFloatInteger_closure
.type GHC.Integer.Type.encodeFloatInteger_closure, @object
GHC.Integer.Type.encodeFloatInteger_closure:
	.quad	GHC.Integer.Type.encodeFloatInteger_info


==================== Asm code ====================
2018-03-16 15:53:51.123579355 UTC

.section .text
.align 8
.globl GHC.Integer.Type.encodeFloatInteger_entry
.type GHC.Integer.Type.encodeFloatInteger_entry, @object
GHC.Integer.Type.encodeFloatInteger_entry:
_c7fR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c7fS
_c7fT:
	movq $block_c7fJ_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c7fJ
_c7fK:
	movq (%rbx),%rax
	jmp *(%rax)
_c7fS:
	movl $GHC.Integer.Type.encodeFloatInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.encodeFloatInteger_entry, .-GHC.Integer.Type.encodeFloatInteger_entry


==================== Asm code ====================
2018-03-16 15:53:51.124830865 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.encodeFloatInteger_info
.type GHC.Integer.Type.encodeFloatInteger_info, @object
GHC.Integer.Type.encodeFloatInteger_info:
	.quad	GHC.Integer.Type.encodeFloatInteger_entry
	.quad	0
	.quad	14
	.quad	8589934606


==================== Asm code ====================
2018-03-16 15:53:51.126417844 UTC

.section .text
.align 8
_c7fJ:
_c7fJ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u7gc
_c7fP:
	xorps %xmm1,%xmm1
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7g7:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_u7gc:
	movq 8(%rbp),%rcx
	cmpq $2,%rax
	jb _c7fN
_c7fO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c7g7
_c7g6:
	movq 6(%rbx),%rax
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %rax,(%r12)
	movq $block_c7g0_info,8(%rbp)
	movq %rcx,%rsi
	leaq -7(%r12),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
_c7fN:
	movq %rcx,%rsi
	movq 7(%rbx),%r14
	xorps %xmm1,%xmm1
	addq $16,%rbp
	jmp f1_r3Bw_entry
	.size _c7fJ, .-_c7fJ


==================== Asm code ====================
2018-03-16 15:53:51.127731644 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7fJ_info:
	.quad	_c7fJ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:51.128753882 UTC

.section .text
.align 8
_c7g0:
_c7g0:
	movss _n7gq(%rip),%xmm0
	xorps %xmm0,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7g0, .-_c7g0
.section .rodata
.align 8
.align 4
_n7gq:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:53:51.129886474 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7g0_info:
	.quad	_c7g0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:51.133520139 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.Positive_closure
.type GHC.Integer.Type.Positive_closure, @object
GHC.Integer.Type.Positive_closure:
	.quad	GHC.Integer.Type.Positive_info


==================== Asm code ====================
2018-03-16 15:53:51.134550572 UTC

.section .text
.align 8
GHC.Integer.Type.Positive_entry:
_c7gA:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c7gE
_c7gD:
	movq $GHC.Integer.Type.Positive_con_info,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c7gE:
	movq $16,904(%r13)
	movl $GHC.Integer.Type.Positive_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.Positive_entry, .-GHC.Integer.Type.Positive_entry


==================== Asm code ====================
2018-03-16 15:53:51.135345296 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Integer.Type.Positive_info:
	.quad	GHC.Integer.Type.Positive_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:51.138363823 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.Negative_closure
.type GHC.Integer.Type.Negative_closure, @object
GHC.Integer.Type.Negative_closure:
	.quad	GHC.Integer.Type.Negative_info


==================== Asm code ====================
2018-03-16 15:53:51.139406765 UTC

.section .text
.align 8
GHC.Integer.Type.Negative_entry:
_c7gP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c7gT
_c7gS:
	movq $GHC.Integer.Type.Negative_con_info,-8(%r12)
	movq %r14,(%r12)
	leaq -6(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c7gT:
	movq $16,904(%r13)
	movl $GHC.Integer.Type.Negative_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.Negative_entry, .-GHC.Integer.Type.Negative_entry


==================== Asm code ====================
2018-03-16 15:53:51.140257729 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Integer.Type.Negative_info:
	.quad	GHC.Integer.Type.Negative_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:51.142964344 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.Naught_closure
.type GHC.Integer.Type.Naught_closure, @object
GHC.Integer.Type.Naught_closure:
	.quad	GHC.Integer.Type.Naught_con_info


==================== Asm code ====================
2018-03-16 15:53:51.145028802 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.Nil_closure
.type GHC.Integer.Type.Nil_closure, @object
GHC.Integer.Type.Nil_closure:
	.quad	GHC.Integer.Type.Nil_con_info


==================== Asm code ====================
2018-03-16 15:53:51.148774349 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.Cons_closure
.type GHC.Integer.Type.Cons_closure, @object
GHC.Integer.Type.Cons_closure:
	.quad	GHC.Integer.Type.Cons_info


==================== Asm code ====================
2018-03-16 15:53:51.149876543 UTC

.section .text
.align 8
GHC.Integer.Type.Cons_entry:
_c7h6:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7ha
_c7h9:
	movq $GHC.Integer.Type.Cons_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c7ha:
	movq $24,904(%r13)
	movl $GHC.Integer.Type.Cons_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.Cons_entry, .-GHC.Integer.Type.Cons_entry


==================== Asm code ====================
2018-03-16 15:53:51.150736645 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Integer.Type.Cons_info:
	.quad	GHC.Integer.Type.Cons_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:51.15487661 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.Some_closure
.type GHC.Integer.Type.Some_closure, @object
GHC.Integer.Type.Some_closure:
	.quad	GHC.Integer.Type.Some_info


==================== Asm code ====================
2018-03-16 15:53:51.155912689 UTC

.section .text
.align 8
GHC.Integer.Type.Some_entry:
_c7hl:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7hp
_c7ho:
	movq $GHC.Integer.Type.Some_con_info,-16(%r12)
	movq %rsi,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c7hp:
	movq $24,904(%r13)
	movl $GHC.Integer.Type.Some_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Integer.Type.Some_entry, .-GHC.Integer.Type.Some_entry


==================== Asm code ====================
2018-03-16 15:53:51.156679898 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Integer.Type.Some_info:
	.quad	GHC.Integer.Type.Some_entry
	.quad	0
	.quad	14
	.quad	8589934605


==================== Asm code ====================
2018-03-16 15:53:51.158815327 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.None_closure
.type GHC.Integer.Type.None_closure, @object
GHC.Integer.Type.None_closure:
	.quad	GHC.Integer.Type.None_con_info


==================== Asm code ====================
2018-03-16 15:53:51.161334537 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i5L8_str:
	.asciz "integer-simple:GHC.Integer.Type.Positive"


==================== Asm code ====================
2018-03-16 15:53:51.162161236 UTC

.section .text
.align 8
.globl GHC.Integer.Type.Positive_con_entry
.type GHC.Integer.Type.Positive_con_entry, @object
GHC.Integer.Type.Positive_con_entry:
_c7hw:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.Positive_con_entry, .-GHC.Integer.Type.Positive_con_entry


==================== Asm code ====================
2018-03-16 15:53:51.163152222 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.Positive_con_info
.type GHC.Integer.Type.Positive_con_info, @object
GHC.Integer.Type.Positive_con_info:
	.quad	GHC.Integer.Type.Positive_con_entry
	.quad	1
	.quad	2
	.quad	i5L8_str


==================== Asm code ====================
2018-03-16 15:53:51.165720003 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i5La_str:
	.asciz "integer-simple:GHC.Integer.Type.Negative"


==================== Asm code ====================
2018-03-16 15:53:51.166546495 UTC

.section .text
.align 8
.globl GHC.Integer.Type.Negative_con_entry
.type GHC.Integer.Type.Negative_con_entry, @object
GHC.Integer.Type.Negative_con_entry:
_c7hC:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.Negative_con_entry, .-GHC.Integer.Type.Negative_con_entry


==================== Asm code ====================
2018-03-16 15:53:51.167217851 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.Negative_con_info
.type GHC.Integer.Type.Negative_con_info, @object
GHC.Integer.Type.Negative_con_info:
	.quad	GHC.Integer.Type.Negative_con_entry
	.quad	1
	.quad	4294967298
	.quad	i5La_str


==================== Asm code ====================
2018-03-16 15:53:51.169660444 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i5Lc_str:
	.asciz "integer-simple:GHC.Integer.Type.Naught"


==================== Asm code ====================
2018-03-16 15:53:51.170452931 UTC

.section .text
.align 8
.globl GHC.Integer.Type.Naught_con_entry
.type GHC.Integer.Type.Naught_con_entry, @object
GHC.Integer.Type.Naught_con_entry:
_c7hI:
	addq $3,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.Naught_con_entry, .-GHC.Integer.Type.Naught_con_entry


==================== Asm code ====================
2018-03-16 15:53:51.17117784 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.Naught_con_info
.type GHC.Integer.Type.Naught_con_info, @object
GHC.Integer.Type.Naught_con_info:
	.quad	GHC.Integer.Type.Naught_con_entry
	.quad	4294967296
	.quad	8589934595
	.quad	i5Lc_str


==================== Asm code ====================
2018-03-16 15:53:51.174049978 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i5Le_str:
	.asciz "integer-simple:GHC.Integer.Type.Nil"


==================== Asm code ====================
2018-03-16 15:53:51.174860721 UTC

.section .text
.align 8
.globl GHC.Integer.Type.Nil_con_entry
.type GHC.Integer.Type.Nil_con_entry, @object
GHC.Integer.Type.Nil_con_entry:
_c7hO:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.Nil_con_entry, .-GHC.Integer.Type.Nil_con_entry


==================== Asm code ====================
2018-03-16 15:53:51.175605771 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.Nil_con_info
.type GHC.Integer.Type.Nil_con_info, @object
GHC.Integer.Type.Nil_con_info:
	.quad	GHC.Integer.Type.Nil_con_entry
	.quad	4294967296
	.quad	3
	.quad	i5Le_str


==================== Asm code ====================
2018-03-16 15:53:51.177999182 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i5Lg_str:
	.asciz "integer-simple:GHC.Integer.Type.Cons"


==================== Asm code ====================
2018-03-16 15:53:51.178913967 UTC

.section .text
.align 8
.globl GHC.Integer.Type.Cons_con_entry
.type GHC.Integer.Type.Cons_con_entry, @object
GHC.Integer.Type.Cons_con_entry:
_c7hU:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.Cons_con_entry, .-GHC.Integer.Type.Cons_con_entry


==================== Asm code ====================
2018-03-16 15:53:51.179616072 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.Cons_con_info
.type GHC.Integer.Type.Cons_con_info, @object
GHC.Integer.Type.Cons_con_info:
	.quad	GHC.Integer.Type.Cons_con_entry
	.quad	2
	.quad	4294967300
	.quad	i5Lg_str


==================== Asm code ====================
2018-03-16 15:53:51.182398762 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i5Li_str:
	.asciz "integer-simple:GHC.Integer.Type.Some"


==================== Asm code ====================
2018-03-16 15:53:51.183318168 UTC

.section .text
.align 8
.globl GHC.Integer.Type.Some_con_entry
.type GHC.Integer.Type.Some_con_entry, @object
GHC.Integer.Type.Some_con_entry:
_c7i0:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.Some_con_entry, .-GHC.Integer.Type.Some_con_entry


==================== Asm code ====================
2018-03-16 15:53:51.183983765 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.Some_con_info
.type GHC.Integer.Type.Some_con_info, @object
GHC.Integer.Type.Some_con_info:
	.quad	GHC.Integer.Type.Some_con_entry
	.quad	4294967297
	.quad	5
	.quad	i5Li_str


==================== Asm code ====================
2018-03-16 15:53:51.186982481 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i5Lk_str:
	.asciz "integer-simple:GHC.Integer.Type.None"


==================== Asm code ====================
2018-03-16 15:53:51.188098289 UTC

.section .text
.align 8
.globl GHC.Integer.Type.None_con_entry
.type GHC.Integer.Type.None_con_entry, @object
GHC.Integer.Type.None_con_entry:
_c7i6:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.None_con_entry, .-GHC.Integer.Type.None_con_entry


==================== Asm code ====================
2018-03-16 15:53:51.189134606 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.None_con_info
.type GHC.Integer.Type.None_con_info, @object
GHC.Integer.Type.None_con_info:
	.quad	GHC.Integer.Type.None_con_entry
	.quad	4294967296
	.quad	4294967299
	.quad	i5Lk_str


==================== Asm code ====================
2018-03-16 15:53:51.192531017 UTC

.section .data.rel.ro
.align 8
.align 1
S3Xx_srt:
	.quad	GHC.Integer.Type.plusPositive_addWithCarry_closure
	.quad	lvl_r3Bo_closure
	.quad	GHC.Integer.Type.timesDigit_closure
	.quad	GHC.Integer.Type.timesPositive_closure
	.quad	GHC.Integer.Type.timesInteger_closure
	.quad	GHC.Integer.Type.plusInteger_closure
	.quad	GHC.Integer.Type.minusInteger_closure
	.quad	GHC.Integer.Type.decodeDoubleInteger_closure
	.quad	GHC.Integer.Type.complementInteger_closure
	.quad	GHC.Integer.Type.shiftRInteger_closure
	.quad	GHC.Integer.Type.divModInteger_closure
	.quad	GHC.Integer.Type.divInteger_closure
	.quad	GHC.Integer.Type.modInteger_closure


==================== Asm code ====================
2018-03-16 15:53:54.95264013 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$WPositive_closure
.type GHC.Integer.Type.$WPositive_closure, @object
GHC.Integer.Type.$WPositive_closure:
	.quad	GHC.Integer.Type.$WPositive_info


==================== Asm code ====================
2018-03-16 15:53:54.953673474 UTC

.section .text
.align 8
.globl GHC.Integer.Type.$WPositive_entry
.type GHC.Integer.Type.$WPositive_entry, @object
GHC.Integer.Type.$WPositive_entry:
_c7ux:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c7uB
_c7uC:
	leaq block_c7uu_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7uu
_c7uv:
	movq (%rbx),%rax
	jmp *(%rax)
_c7uB:
	leaq GHC.Integer.Type.$WPositive_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.$WPositive_entry, .-GHC.Integer.Type.$WPositive_entry


==================== Asm code ====================
2018-03-16 15:53:54.954474627 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.$WPositive_info
.type GHC.Integer.Type.$WPositive_info, @object
GHC.Integer.Type.$WPositive_info:
	.quad	GHC.Integer.Type.$WPositive_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:54.955492992 UTC

.section .text
.align 8
_c7uu:
_c7uu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c7uF
_c7uE:
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7uF:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c7uu, .-_c7uu


==================== Asm code ====================
2018-03-16 15:53:54.956187181 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7uu_info:
	.quad	_c7uu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:54.96030861 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$WNegative_closure
.type GHC.Integer.Type.$WNegative_closure, @object
GHC.Integer.Type.$WNegative_closure:
	.quad	GHC.Integer.Type.$WNegative_info


==================== Asm code ====================
2018-03-16 15:53:54.961414445 UTC

.section .text
.align 8
.globl GHC.Integer.Type.$WNegative_entry
.type GHC.Integer.Type.$WNegative_entry, @object
GHC.Integer.Type.$WNegative_entry:
_c7v0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c7v4
_c7v5:
	leaq block_c7uX_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7uX
_c7uY:
	movq (%rbx),%rax
	jmp *(%rax)
_c7v4:
	leaq GHC.Integer.Type.$WNegative_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.$WNegative_entry, .-GHC.Integer.Type.$WNegative_entry


==================== Asm code ====================
2018-03-16 15:53:54.96222184 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.$WNegative_info
.type GHC.Integer.Type.$WNegative_info, @object
GHC.Integer.Type.$WNegative_info:
	.quad	GHC.Integer.Type.$WNegative_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:54.963067308 UTC

.section .text
.align 8
_c7uX:
_c7uX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c7v8
_c7v7:
	leaq GHC.Integer.Type.Negative_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7v8:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c7uX, .-_c7uX


==================== Asm code ====================
2018-03-16 15:53:54.963792577 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7uX_info:
	.quad	_c7uX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:54.967429895 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$WSome_closure
.type GHC.Integer.Type.$WSome_closure, @object
GHC.Integer.Type.$WSome_closure:
	.quad	GHC.Integer.Type.$WSome_info


==================== Asm code ====================
2018-03-16 15:53:54.968431612 UTC

.section .text
.align 8
.globl GHC.Integer.Type.$WSome_entry
.type GHC.Integer.Type.$WSome_entry, @object
GHC.Integer.Type.$WSome_entry:
_c7vt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c7vx
_c7vy:
	leaq block_c7vq_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c7vq
_c7vr:
	movq (%rbx),%rax
	jmp *(%rax)
_c7vx:
	leaq GHC.Integer.Type.$WSome_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.$WSome_entry, .-GHC.Integer.Type.$WSome_entry


==================== Asm code ====================
2018-03-16 15:53:54.96930261 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.$WSome_info
.type GHC.Integer.Type.$WSome_info, @object
GHC.Integer.Type.$WSome_info:
	.quad	GHC.Integer.Type.$WSome_entry
	.quad	0
	.quad	14
	.quad	8589934605


==================== Asm code ====================
2018-03-16 15:53:54.970177461 UTC

.section .text
.align 8
_c7vq:
_c7vq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7vB
_c7vA:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7vB:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c7vq, .-_c7vq


==================== Asm code ====================
2018-03-16 15:53:54.971330869 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7vq_info:
	.quad	_c7vq
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:54.973642936 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.errorPositive_closure
.type GHC.Integer.Type.errorPositive_closure, @object
GHC.Integer.Type.errorPositive_closure:
	.quad	GHC.Integer.Type.Some_con_info
	.quad	GHC.Integer.Type.None_closure+2
	.quad	47
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:54.976491996 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.errorInteger_closure
.type GHC.Integer.Type.errorInteger_closure, @object
GHC.Integer.Type.errorInteger_closure:
	.quad	GHC.Integer.Type.Positive_con_info
	.quad	GHC.Integer.Type.errorPositive_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:54.981032634 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.wordToInteger_closure
.type GHC.Integer.Type.wordToInteger_closure, @object
GHC.Integer.Type.wordToInteger_closure:
	.quad	GHC.Integer.Type.wordToInteger_info


==================== Asm code ====================
2018-03-16 15:53:54.982334182 UTC

.section .text
.align 8
.globl GHC.Integer.Type.wordToInteger_entry
.type GHC.Integer.Type.wordToInteger_entry, @object
GHC.Integer.Type.wordToInteger_entry:
_c7w0:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c7w4
_c7w3:
	testq %r14,%r14
	je _c7vZ
_c7vY:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-32(%r12)
	leaq GHC.Integer.Type.None_closure+2(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-16(%r12)
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c7w4:
	movq $40,904(%r13)
	leaq GHC.Integer.Type.wordToInteger_closure(%rip),%rbx
	jmp *-8(%r13)
_c7vZ:
	addq $-40,%r12
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.wordToInteger_entry, .-GHC.Integer.Type.wordToInteger_entry


==================== Asm code ====================
2018-03-16 15:53:54.983236778 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.wordToInteger_info
.type GHC.Integer.Type.wordToInteger_info, @object
GHC.Integer.Type.wordToInteger_info:
	.quad	GHC.Integer.Type.wordToInteger_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:53:54.988645463 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.integerToWord_closure
.type GHC.Integer.Type.integerToWord_closure, @object
GHC.Integer.Type.integerToWord_closure:
	.quad	GHC.Integer.Type.integerToWord_info


==================== Asm code ====================
2018-03-16 15:53:54.989706617 UTC

.section .text
.align 8
.globl GHC.Integer.Type.integerToWord_entry
.type GHC.Integer.Type.integerToWord_entry, @object
GHC.Integer.Type.integerToWord_entry:
_c7wu:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c7wv
_c7ww:
	leaq block_c7wm_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7wm
_c7wn:
	movq (%rbx),%rax
	jmp *(%rax)
_c7wv:
	leaq GHC.Integer.Type.integerToWord_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.integerToWord_entry, .-GHC.Integer.Type.integerToWord_entry


==================== Asm code ====================
2018-03-16 15:53:54.990462248 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.integerToWord_info
.type GHC.Integer.Type.integerToWord_info, @object
GHC.Integer.Type.integerToWord_info:
	.quad	GHC.Integer.Type.integerToWord_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:54.991385845 UTC

.section .text
.align 8
_c7wm:
_c7wm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u7x7
_u7x8:
	addq $8,%rbp
	jmp _c7ws
_u7x7:
	cmpq $2,%rax
	jb _c7wq
_c7wr:
	leaq block_c7wO_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _c7wO
_c7wQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c7wq:
	leaq block_c7wz_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	testb $7,%bl
	jne _c7wz
_c7wB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c7wm, .-_c7wm


==================== Asm code ====================
2018-03-16 15:53:54.992140514 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7wm_info:
	.quad	_c7wm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:54.992876974 UTC

.section .text
.align 8
_c7wz:
_c7wz:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c7wH
_u7x9:
	addq $8,%rbp
	jmp _c7ws
_c7wH:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7wz, .-_c7wz


==================== Asm code ====================
2018-03-16 15:53:54.993962794 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7wz_info:
	.quad	_c7wz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:54.994733855 UTC

.section .text
.align 8
_c7wO:
_c7wO:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c7wX
_u7xa:
	addq $8,%rbp
	jmp _c7ws
_c7wX:
	leaq 15(%rbx),%rax
	xorl %ebx,%ebx
	subq (%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7wO, .-_c7wO


==================== Asm code ====================
2018-03-16 15:53:54.995447796 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7wO_info:
	.quad	_c7wO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:54.996517334 UTC

.section .text
.align 8
_c7ws:
_c7ws:
	xorl %ebx,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7ws, .-_c7ws


==================== Asm code ====================
2018-03-16 15:53:54.999630078 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.integerToInt_closure
.type GHC.Integer.Type.integerToInt_closure, @object
GHC.Integer.Type.integerToInt_closure:
	.quad	GHC.Integer.Type.integerToInt_info


==================== Asm code ====================
2018-03-16 15:53:55.000528329 UTC

.section .text
.align 8
.globl GHC.Integer.Type.integerToInt_entry
.type GHC.Integer.Type.integerToInt_entry, @object
GHC.Integer.Type.integerToInt_entry:
_c7xT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c7xX
_c7xY:
	leaq block_c7xR_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.integerToWord_entry
_c7xX:
	leaq GHC.Integer.Type.integerToInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.integerToInt_entry, .-GHC.Integer.Type.integerToInt_entry


==================== Asm code ====================
2018-03-16 15:53:55.001209877 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.integerToInt_info
.type GHC.Integer.Type.integerToInt_info, @object
GHC.Integer.Type.integerToInt_info:
	.quad	GHC.Integer.Type.integerToInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.002060368 UTC

.section .text
.align 8
_c7xR:
_c7xR:
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7xR, .-_c7xR


==================== Asm code ====================
2018-03-16 15:53:55.002699304 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7xR_info:
	.quad	_c7xR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.005155288 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.hashInteger_closure
.type GHC.Integer.Type.hashInteger_closure, @object
GHC.Integer.Type.hashInteger_closure:
	.quad	GHC.Integer.Type.hashInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.006005625 UTC

.section .text
.align 8
.globl GHC.Integer.Type.hashInteger_entry
.type GHC.Integer.Type.hashInteger_entry, @object
GHC.Integer.Type.hashInteger_entry:
_c7ye:
	jmp GHC.Integer.Type.integerToInt_entry
	.size GHC.Integer.Type.hashInteger_entry, .-GHC.Integer.Type.hashInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.006605258 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.hashInteger_info
.type GHC.Integer.Type.hashInteger_info, @object
GHC.Integer.Type.hashInteger_info:
	.quad	GHC.Integer.Type.hashInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.011549681 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.flipBitsDigits_closure
.type GHC.Integer.Type.flipBitsDigits_closure, @object
GHC.Integer.Type.flipBitsDigits_closure:
	.quad	GHC.Integer.Type.flipBitsDigits_info


==================== Asm code ====================
2018-03-16 15:53:55.012604071 UTC

.section .text
.align 8
.globl GHC.Integer.Type.flipBitsDigits_entry
.type GHC.Integer.Type.flipBitsDigits_entry, @object
GHC.Integer.Type.flipBitsDigits_entry:
_c7yw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c7yx
_c7yy:
	leaq block_c7yp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7yp
_c7yq:
	movq (%rbx),%rax
	jmp *(%rax)
_c7yx:
	leaq GHC.Integer.Type.flipBitsDigits_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.flipBitsDigits_entry, .-GHC.Integer.Type.flipBitsDigits_entry


==================== Asm code ====================
2018-03-16 15:53:55.013596197 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.flipBitsDigits_info
.type GHC.Integer.Type.flipBitsDigits_info, @object
GHC.Integer.Type.flipBitsDigits_info:
	.quad	GHC.Integer.Type.flipBitsDigits_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.014967962 UTC

.section .text
.align 8
_c7yp:
_c7yp:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c7yt
_c7yu:
	leaq GHC.Integer.Type.None_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7yt:
	leaq block_c7yB_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.flipBitsDigits_entry
	.size _c7yp, .-_c7yp


==================== Asm code ====================
2018-03-16 15:53:55.016058811 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7yp_info:
	.quad	_c7yp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.017214671 UTC

.section .text
.align 8
_c7yB:
_c7yB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7yM
_c7yL:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	notq %rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7yM:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c7yB, .-_c7yB


==================== Asm code ====================
2018-03-16 15:53:55.01876794 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7yB_info:
	.quad	_c7yB
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.022416996 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.flipBits1_closure
.type GHC.Integer.Type.flipBits1_closure, @object
GHC.Integer.Type.flipBits1_closure:
	.quad	GHC.Integer.Type.flipBits1_info


==================== Asm code ====================
2018-03-16 15:53:55.023991548 UTC

.section .text
.align 8
.globl GHC.Integer.Type.flipBits1_entry
.type GHC.Integer.Type.flipBits1_entry, @object
GHC.Integer.Type.flipBits1_entry:
_c7zg:
	jmp GHC.Integer.Type.flipBitsDigits_entry
	.size GHC.Integer.Type.flipBits1_entry, .-GHC.Integer.Type.flipBits1_entry


==================== Asm code ====================
2018-03-16 15:53:55.024794313 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.flipBits1_info
.type GHC.Integer.Type.flipBits1_info, @object
GHC.Integer.Type.flipBits1_info:
	.quad	GHC.Integer.Type.flipBits1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.028080637 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.flipBits_closure
.type GHC.Integer.Type.flipBits_closure, @object
GHC.Integer.Type.flipBits_closure:
	.quad	GHC.Integer.Type.flipBits_info


==================== Asm code ====================
2018-03-16 15:53:55.029813113 UTC

.section .text
.align 8
.globl GHC.Integer.Type.flipBits_entry
.type GHC.Integer.Type.flipBits_entry, @object
GHC.Integer.Type.flipBits_entry:
_c7zr:
	jmp GHC.Integer.Type.flipBits1_entry
	.size GHC.Integer.Type.flipBits_entry, .-GHC.Integer.Type.flipBits_entry


==================== Asm code ====================
2018-03-16 15:53:55.030720666 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.flipBits_info
.type GHC.Integer.Type.flipBits_info, @object
GHC.Integer.Type.flipBits_info:
	.quad	GHC.Integer.Type.flipBits_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.034958338 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.negateInteger_closure
.type GHC.Integer.Type.negateInteger_closure, @object
GHC.Integer.Type.negateInteger_closure:
	.quad	GHC.Integer.Type.negateInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.035901069 UTC

.section .text
.align 8
.globl GHC.Integer.Type.negateInteger_entry
.type GHC.Integer.Type.negateInteger_entry, @object
GHC.Integer.Type.negateInteger_entry:
_c7zK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c7zL
_c7zM:
	leaq block_c7zC_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7zC
_c7zD:
	movq (%rbx),%rax
	jmp *(%rax)
_c7zL:
	leaq GHC.Integer.Type.negateInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.negateInteger_entry, .-GHC.Integer.Type.negateInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.036709721 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.negateInteger_info
.type GHC.Integer.Type.negateInteger_info, @object
GHC.Integer.Type.negateInteger_info:
	.quad	GHC.Integer.Type.negateInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.038176643 UTC

.section .text
.align 8
_c7zC:
_c7zC:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u7A2
_c7zI:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7zY:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_u7A2:
	cmpq $2,%rax
	jb _c7zG
_c7zH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c7zY
_c7zX:
	movq 6(%rbx),%rax
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7zG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c7zY
_c7zR:
	movq 7(%rbx),%rax
	leaq GHC.Integer.Type.Negative_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7zC, .-_c7zC


==================== Asm code ====================
2018-03-16 15:53:55.039131227 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7zC_info:
	.quad	_c7zC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.042478136 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.smallInteger_closure
.type GHC.Integer.Type.smallInteger_closure, @object
GHC.Integer.Type.smallInteger_closure:
	.quad	GHC.Integer.Type.smallInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.043439854 UTC

.section .text
.align 8
.globl GHC.Integer.Type.smallInteger_entry
.type GHC.Integer.Type.smallInteger_entry, @object
GHC.Integer.Type.smallInteger_entry:
_c7At:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c7Au
_c7Av:
	testq %r14,%r14
	jl _c7Ar
_c7As:
	jmp GHC.Integer.Type.wordToInteger_entry
_c7Au:
	leaq GHC.Integer.Type.smallInteger_closure(%rip),%rbx
	jmp *-8(%r13)
_c7Ar:
	leaq block_c7AD_info(%rip),%rax
	movq %rax,-8(%rbp)
	negq %r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size GHC.Integer.Type.smallInteger_entry, .-GHC.Integer.Type.smallInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.04412356 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.smallInteger_info
.type GHC.Integer.Type.smallInteger_info, @object
GHC.Integer.Type.smallInteger_info:
	.quad	GHC.Integer.Type.smallInteger_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:53:55.044832109 UTC

.section .text
.align 8
_c7AD:
_c7AD:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
	.size _c7AD, .-_c7AD


==================== Asm code ====================
2018-03-16 15:53:55.046409465 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7AD_info:
	.quad	_c7AD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.051099839 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.decodeFloatInteger_closure
.type GHC.Integer.Type.decodeFloatInteger_closure, @object
GHC.Integer.Type.decodeFloatInteger_closure:
	.quad	GHC.Integer.Type.decodeFloatInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.05204825 UTC

.section .text
.align 8
sat_s7iU_entry:
_c7B5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c7B6
_c7B7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_c7B6:
	jmp *-16(%r13)
	.size sat_s7iU_entry, .-sat_s7iU_entry


==================== Asm code ====================
2018-03-16 15:53:55.0527453 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7iU_info:
	.quad	sat_s7iU_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:53:55.05359664 UTC

.section .text
.align 8
.globl GHC.Integer.Type.decodeFloatInteger_entry
.type GHC.Integer.Type.decodeFloatInteger_entry, @object
GHC.Integer.Type.decodeFloatInteger_entry:
_c7B8:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c7B9
_c7Ba:
	leaq block_c7AX_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *stg_decodeFloat_Int#@gotpcrel(%rip)
_c7B9:
	leaq GHC.Integer.Type.decodeFloatInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.decodeFloatInteger_entry, .-GHC.Integer.Type.decodeFloatInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.054324489 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.decodeFloatInteger_info
.type GHC.Integer.Type.decodeFloatInteger_info, @object
GHC.Integer.Type.decodeFloatInteger_info:
	.quad	GHC.Integer.Type.decodeFloatInteger_entry
	.quad	0
	.quad	14
	.quad	4294967302


==================== Asm code ====================
2018-03-16 15:53:55.055141043 UTC

.section .text
.align 8
_c7AX:
_c7AX:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c7AY
	.size _c7AX, .-_c7AX


==================== Asm code ====================
2018-03-16 15:53:55.055802146 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7AX_info:
	.quad	_c7AX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.056696216 UTC

.section .text
.align 8
_c7AY:
_c7AY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7Bd
_c7Bc:
	leaq sat_s7iU_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%r14
	leaq -16(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7Bd:
	movq $24,904(%r13)
	leaq block_c7AY_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c7AY, .-_c7AY


==================== Asm code ====================
2018-03-16 15:53:55.057544613 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7AY_info:
	.quad	_c7AY
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.061672111 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.absInteger_closure
.type GHC.Integer.Type.absInteger_closure, @object
GHC.Integer.Type.absInteger_closure:
	.quad	GHC.Integer.Type.absInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.062698032 UTC

.section .text
.align 8
.globl GHC.Integer.Type.absInteger_entry
.type GHC.Integer.Type.absInteger_entry, @object
GHC.Integer.Type.absInteger_entry:
_c7BM:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c7BN
_c7BO:
	leaq block_c7BF_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7BF
_c7BG:
	movq (%rbx),%rax
	jmp *(%rax)
_c7BN:
	leaq GHC.Integer.Type.absInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.absInteger_entry, .-GHC.Integer.Type.absInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.063427903 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.absInteger_info
.type GHC.Integer.Type.absInteger_info, @object
GHC.Integer.Type.absInteger_info:
	.quad	GHC.Integer.Type.absInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.064325342 UTC

.section .text
.align 8
_c7BF:
_c7BF:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	je _c7BK
_c7BJ:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c7BX:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c7BK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c7BX
_c7BW:
	movq 6(%rbx),%rax
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7BF, .-_c7BF


==================== Asm code ====================
2018-03-16 15:53:55.065078801 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7BF_info:
	.quad	_c7BF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.067221009 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.onePositive_closure
.type GHC.Integer.Type.onePositive_closure, @object
GHC.Integer.Type.onePositive_closure:
	.quad	GHC.Integer.Type.Some_con_info
	.quad	GHC.Integer.Type.None_closure+2
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:55.06931588 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.negativeOneInteger_closure
.type GHC.Integer.Type.negativeOneInteger_closure, @object
GHC.Integer.Type.negativeOneInteger_closure:
	.quad	GHC.Integer.Type.Negative_con_info
	.quad	GHC.Integer.Type.onePositive_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:55.071827032 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.oneInteger_closure
.type GHC.Integer.Type.oneInteger_closure, @object
GHC.Integer.Type.oneInteger_closure:
	.quad	GHC.Integer.Type.Positive_con_info
	.quad	GHC.Integer.Type.onePositive_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:55.075500151 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.signumInteger_closure
.type GHC.Integer.Type.signumInteger_closure, @object
GHC.Integer.Type.signumInteger_closure:
	.quad	GHC.Integer.Type.signumInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.076458878 UTC

.section .text
.align 8
.globl GHC.Integer.Type.signumInteger_entry
.type GHC.Integer.Type.signumInteger_entry, @object
GHC.Integer.Type.signumInteger_entry:
_c7Cu:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c7Cv
_c7Cw:
	leaq block_c7Cm_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7Cm
_c7Cn:
	movq (%rbx),%rax
	jmp *(%rax)
_c7Cv:
	leaq GHC.Integer.Type.signumInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.signumInteger_entry, .-GHC.Integer.Type.signumInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.07736714 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.signumInteger_info
.type GHC.Integer.Type.signumInteger_info, @object
GHC.Integer.Type.signumInteger_info:
	.quad	GHC.Integer.Type.signumInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.078663695 UTC

.section .text
.align 8
_c7Cm:
_c7Cm:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u7CG
_c7Cs:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u7CG:
	cmpq $2,%rbx
	jb _c7Cq
_c7Cr:
	leaq GHC.Integer.Type.negativeOneInteger_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7Cq:
	leaq GHC.Integer.Type.oneInteger_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7Cm, .-_c7Cm


==================== Asm code ====================
2018-03-16 15:53:55.079763434 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Cm_info:
	.quad	_c7Cm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.084426954 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.halfBoundUp_closure
.type GHC.Integer.Type.halfBoundUp_closure, @object
GHC.Integer.Type.halfBoundUp_closure:
	.quad	GHC.Integer.Type.halfBoundUp_info


==================== Asm code ====================
2018-03-16 15:53:55.086446188 UTC

.section .text
.align 8
.globl GHC.Integer.Type.halfBoundUp_entry
.type GHC.Integer.Type.halfBoundUp_entry, @object
GHC.Integer.Type.halfBoundUp_entry:
_c7D3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c7D4
_c7D5:
	leaq block_c7D0_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7D0
_c7D1:
	movq (%rbx),%rax
	jmp *(%rax)
_c7D4:
	leaq GHC.Integer.Type.halfBoundUp_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.halfBoundUp_entry, .-GHC.Integer.Type.halfBoundUp_entry


==================== Asm code ====================
2018-03-16 15:53:55.087561619 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.halfBoundUp_info
.type GHC.Integer.Type.halfBoundUp_info, @object
GHC.Integer.Type.halfBoundUp_info:
	.quad	GHC.Integer.Type.halfBoundUp_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.08867962 UTC

.section .text
.align 8
_c7D0:
_c7D0:
	movq $-9223372036854775808,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7D0, .-_c7D0


==================== Asm code ====================
2018-03-16 15:53:55.089756224 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7D0_info:
	.quad	_c7D0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.09452532 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.fullBound_closure
.type GHC.Integer.Type.fullBound_closure, @object
GHC.Integer.Type.fullBound_closure:
	.quad	GHC.Integer.Type.fullBound_info


==================== Asm code ====================
2018-03-16 15:53:55.095835745 UTC

.section .text
.align 8
.globl GHC.Integer.Type.fullBound_entry
.type GHC.Integer.Type.fullBound_entry, @object
GHC.Integer.Type.fullBound_entry:
_c7Ds:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c7Dt
_c7Du:
	leaq block_c7Dp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7Dp
_c7Dq:
	movq (%rbx),%rax
	jmp *(%rax)
_c7Dt:
	leaq GHC.Integer.Type.fullBound_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.fullBound_entry, .-GHC.Integer.Type.fullBound_entry


==================== Asm code ====================
2018-03-16 15:53:55.096944623 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.fullBound_info
.type GHC.Integer.Type.fullBound_info, @object
GHC.Integer.Type.fullBound_info:
	.quad	GHC.Integer.Type.fullBound_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.098092225 UTC

.section .text
.align 8
_c7Dp:
_c7Dp:
	movq $-1,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7Dp, .-_c7Dp


==================== Asm code ====================
2018-03-16 15:53:55.099020168 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Dp_info:
	.quad	_c7Dp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.106779483 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$wsuccPositive_closure
.type GHC.Integer.Type.$wsuccPositive_closure, @object
GHC.Integer.Type.$wsuccPositive_closure:
	.quad	GHC.Integer.Type.$wsuccPositive_info


==================== Asm code ====================
2018-03-16 15:53:55.10823019 UTC

.section .text
.align 8
.globl GHC.Integer.Type.$wsuccPositive_entry
.type GHC.Integer.Type.$wsuccPositive_entry, @object
GHC.Integer.Type.$wsuccPositive_entry:
_c7DV:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c7DW
_c7DX:
	leaq block_c7DO_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7DO
_c7DP:
	movq (%rbx),%rax
	jmp *(%rax)
_c7DW:
	leaq GHC.Integer.Type.$wsuccPositive_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.$wsuccPositive_entry, .-GHC.Integer.Type.$wsuccPositive_entry


==================== Asm code ====================
2018-03-16 15:53:55.109454859 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.$wsuccPositive_info
.type GHC.Integer.Type.$wsuccPositive_info, @object
GHC.Integer.Type.$wsuccPositive_info:
	.quad	GHC.Integer.Type.$wsuccPositive_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.110962988 UTC

.section .text
.align 8
_c7DO:
_c7DO:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c7DS
_c7DT:
	leaq GHC.Integer.Type.None_closure+2(%rip),%r14
	movl $1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7DS:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	cmpq $-1,%rbx
	jne _c7E3
_c7Eb:
	leaq block_c7E6_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	jmp GHC.Integer.Type.$wsuccPositive_entry
_c7E3:
	movq %rax,%r14
	incq %rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7DO, .-_c7DO


==================== Asm code ====================
2018-03-16 15:53:55.112125393 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7DO_info:
	.quad	_c7DO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.113339628 UTC

.section .text
.align 8
_c7E6:
_c7E6:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c7E7
	.size _c7E6, .-_c7E6


==================== Asm code ====================
2018-03-16 15:53:55.114345746 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7E6_info:
	.quad	_c7E6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.115743256 UTC

.section .text
.align 8
_c7E7:
_c7E7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7Ee
_c7Ed:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%r14
	xorl %ebx,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7Ee:
	movq $24,904(%r13)
	leaq block_c7E7_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c7E7, .-_c7E7


==================== Asm code ====================
2018-03-16 15:53:55.11688188 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7E7_info:
	.quad	_c7E7
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.123147133 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.succPositive_closure
.type GHC.Integer.Type.succPositive_closure, @object
GHC.Integer.Type.succPositive_closure:
	.quad	GHC.Integer.Type.succPositive_info


==================== Asm code ====================
2018-03-16 15:53:55.12453804 UTC

.section .text
.align 8
.globl GHC.Integer.Type.succPositive_entry
.type GHC.Integer.Type.succPositive_entry, @object
GHC.Integer.Type.succPositive_entry:
_c7EV:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c7EW
_c7EX:
	leaq block_c7EQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.$wsuccPositive_entry
_c7EW:
	leaq GHC.Integer.Type.succPositive_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.succPositive_entry, .-GHC.Integer.Type.succPositive_entry


==================== Asm code ====================
2018-03-16 15:53:55.126329837 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.succPositive_info
.type GHC.Integer.Type.succPositive_info, @object
GHC.Integer.Type.succPositive_info:
	.quad	GHC.Integer.Type.succPositive_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.127465582 UTC

.section .text
.align 8
_c7EQ:
_c7EQ:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c7ER
	.size _c7EQ, .-_c7EQ


==================== Asm code ====================
2018-03-16 15:53:55.128496953 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7EQ_info:
	.quad	_c7EQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.129829459 UTC

.section .text
.align 8
_c7ER:
_c7ER:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7F0
_c7EZ:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7F0:
	movq $24,904(%r13)
	leaq block_c7ER_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c7ER, .-_c7ER


==================== Asm code ====================
2018-03-16 15:53:55.130707024 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7ER_info:
	.quad	_c7ER
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.135276592 UTC

.section .data
.align 8
.align 1
lvl_r3Bo_closure:
	.quad	lvl_r3Bo_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:55.136325279 UTC

.section .text
.align 8
lvl_r3Bo_entry:
_c7Fv:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c7Fw
_c7Fx:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c7Fp
_c7Fo:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c7Fq_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq GHC.Integer.Type.None_closure+2(%rip),%r14
	addq $-24,%rbp
	jmp GHC.Integer.Type.$wsuccPositive_entry
_c7Fw:
	jmp *-16(%r13)
_c7Fp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl_r3Bo_entry, .-lvl_r3Bo_entry


==================== Asm code ====================
2018-03-16 15:53:55.137207832 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_r3Bo_info:
	.quad	lvl_r3Bo_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:53:55.138353325 UTC

.section .text
.align 8
_c7Fq:
_c7Fq:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c7Fr
	.size _c7Fq, .-_c7Fq


==================== Asm code ====================
2018-03-16 15:53:55.139067872 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Fq_info:
	.quad	_c7Fq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.140011015 UTC

.section .text
.align 8
_c7Fr:
_c7Fr:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7FA
_c7Fz:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7FA:
	movq $24,904(%r13)
	leaq block_c7Fr_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c7Fr, .-_c7Fr


==================== Asm code ====================
2018-03-16 15:53:55.140865232 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Fr_info:
	.quad	_c7Fr
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.153827361 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.plusPositive_addWithCarry_closure
.type GHC.Integer.Type.plusPositive_addWithCarry_closure, @object
GHC.Integer.Type.plusPositive_addWithCarry_closure:
	.quad	GHC.Integer.Type.plusPositive_addWithCarry_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:55.154800632 UTC

.section .text
.align 8
.globl GHC.Integer.Type.plusPositive_addWithCarry_entry
.type GHC.Integer.Type.plusPositive_addWithCarry_entry, @object
GHC.Integer.Type.plusPositive_addWithCarry_entry:
_c7G8:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c7G9
_u7IF:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c7FY
_c7G9:
	leaq GHC.Integer.Type.plusPositive_addWithCarry_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.plusPositive_addWithCarry_entry, .-GHC.Integer.Type.plusPositive_addWithCarry_entry


==================== Asm code ====================
2018-03-16 15:53:55.155524013 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.plusPositive_addWithCarry_info
.type GHC.Integer.Type.plusPositive_addWithCarry_info, @object
GHC.Integer.Type.plusPositive_addWithCarry_info:
	.quad	GHC.Integer.Type.plusPositive_addWithCarry_entry
	.quad	0
	.quad	12884901902
	.quad	12884901907
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.156448916 UTC

.section .text
.align 8
_c7FY:
_c7FY:
	leaq block_c7G1_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7G1
_c7G2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c7FY, .-_c7FY


==================== Asm code ====================
2018-03-16 15:53:55.157599201 UTC

.section .text
.align 8
_c7G1:
_c7G1:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c7G5
_c7G6:
	leaq block_c7I9_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c7I9
_c7Ib:
	movq (%rbx),%rax
	jmp *(%rax)
_c7G5:
	leaq block_c7Gd_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rsi,16(%rbp)
	movq %rcx,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c7Gd
_c7Gf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c7G1, .-_c7G1


==================== Asm code ====================
2018-03-16 15:53:55.158988463 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7G1_info:
	.quad	_c7G1
	.quad	195
	.quad	12884901918
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.160312056 UTC

.section .text
.align 8
_c7Gd:
_c7Gd:
	movq 16(%rbp),%rax
	movq 32(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c7HP
_c7I6:
	testq %rax,%rax
	je _c7I5
_c7I1:
	leaq block_c7HV_info(%rip),%rax
	movq %rax,32(%rbp)
	movq %rcx,%r14
	addq $32,%rbp
	jmp GHC.Integer.Type.$wsuccPositive_entry
_c7I5:
	movq %rcx,%rbx
	andq $-8,%rbx
	addq $40,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c7HP:
	movq 24(%rbp),%rdx
	movq 15(%rbx),%rsi
	cmpq %rsi,%rdx
	jae _c7HM
_c7HN:
	movq %rax,16(%rbp)
	movq %rbx,24(%rbp)
	movq %rcx,32(%rbp)
	addq $16,%rbp
	jmp _c7FY
_c7HM:
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq $-9223372036854775808,%rdi
	cmpq %rdi,%rsi
	jb _c7Ho
_c7HH:
	leaq block_c7Hq_info(%rip),%rax
	movq %rax,8(%rbp)
	movq %rbx,%rdi
	movq %rsi,%rax
	movq %rcx,%rsi
	movl $1,%r14d
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
_c7Ho:
	movq $-9223372036854775808,%rdi
	cmpq %rdi,%rdx
	jb _c7GF
_c7Hm:
	addq %rax,%rsi
	movq $-9223372036854775808,%rax
	addq %rax,%rdx
	addq %rsi,%rdx
	movq $-9223372036854775808,%rax
	cmpq %rax,%rdx
	jae _c7H5
_c7Hi:
	leaq block_c7Ha_info(%rip),%rax
	movq %rax,24(%rbp)
	movq %rbx,%rdi
	movq %rcx,%rsi
	xorl %r14d,%r14d
	movq %rdx,32(%rbp)
	addq $24,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
_c7H5:
	leaq block_c7GW_info(%rip),%rax
	movq %rax,24(%rbp)
	movq %rbx,%rdi
	movq %rcx,%rsi
	movl $1,%r14d
	movq %rdx,32(%rbp)
	addq $24,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
_c7GF:
	leaq block_c7Gt_info(%rip),%rax
	movq %rax,8(%rbp)
	movq %rbx,%rdi
	movq %rsi,%rax
	movq %rcx,%rsi
	xorl %r14d,%r14d
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
	.size _c7Gd, .-_c7Gd


==================== Asm code ====================
2018-03-16 15:53:55.161564872 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Gd_info:
	.quad	_c7Gd
	.quad	388
	.quad	12884901918
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.162488337 UTC

.section .text
.align 8
_c7Gt:
_c7Gt:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7GI
_c7GH:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rax
	addq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	addq %rax,%rbx
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7GI:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c7Gt, .-_c7Gt


==================== Asm code ====================
2018-03-16 15:53:55.163248583 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Gt_info:
	.quad	_c7Gt
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.164135543 UTC

.section .text
.align 8
_c7GW:
_c7GW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7H8
_c7H7:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq $-9223372036854775808,%rax
	movq 8(%rbp),%rbx
	addq %rax,%rbx
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7H8:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c7GW, .-_c7GW


==================== Asm code ====================
2018-03-16 15:53:55.16486622 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7GW_info:
	.quad	_c7GW
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.16592864 UTC

.section .text
.align 8
_c7Ha:
_c7Ha:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7Hl
_c7Hk:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq $-9223372036854775808,%rax
	movq 8(%rbp),%rbx
	addq %rax,%rbx
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7Hl:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c7Ha, .-_c7Ha


==================== Asm code ====================
2018-03-16 15:53:55.166627474 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Ha_info:
	.quad	_c7Ha
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.167458919 UTC

.section .text
.align 8
_c7Hq:
_c7Hq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7HK
_c7HJ:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rax
	addq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	addq %rax,%rbx
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7HK:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c7Hq, .-_c7Hq


==================== Asm code ====================
2018-03-16 15:53:55.168221379 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Hq_info:
	.quad	_c7Hq
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.169039929 UTC

.section .text
.align 8
_c7HV:
_c7HV:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c7HW
	.size _c7HV, .-_c7HV


==================== Asm code ====================
2018-03-16 15:53:55.170196362 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7HV_info:
	.quad	_c7HV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.171074907 UTC

.section .text
.align 8
_c7HW:
_c7HW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7I4
_c7I3:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7I4:
	movq $24,904(%r13)
	leaq block_c7HW_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c7HW, .-_c7HW


==================== Asm code ====================
2018-03-16 15:53:55.17184962 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7HW_info:
	.quad	_c7HW
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.172777522 UTC

.section .text
.align 8
_c7I9:
_c7I9:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c7Iu
_c7IC:
	testq %rax,%rax
	je _c7IB
_c7IA:
	leaq lvl_r3Bo_closure(%rip),%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c7IB:
	leaq GHC.Integer.Type.None_closure+2(%rip),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7Is:
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c7Iu:
	testq %rax,%rax
	je _c7Is
_c7Io:
	leaq block_c7Ii_info(%rip),%rax
	movq %rax,24(%rbp)
	movq %rbx,%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.$wsuccPositive_entry
	.size _c7I9, .-_c7I9


==================== Asm code ====================
2018-03-16 15:53:55.173643014 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7I9_info:
	.quad	_c7I9
	.quad	451
	.quad	4294967326
	.quad	S7IQ_srt+8


==================== Asm code ====================
2018-03-16 15:53:55.174374365 UTC

.section .text
.align 8
_c7Ii:
_c7Ii:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c7Ij
	.size _c7Ii, .-_c7Ii


==================== Asm code ====================
2018-03-16 15:53:55.175067683 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Ii_info:
	.quad	_c7Ii
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.175889593 UTC

.section .text
.align 8
_c7Ij:
_c7Ij:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7Ir
_c7Iq:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7Ir:
	movq $24,904(%r13)
	leaq block_c7Ij_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c7Ij, .-_c7Ij


==================== Asm code ====================
2018-03-16 15:53:55.176642259 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Ij_info:
	.quad	_c7Ij
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.17969464 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.plusPositive_closure
.type GHC.Integer.Type.plusPositive_closure, @object
GHC.Integer.Type.plusPositive_closure:
	.quad	GHC.Integer.Type.plusPositive_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:55.180505534 UTC

.section .text
.align 8
.globl GHC.Integer.Type.plusPositive_entry
.type GHC.Integer.Type.plusPositive_entry, @object
GHC.Integer.Type.plusPositive_entry:
_c7KB:
	movq %rsi,%rdi
	movq %r14,%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
	.size GHC.Integer.Type.plusPositive_entry, .-GHC.Integer.Type.plusPositive_entry


==================== Asm code ====================
2018-03-16 15:53:55.181623433 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.plusPositive_info
.type GHC.Integer.Type.plusPositive_info, @object
GHC.Integer.Type.plusPositive_info:
	.quad	GHC.Integer.Type.plusPositive_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.190001978 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.minusPositive_closure
.type GHC.Integer.Type.minusPositive_closure, @object
GHC.Integer.Type.minusPositive_closure:
	.quad	GHC.Integer.Type.minusPositive_info


==================== Asm code ====================
2018-03-16 15:53:55.191016883 UTC

.section .text
.align 8
.globl GHC.Integer.Type.minusPositive_entry
.type GHC.Integer.Type.minusPositive_entry, @object
GHC.Integer.Type.minusPositive_entry:
_c7KT:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c7KU
_c7KV:
	leaq block_c7KM_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c7KM
_c7KN:
	movq (%rbx),%rax
	jmp *(%rax)
_c7KU:
	leaq GHC.Integer.Type.minusPositive_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.minusPositive_entry, .-GHC.Integer.Type.minusPositive_entry


==================== Asm code ====================
2018-03-16 15:53:55.192217317 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.minusPositive_info
.type GHC.Integer.Type.minusPositive_info, @object
GHC.Integer.Type.minusPositive_info:
	.quad	GHC.Integer.Type.minusPositive_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.193169039 UTC

.section .text
.align 8
_c7KM:
_c7KM:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c7KQ
_c7KR:
	leaq block_c7Mc_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c7Mc
_c7Me:
	movq (%rbx),%rax
	jmp *(%rax)
_c7KQ:
	leaq block_c7KY_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rdx,-8(%rbp)
	movq %rsi,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c7KY
_c7L0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c7KM, .-_c7KM


==================== Asm code ====================
2018-03-16 15:53:55.194054291 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7KM_info:
	.quad	_c7KM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.195076539 UTC

.section .text
.align 8
_c7KY:
_c7KY:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c7M5
_c7M9:
	movq 24(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c7LQ:
	leaq block_c7LP_info(%rip),%rax
	movq %rax,24(%rbp)
	movq %rdx,%rsi
	movq %rcx,%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
_c7M5:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	cmpq %rbx,%rax
	je _c7LQ
_c7LN:
	cmpq %rbx,%rax
	jbe _c7Lu
_c7LI:
	leaq block_c7LA_info(%rip),%rax
	movq %rax,8(%rbp)
	movq %rdx,%rsi
	movq %rcx,%r14
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
_c7Lu:
	leaq block_c7Lb_info(%rip),%rax
	movq %rax,8(%rbp)
	movq %rdx,%rsi
	movq %rcx,%r14
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
	.size _c7KY, .-_c7KY


==================== Asm code ====================
2018-03-16 15:53:55.196020623 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7KY_info:
	.quad	_c7KY
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.196929617 UTC

.section .text
.align 8
_c7LP:
_c7LP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c7LW
_u7Mt:
	addq $8,%rbp
	jmp _c7Mo
_c7LZ:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c7LW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7LZ
_c7LY:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq $0,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7LP, .-_c7LP


==================== Asm code ====================
2018-03-16 15:53:55.197765288 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7LP_info:
	.quad	_c7LP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.198476902 UTC

.section .text
.align 8
_c7Lb:
_c7Lb:
	leaq block_c7Lf_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Integer.Type.onePositive_closure+1(%rip),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.minusPositive_entry
	.size _c7Lb, .-_c7Lb


==================== Asm code ====================
2018-03-16 15:53:55.199156932 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Lb_info:
	.quad	_c7Lb
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.199977841 UTC

.section .text
.align 8
_c7Lf:
_c7Lf:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7Ly
_c7Lx:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	incq %rax
	movq $-1,%rbx
	subq 16(%rbp),%rbx
	addq %rax,%rbx
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7Ly:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c7Lf, .-_c7Lf


==================== Asm code ====================
2018-03-16 15:53:55.200681077 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Lf_info:
	.quad	_c7Lf
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.201586308 UTC

.section .text
.align 8
_c7LA:
_c7LA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7LL
_c7LK:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	subq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7LL:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c7LA, .-_c7LA


==================== Asm code ====================
2018-03-16 15:53:55.20232425 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7LA_info:
	.quad	_c7LA
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.203542984 UTC

.section .text
.align 8
_c7Mc:
_c7Mc:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c7Mk
_u7Ms:
	addq $8,%rbp
	jmp _c7Mo
_c7Mk:
	leaq GHC.Integer.Type.errorPositive_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7Mc, .-_c7Mc


==================== Asm code ====================
2018-03-16 15:53:55.204247157 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Mc_info:
	.quad	_c7Mc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.205025784 UTC

.section .text
.align 8
_c7Mo:
_c7Mo:
	leaq GHC.Integer.Type.None_closure+2(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7Mo, .-_c7Mo


==================== Asm code ====================
2018-03-16 15:53:55.208693146 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.twosComplementPositive1_closure
.type GHC.Integer.Type.twosComplementPositive1_closure, @object
GHC.Integer.Type.twosComplementPositive1_closure:
	.quad	GHC.Integer.Type.twosComplementPositive1_info


==================== Asm code ====================
2018-03-16 15:53:55.20968355 UTC

.section .text
.align 8
.globl GHC.Integer.Type.twosComplementPositive1_entry
.type GHC.Integer.Type.twosComplementPositive1_entry, @object
GHC.Integer.Type.twosComplementPositive1_entry:
_c7NG:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c7NH
_c7NI:
	leaq block_c7NE_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Integer.Type.onePositive_closure+1(%rip),%rsi
	addq $-8,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
_c7NH:
	leaq GHC.Integer.Type.twosComplementPositive1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.twosComplementPositive1_entry, .-GHC.Integer.Type.twosComplementPositive1_entry


==================== Asm code ====================
2018-03-16 15:53:55.210434372 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.twosComplementPositive1_info
.type GHC.Integer.Type.twosComplementPositive1_info, @object
GHC.Integer.Type.twosComplementPositive1_info:
	.quad	GHC.Integer.Type.twosComplementPositive1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.211184827 UTC

.section .text
.align 8
_c7NE:
_c7NE:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.flipBitsDigits_entry
	.size _c7NE, .-_c7NE


==================== Asm code ====================
2018-03-16 15:53:55.211901815 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7NE_info:
	.quad	_c7NE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.214644187 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.twosComplementPositive_closure
.type GHC.Integer.Type.twosComplementPositive_closure, @object
GHC.Integer.Type.twosComplementPositive_closure:
	.quad	GHC.Integer.Type.twosComplementPositive_info


==================== Asm code ====================
2018-03-16 15:53:55.215832358 UTC

.section .text
.align 8
.globl GHC.Integer.Type.twosComplementPositive_entry
.type GHC.Integer.Type.twosComplementPositive_entry, @object
GHC.Integer.Type.twosComplementPositive_entry:
_c7NZ:
	jmp GHC.Integer.Type.twosComplementPositive1_entry
	.size GHC.Integer.Type.twosComplementPositive_entry, .-GHC.Integer.Type.twosComplementPositive_entry


==================== Asm code ====================
2018-03-16 15:53:55.216599406 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.twosComplementPositive_info
.type GHC.Integer.Type.twosComplementPositive_info, @object
GHC.Integer.Type.twosComplementPositive_info:
	.quad	GHC.Integer.Type.twosComplementPositive_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.21994345 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.lowHalfMask_closure
.type GHC.Integer.Type.lowHalfMask_closure, @object
GHC.Integer.Type.lowHalfMask_closure:
	.quad	GHC.Integer.Type.lowHalfMask_info


==================== Asm code ====================
2018-03-16 15:53:55.220989713 UTC

.section .text
.align 8
.globl GHC.Integer.Type.lowHalfMask_entry
.type GHC.Integer.Type.lowHalfMask_entry, @object
GHC.Integer.Type.lowHalfMask_entry:
_c7Od:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c7Oe
_c7Of:
	leaq block_c7Oa_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7Oa
_c7Ob:
	movq (%rbx),%rax
	jmp *(%rax)
_c7Oe:
	leaq GHC.Integer.Type.lowHalfMask_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.lowHalfMask_entry, .-GHC.Integer.Type.lowHalfMask_entry


==================== Asm code ====================
2018-03-16 15:53:55.226336269 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.lowHalfMask_info
.type GHC.Integer.Type.lowHalfMask_info, @object
GHC.Integer.Type.lowHalfMask_info:
	.quad	GHC.Integer.Type.lowHalfMask_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.227607469 UTC

.section .text
.align 8
_c7Oa:
_c7Oa:
	movl $4294967295,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7Oa, .-_c7Oa


==================== Asm code ====================
2018-03-16 15:53:55.228705802 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Oa_info:
	.quad	_c7Oa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.234586006 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.highHalfShift_closure
.type GHC.Integer.Type.highHalfShift_closure, @object
GHC.Integer.Type.highHalfShift_closure:
	.quad	GHC.Integer.Type.highHalfShift_info


==================== Asm code ====================
2018-03-16 15:53:55.236136444 UTC

.section .text
.align 8
.globl GHC.Integer.Type.highHalfShift_entry
.type GHC.Integer.Type.highHalfShift_entry, @object
GHC.Integer.Type.highHalfShift_entry:
_c7OC:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c7OD
_c7OE:
	leaq block_c7Oz_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7Oz
_c7OA:
	movq (%rbx),%rax
	jmp *(%rax)
_c7OD:
	leaq GHC.Integer.Type.highHalfShift_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.highHalfShift_entry, .-GHC.Integer.Type.highHalfShift_entry


==================== Asm code ====================
2018-03-16 15:53:55.237378185 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.highHalfShift_info
.type GHC.Integer.Type.highHalfShift_info, @object
GHC.Integer.Type.highHalfShift_info:
	.quad	GHC.Integer.Type.highHalfShift_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.238564558 UTC

.section .text
.align 8
_c7Oz:
_c7Oz:
	movl $32,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7Oz, .-_c7Oz


==================== Asm code ====================
2018-03-16 15:53:55.239641904 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Oz_info:
	.quad	_c7Oz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.243989375 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.splitHalves_closure
.type GHC.Integer.Type.splitHalves_closure, @object
GHC.Integer.Type.splitHalves_closure:
	.quad	GHC.Integer.Type.splitHalves_info


==================== Asm code ====================
2018-03-16 15:53:55.245164259 UTC

.section .text
.align 8
.globl GHC.Integer.Type.splitHalves_entry
.type GHC.Integer.Type.splitHalves_entry, @object
GHC.Integer.Type.splitHalves_entry:
_c7P0:
	movq %r14,%rax
	shrq $32,%rax
	movl $4294967295,%ebx
	andq %rbx,%r14
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.splitHalves_entry, .-GHC.Integer.Type.splitHalves_entry


==================== Asm code ====================
2018-03-16 15:53:55.246347736 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.splitHalves_info
.type GHC.Integer.Type.splitHalves_info, @object
GHC.Integer.Type.splitHalves_info:
	.quad	GHC.Integer.Type.splitHalves_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:53:55.254707364 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.doubleFromPositive_closure
.type GHC.Integer.Type.doubleFromPositive_closure, @object
GHC.Integer.Type.doubleFromPositive_closure:
	.quad	GHC.Integer.Type.doubleFromPositive_info


==================== Asm code ====================
2018-03-16 15:53:55.256256172 UTC

.section .text
.align 8
.globl GHC.Integer.Type.doubleFromPositive_entry
.type GHC.Integer.Type.doubleFromPositive_entry, @object
GHC.Integer.Type.doubleFromPositive_entry:
_c7Pn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c7Po
_c7Pp:
	leaq block_c7Pg_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7Pg
_c7Ph:
	movq (%rbx),%rax
	jmp *(%rax)
_c7Po:
	leaq GHC.Integer.Type.doubleFromPositive_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.doubleFromPositive_entry, .-GHC.Integer.Type.doubleFromPositive_entry


==================== Asm code ====================
2018-03-16 15:53:55.257467959 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.doubleFromPositive_info
.type GHC.Integer.Type.doubleFromPositive_info, @object
GHC.Integer.Type.doubleFromPositive_info:
	.quad	GHC.Integer.Type.doubleFromPositive_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.258891424 UTC

.section .text
.align 8
_c7Pg:
_c7Pg:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c7Pk
_c7Pl:
	xorpd %xmm1,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7Pk:
	leaq block_c7Ps_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.doubleFromPositive_entry
	.size _c7Pg, .-_c7Pg


==================== Asm code ====================
2018-03-16 15:53:55.259974749 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Pg_info:
	.quad	_c7Pg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.261726146 UTC

.section .text
.align 8
_c7Ps:
_c7Ps:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movsd _n7Qu(%rip),%xmm0
	movsd %xmm1,%xmm2
	movsd _n7Qv(%rip),%xmm1
	movq %rax,%rbx
	movl $2,%eax
	movsd %xmm2,72(%rsp)
	call pow@plt
	addq $8,%rsp
	subq $8,%rsp
	movsd %xmm0,%xmm1
	movsd _n7Qw(%rip),%xmm0
	movsd %xmm1,%xmm2
	movsd _n7Qx(%rip),%xmm1
	movl $2,%eax
	movsd %xmm2,80(%rsp)
	call pow@plt
	addq $8,%rsp
	movl $4294967295,%eax
	movq %rbx,%rcx
	andq %rax,%rcx
	cvtsi2sdq %rcx,%xmm1
	shrq $32,%rbx
	cvtsi2sdq %rbx,%xmm2
	movsd 72(%rsp),%xmm3
	mulsd %xmm3,%xmm2
	movsd %xmm1,%xmm4
	movsd 64(%rsp),%xmm3
	movsd %xmm3,%xmm1
	mulsd %xmm0,%xmm1
	addsd %xmm2,%xmm1
	addsd %xmm4,%xmm1
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7Ps, .-_c7Ps
.section .rodata
.align 8
.align 8
_n7Qu:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.section .rodata
.align 8
.align 8
_n7Qv:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
	.byte	64
.section .rodata
.align 8
.align 8
_n7Qw:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.section .rodata
.align 8
.align 8
_n7Qx:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	80
	.byte	64


==================== Asm code ====================
2018-03-16 15:53:55.263346462 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Ps_info:
	.quad	_c7Ps
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.270581104 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.doubleFromInteger_closure
.type GHC.Integer.Type.doubleFromInteger_closure, @object
GHC.Integer.Type.doubleFromInteger_closure:
	.quad	GHC.Integer.Type.doubleFromInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.272098744 UTC

.section .text
.align 8
.globl GHC.Integer.Type.doubleFromInteger_entry
.type GHC.Integer.Type.doubleFromInteger_entry, @object
GHC.Integer.Type.doubleFromInteger_entry:
_c7QX:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c7QY
_c7QZ:
	leaq block_c7QP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7QP
_c7QQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c7QY:
	leaq GHC.Integer.Type.doubleFromInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.doubleFromInteger_entry, .-GHC.Integer.Type.doubleFromInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.273418161 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.doubleFromInteger_info
.type GHC.Integer.Type.doubleFromInteger_info, @object
GHC.Integer.Type.doubleFromInteger_info:
	.quad	GHC.Integer.Type.doubleFromInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.27491739 UTC

.section .text
.align 8
_c7QP:
_c7QP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u7Rf
_c7QV:
	xorpd %xmm1,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u7Rf:
	cmpq $2,%rax
	jb _c7QT
_c7QU:
	leaq block_c7R5_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%r14
	jmp GHC.Integer.Type.doubleFromPositive_entry
_c7QT:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.doubleFromPositive_entry
	.size _c7QP, .-_c7QP


==================== Asm code ====================
2018-03-16 15:53:55.276086399 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7QP_info:
	.quad	_c7QP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.2773238 UTC

.section .text
.align 8
_c7R5:
_c7R5:
	movsd _n7Rv(%rip),%xmm0
	xorpd %xmm0,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7R5, .-_c7R5
.section .rodata
.align 8
.align 8
_n7Rv:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:53:55.278079105 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7R5_info:
	.quad	_c7R5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.283086444 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.floatFromPositive_closure
.type GHC.Integer.Type.floatFromPositive_closure, @object
GHC.Integer.Type.floatFromPositive_closure:
	.quad	GHC.Integer.Type.floatFromPositive_info


==================== Asm code ====================
2018-03-16 15:53:55.284600885 UTC

.section .text
.align 8
.globl GHC.Integer.Type.floatFromPositive_entry
.type GHC.Integer.Type.floatFromPositive_entry, @object
GHC.Integer.Type.floatFromPositive_entry:
_c7RL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c7RM
_c7RN:
	leaq block_c7RE_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7RE
_c7RF:
	movq (%rbx),%rax
	jmp *(%rax)
_c7RM:
	leaq GHC.Integer.Type.floatFromPositive_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.floatFromPositive_entry, .-GHC.Integer.Type.floatFromPositive_entry


==================== Asm code ====================
2018-03-16 15:53:55.285714621 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.floatFromPositive_info
.type GHC.Integer.Type.floatFromPositive_info, @object
GHC.Integer.Type.floatFromPositive_info:
	.quad	GHC.Integer.Type.floatFromPositive_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.286977143 UTC

.section .text
.align 8
_c7RE:
_c7RE:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c7RI
_c7RJ:
	xorps %xmm1,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7RI:
	leaq block_c7RQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.floatFromPositive_entry
	.size _c7RE, .-_c7RE


==================== Asm code ====================
2018-03-16 15:53:55.288109575 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7RE_info:
	.quad	_c7RE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.29436139 UTC

.section .text
.align 8
_c7RQ:
_c7RQ:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movss _n7SS(%rip),%xmm0
	movsd %xmm1,%xmm2
	movss _n7ST(%rip),%xmm1
	movq %rax,%rbx
	movl $2,%eax
	movsd %xmm2,72(%rsp)
	call powf@plt
	addq $8,%rsp
	subq $8,%rsp
	movsd %xmm0,%xmm1
	movss _n7SU(%rip),%xmm0
	movsd %xmm1,%xmm2
	movss _n7SV(%rip),%xmm1
	movl $2,%eax
	movsd %xmm2,80(%rsp)
	call powf@plt
	addq $8,%rsp
	movl $4294967295,%eax
	movq %rbx,%rcx
	andq %rax,%rcx
	cvtsi2ssq %rcx,%xmm1
	shrq $32,%rbx
	cvtsi2ssq %rbx,%xmm2
	movsd 72(%rsp),%xmm3
	mulss %xmm3,%xmm2
	movsd %xmm1,%xmm4
	movsd 64(%rsp),%xmm3
	movss %xmm3,%xmm1
	mulss %xmm0,%xmm1
	addss %xmm2,%xmm1
	addss %xmm4,%xmm1
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7RQ, .-_c7RQ
.section .rodata
.align 8
.align 4
_n7SS:
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.section .rodata
.align 8
.align 4
_n7ST:
	.byte	0
	.byte	0
	.byte	0
	.byte	66
.section .rodata
.align 8
.align 4
_n7SU:
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.section .rodata
.align 8
.align 4
_n7SV:
	.byte	0
	.byte	0
	.byte	128
	.byte	66


==================== Asm code ====================
2018-03-16 15:53:55.295930294 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7RQ_info:
	.quad	_c7RQ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.302346625 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.floatFromInteger_closure
.type GHC.Integer.Type.floatFromInteger_closure, @object
GHC.Integer.Type.floatFromInteger_closure:
	.quad	GHC.Integer.Type.floatFromInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.303788457 UTC

.section .text
.align 8
.globl GHC.Integer.Type.floatFromInteger_entry
.type GHC.Integer.Type.floatFromInteger_entry, @object
GHC.Integer.Type.floatFromInteger_entry:
_c7Tl:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c7Tm
_c7Tn:
	leaq block_c7Td_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c7Td
_c7Te:
	movq (%rbx),%rax
	jmp *(%rax)
_c7Tm:
	leaq GHC.Integer.Type.floatFromInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.floatFromInteger_entry, .-GHC.Integer.Type.floatFromInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.305043064 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.floatFromInteger_info
.type GHC.Integer.Type.floatFromInteger_info, @object
GHC.Integer.Type.floatFromInteger_info:
	.quad	GHC.Integer.Type.floatFromInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.307279967 UTC

.section .text
.align 8
_c7Td:
_c7Td:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u7TD
_c7Tj:
	xorps %xmm1,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u7TD:
	cmpq $2,%rax
	jb _c7Th
_c7Ti:
	leaq block_c7Tt_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%r14
	jmp GHC.Integer.Type.floatFromPositive_entry
_c7Th:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.floatFromPositive_entry
	.size _c7Td, .-_c7Td


==================== Asm code ====================
2018-03-16 15:53:55.308548407 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Td_info:
	.quad	_c7Td
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.30977785 UTC

.section .text
.align 8
_c7Tt:
_c7Tt:
	movss _n7TT(%rip),%xmm0
	xorps %xmm0,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7Tt, .-_c7Tt
.section .rodata
.align 8
.align 4
_n7TT:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:53:55.310873581 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Tt_info:
	.quad	_c7Tt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.320479829 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.timesDigit_closure
.type GHC.Integer.Type.timesDigit_closure, @object
GHC.Integer.Type.timesDigit_closure:
	.quad	GHC.Integer.Type.timesDigit_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:55.322479585 UTC

.section .text
.align 8
.globl GHC.Integer.Type.timesDigit_entry
.type GHC.Integer.Type.timesDigit_entry, @object
GHC.Integer.Type.timesDigit_entry:
_c7U4:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c7UI
_c7UJ:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c7UL
_c7UK:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-64(%r12)
	leaq GHC.Integer.Type.None_closure+2(%rip),%rax
	movq %rax,-56(%r12)
	movl $4294967295,%eax
	movq %rsi,%rbx
	andq %rax,%rbx
	movl $4294967295,%eax
	movq %r14,%rcx
	andq %rax,%rcx
	movq %rcx,%rax
	imulq %rbx,%rax
	movq %rax,-48(%r12)
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.Integer.Type.None_closure+2(%rip),%rax
	movq %rax,-32(%r12)
	shrq $32,%rsi
	imulq %rsi,%rcx
	movl $4294967295,%eax
	movq %rcx,%rdx
	andq %rax,%rdx
	shlq $32,%rdx
	movq %rdx,-24(%r12)
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.Integer.Type.None_closure+2(%rip),%rax
	movq %rax,-8(%r12)
	shrq $32,%r14
	movq %r14,%rax
	imulq %rbx,%rax
	movl $4294967295,%ebx
	movq %rax,%rdx
	andq %rbx,%rdx
	shlq $32,%rdx
	movq %rdx,(%r12)
	leaq block_c7UD_info(%rip),%rbx
	movq %rbx,-48(%rbp)
	leaq -39(%r12),%rdi
	movq %rsi,%rbx
	leaq -15(%r12),%rsi
	movq %r14,%rdx
	xorl %r14d,%r14d
	leaq -63(%r12),%r8
	movq %r8,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
_c7UL:
	movq $72,904(%r13)
_c7UI:
	leaq GHC.Integer.Type.timesDigit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.timesDigit_entry, .-GHC.Integer.Type.timesDigit_entry


==================== Asm code ====================
2018-03-16 15:53:55.324903777 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.timesDigit_info
.type GHC.Integer.Type.timesDigit_info, @object
GHC.Integer.Type.timesDigit_info:
	.quad	GHC.Integer.Type.timesDigit_entry
	.quad	0
	.quad	21474836494
	.quad	8589934604
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.326271676 UTC

.section .text
.align 8
_c7UD:
_c7UD:
	movq 8(%rbp),%rax
	leaq block_c7UH_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rdi
	movq %rbx,%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
	.size _c7UD, .-_c7UD


==================== Asm code ====================
2018-03-16 15:53:55.327307162 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7UD_info:
	.quad	_c7UD
	.quad	1925
	.quad	4294967326
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.328616627 UTC

.section .text
.align 8
_c7UH:
_c7UH:
	movq 32(%rbp),%rax
	shrq $32,%rax
	movq 16(%rbp),%rcx
	shrq $32,%rcx
	addq %rax,%rcx
	movq 8(%rbp),%rax
	imulq 24(%rbp),%rax
	addq %rcx,%rax
	testq %rax,%rax
	je _c7Vi
_u7Vm:
	movq %rax,24(%rbp)
	movq %rbx,32(%rbp)
	addq $24,%rbp
	jmp _c7V7
_c7Vi:
	andq $-8,%rbx
	addq $40,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c7UH, .-_c7UH


==================== Asm code ====================
2018-03-16 15:53:55.329885287 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7UH_info:
	.quad	_c7UH
	.quad	964
	.quad	4294967326
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.331354761 UTC

.section .text
.align 8
_c7V7:
_c7V7:
	addq $48,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c7Vf
_c7Ve:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rbx
	movq %rbx,-40(%r12)
	leaq GHC.Integer.Type.None_closure+2(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	movq $0,(%r12)
	movq 8(%rbp),%rdi
	leaq -15(%r12),%rsi
	xorl %r14d,%r14d
	addq $16,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
_c7Vf:
	movq $48,904(%r13)
	leaq block_c7V6_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c7V7, .-_c7V7


==================== Asm code ====================
2018-03-16 15:53:55.332725919 UTC

.section .text
.align 8
_c7V6:
_c7V6:
	movq %rbx,(%rbp)
	jmp _c7V7
	.size _c7V6, .-_c7V6


==================== Asm code ====================
2018-03-16 15:53:55.333874621 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7V6_info:
	.quad	_c7V6
	.quad	1
	.quad	4294967326
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.348830797 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.timesPositive_closure
.type GHC.Integer.Type.timesPositive_closure, @object
GHC.Integer.Type.timesPositive_closure:
	.quad	GHC.Integer.Type.timesPositive_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:55.350024017 UTC

.section .text
.align 8
.globl GHC.Integer.Type.timesPositive_entry
.type GHC.Integer.Type.timesPositive_entry, @object
GHC.Integer.Type.timesPositive_entry:
_c7Wq:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c7Wr
_u7Ya:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c7Wg
_c7Wr:
	leaq GHC.Integer.Type.timesPositive_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.timesPositive_entry, .-GHC.Integer.Type.timesPositive_entry


==================== Asm code ====================
2018-03-16 15:53:55.350838571 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.timesPositive_info
.type GHC.Integer.Type.timesPositive_info, @object
GHC.Integer.Type.timesPositive_info:
	.quad	GHC.Integer.Type.timesPositive_entry
	.quad	0
	.quad	55834574862
	.quad	8589934607
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.351825604 UTC

.section .text
.align 8
_c7Wg:
_c7Wg:
	movq (%rbp),%rax
	leaq block_c7Wj_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c7Wj
_c7Wk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c7Wg, .-_c7Wg


==================== Asm code ====================
2018-03-16 15:53:55.352871169 UTC

.section .text
.align 8
_c7Wj:
_c7Wj:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c7Wn
_c7Wo:
	leaq block_c7XZ_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c7XZ
_c7Y1:
	movq (%rbx),%rax
	jmp *(%rax)
_c7Wn:
	leaq block_c7Wv_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rdx,-8(%rbp)
	movq %rsi,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c7Wv
_c7Wx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c7Wj, .-_c7Wj


==================== Asm code ====================
2018-03-16 15:53:55.354270985 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Wj_info:
	.quad	_c7Wj
	.quad	1
	.quad	55834574878
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.355362576 UTC

.section .text
.align 8
_c7Wv:
_c7Wv:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c7WE
_c7XW:
	leaq GHC.Integer.Type.errorPositive_closure+1(%rip),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7WE:
	leaq block_c7WB_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rcx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c7WB
_c7WF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c7Wv, .-_c7Wv


==================== Asm code ====================
2018-03-16 15:53:55.356549442 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Wv_info:
	.quad	_c7Wv
	.quad	131
	.quad	55834574878
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.358107769 UTC

.section .text
.align 8
_c7WB:
_c7WB:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c7WM
_c7XH:
	leaq block_c7XF_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c7XF
_c7XI:
	movq (%rbx),%rax
	jmp *(%rax)
_c7WM:
	leaq block_c7WJ_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,40(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c7WJ
_c7WN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c7WB, .-_c7WB


==================== Asm code ====================
2018-03-16 15:53:55.35922527 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7WB_info:
	.quad	_c7WB
	.quad	645
	.quad	55834574878
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.360523751 UTC

.section .text
.align 8
_c7WJ:
_c7WJ:
	movq 16(%rbp),%rax
	movq 32(%rbp),%rcx
	andl $7,%ebx
	cmpq $1,%rbx
	je _c7X0
_c7XC:
	movq 24(%rbp),%rbx
	testq %rbx,%rbx
	jne _c7Xk
_c7Xy:
	leaq block_c7Xt_info(%rip),%rbx
	movq %rbx,32(%rbp)
	movq %rax,%rsi
	movq %rcx,%r14
	addq $32,%rbp
	jmp GHC.Integer.Type.timesPositive_entry
_c7Xk:
	leaq block_c7Xd_info(%rip),%rdx
	movq %rdx,(%rbp)
	movq %rax,%rsi
	movq %rcx,%r14
	movq %rbx,32(%rbp)
	jmp GHC.Integer.Type.timesPositive_entry
_c7X0:
	leaq block_c7WR_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rsi
	movq %rcx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesPositive_entry
	.size _c7WJ, .-_c7WJ


==================== Asm code ====================
2018-03-16 15:53:55.36184818 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7WJ_info:
	.quad	_c7WJ
	.quad	324
	.quad	55834574878
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.362803826 UTC

.section .text
.align 8
_c7WR:
_c7WR:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c7X3
_c7X2:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-32(%r12)
	movq $0,-24(%r12)
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.Integer.Type.None_closure+2(%rip),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c7WX_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rsi
	leaq -15(%r12),%r14
	leaq -39(%r12),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp GHC.Integer.Type.timesPositive_entry
_c7X3:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c7WR, .-_c7WR


==================== Asm code ====================
2018-03-16 15:53:55.363661229 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7WR_info:
	.quad	_c7WR
	.quad	387
	.quad	38654705694
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.364409424 UTC

.section .text
.align 8
_c7WX:
_c7WX:
	movq 8(%rbp),%rdi
	movq %rbx,%rsi
	xorl %r14d,%r14d
	addq $16,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
	.size _c7WX, .-_c7WX


==================== Asm code ====================
2018-03-16 15:53:55.365157223 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7WX_info:
	.quad	_c7WX
	.quad	1
	.quad	4294967326
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.366404665 UTC

.section .text
.align 8
_c7Xd:
_c7Xd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7Xn
_c7Xm:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq $0,(%r12)
	leaq block_c7Xi_info(%rip),%rax
	movq %rax,24(%rbp)
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	leaq -15(%r12),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp GHC.Integer.Type.timesDigit_entry
_c7Xn:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c7Xd, .-_c7Xd


==================== Asm code ====================
2018-03-16 15:53:55.367702194 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Xd_info:
	.quad	_c7Xd
	.quad	964
	.quad	21474836510
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.368520724 UTC

.section .text
.align 8
_c7Xi:
_c7Xi:
	movq 8(%rbp),%rdi
	movq %rbx,%rsi
	xorl %r14d,%r14d
	addq $16,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
	.size _c7Xi, .-_c7Xi


==================== Asm code ====================
2018-03-16 15:53:55.369397658 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Xi_info:
	.quad	_c7Xi
	.quad	1
	.quad	4294967326
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.370353117 UTC

.section .text
.align 8
_c7Xt:
_c7Xt:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7XB
_c7XA:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq $0,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c7XB:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c7Xt, .-_c7Xt


==================== Asm code ====================
2018-03-16 15:53:55.371101004 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7Xt_info:
	.quad	_c7Xt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.371980047 UTC

.section .text
.align 8
_c7XF:
_c7XF:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c7XO
_c7XS:
	movq 8(%rbp),%rsi
	movq 24(%rbp),%r14
	addq $40,%rbp
	jmp GHC.Integer.Type.timesDigit_entry
_c7XO:
	movq 16(%rbp),%rax
	movq %rax,24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp _c7Wg
	.size _c7XF, .-_c7XF


==================== Asm code ====================
2018-03-16 15:53:55.372747012 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7XF_info:
	.quad	_c7XF
	.quad	324
	.quad	55834574878
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.373670088 UTC

.section .text
.align 8
_c7XZ:
_c7XZ:
	leaq GHC.Integer.Type.errorPositive_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c7XZ, .-_c7XZ


==================== Asm code ====================
2018-03-16 15:53:55.374409899 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7XZ_info:
	.quad	_c7XZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.386570568 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.timesInteger_closure
.type GHC.Integer.Type.timesInteger_closure, @object
GHC.Integer.Type.timesInteger_closure:
	.quad	GHC.Integer.Type.timesInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:55.388042689 UTC

.section .text
.align 8
.globl GHC.Integer.Type.timesInteger_entry
.type GHC.Integer.Type.timesInteger_entry, @object
GHC.Integer.Type.timesInteger_entry:
_c7ZO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c7ZP
_c7ZQ:
	leaq block_c7ZG_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c7ZG
_c7ZH:
	movq (%rbx),%rax
	jmp *(%rax)
_c7ZP:
	leaq GHC.Integer.Type.timesInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.timesInteger_entry, .-GHC.Integer.Type.timesInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.389196572 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.timesInteger_info
.type GHC.Integer.Type.timesInteger_info, @object
GHC.Integer.Type.timesInteger_info:
	.quad	GHC.Integer.Type.timesInteger_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S7IQ_srt+24


==================== Asm code ====================
2018-03-16 15:53:55.390771993 UTC

.section .text
.align 8
_c7ZG:
_c7ZG:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u81a
_c7ZM:
	leaq block_c811_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c811
_c813:
	movq (%rbx),%rax
	jmp *(%rax)
_u81a:
	cmpq $2,%rcx
	jb _c7ZK
_c7ZL:
	leaq block_c80s_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c80s
_c80u:
	movq (%rbx),%rax
	jmp *(%rax)
_c7ZK:
	leaq block_c7ZT_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c7ZT
_c7ZV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c7ZG, .-_c7ZG


==================== Asm code ====================
2018-03-16 15:53:55.392191526 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7ZG_info:
	.quad	_c7ZG
	.quad	1
	.quad	4294967326
	.quad	S7IQ_srt+24


==================== Asm code ====================
2018-03-16 15:53:55.394163931 UTC

.section .text
.align 8
_c7ZT:
_c7ZT:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u81b
_u81d:
	addq $16,%rbp
	jmp _c80Y
_u81b:
	movq 8(%rbp),%rcx
	cmpq $2,%rax
	jb _c806
_c80i:
	leaq block_c80c_info(%rip),%rax
	movq %rax,8(%rbp)
	movq 6(%rbx),%rsi
	movq %rcx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesPositive_entry
_c806:
	leaq block_c7ZZ_info(%rip),%rax
	movq %rax,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rcx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesPositive_entry
	.size _c7ZT, .-_c7ZT


==================== Asm code ====================
2018-03-16 15:53:55.39528186 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7ZT_info:
	.quad	_c7ZT
	.quad	1
	.quad	4294967326
	.quad	S7IQ_srt+24


==================== Asm code ====================
2018-03-16 15:53:55.397317644 UTC

.section .text
.align 8
_c7ZZ:
_c7ZZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c809
_c808:
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c809:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c7ZZ, .-_c7ZZ


==================== Asm code ====================
2018-03-16 15:53:55.398474017 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7ZZ_info:
	.quad	_c7ZZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.39987174 UTC

.section .text
.align 8
_c80c:
_c80c:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c80l
_c80k:
	leaq GHC.Integer.Type.Negative_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c80l:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c80c, .-_c80c


==================== Asm code ====================
2018-03-16 15:53:55.40091221 UTC

.section .data.rel.ro
.align 8
.align 1
block_c80c_info:
	.quad	_c80c
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.402073988 UTC

.section .text
.align 8
_c80s:
_c80s:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u81c
_u81e:
	addq $16,%rbp
	jmp _c80Y
_u81c:
	movq 8(%rbp),%rcx
	cmpq $2,%rax
	jb _c80F
_c80R:
	leaq block_c80L_info(%rip),%rax
	movq %rax,8(%rbp)
	movq 6(%rbx),%rsi
	movq %rcx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesPositive_entry
_c80F:
	leaq block_c80y_info(%rip),%rax
	movq %rax,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rcx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesPositive_entry
	.size _c80s, .-_c80s


==================== Asm code ====================
2018-03-16 15:53:55.403233143 UTC

.section .data.rel.ro
.align 8
.align 1
block_c80s_info:
	.quad	_c80s
	.quad	1
	.quad	4294967326
	.quad	S7IQ_srt+24


==================== Asm code ====================
2018-03-16 15:53:55.404508744 UTC

.section .text
.align 8
_c80y:
_c80y:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c80I
_c80H:
	leaq GHC.Integer.Type.Negative_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c80I:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c80y, .-_c80y


==================== Asm code ====================
2018-03-16 15:53:55.40596661 UTC

.section .data.rel.ro
.align 8
.align 1
block_c80y_info:
	.quad	_c80y
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.407205199 UTC

.section .text
.align 8
_c80L:
_c80L:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c80U
_c80T:
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c80U:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c80L, .-_c80L


==================== Asm code ====================
2018-03-16 15:53:55.408351238 UTC

.section .data.rel.ro
.align 8
.align 1
block_c80L_info:
	.quad	_c80L
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.409377987 UTC

.section .text
.align 8
_c80Y:
_c80Y:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c80Y, .-_c80Y


==================== Asm code ====================
2018-03-16 15:53:55.410555527 UTC

.section .text
.align 8
_c811:
_c811:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c811, .-_c811


==================== Asm code ====================
2018-03-16 15:53:55.411647712 UTC

.section .data.rel.ro
.align 8
.align 1
block_c811_info:
	.quad	_c811
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.414992407 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.twoToTheThirtytwoPositive_closure
.type GHC.Integer.Type.twoToTheThirtytwoPositive_closure, @object
GHC.Integer.Type.twoToTheThirtytwoPositive_closure:
	.quad	GHC.Integer.Type.Some_con_info
	.quad	GHC.Integer.Type.None_closure+2
	.quad	4294967296
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:55.417862084 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.twoToTheThirtytwoInteger_closure
.type GHC.Integer.Type.twoToTheThirtytwoInteger_closure, @object
GHC.Integer.Type.twoToTheThirtytwoInteger_closure:
	.quad	GHC.Integer.Type.Positive_con_info
	.quad	GHC.Integer.Type.twoToTheThirtytwoPositive_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:55.421963495 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.digitsMaybeZeroToInteger_closure
.type GHC.Integer.Type.digitsMaybeZeroToInteger_closure, @object
GHC.Integer.Type.digitsMaybeZeroToInteger_closure:
	.quad	GHC.Integer.Type.digitsMaybeZeroToInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.423428155 UTC

.section .text
.align 8
.globl GHC.Integer.Type.digitsMaybeZeroToInteger_entry
.type GHC.Integer.Type.digitsMaybeZeroToInteger_entry, @object
GHC.Integer.Type.digitsMaybeZeroToInteger_entry:
_c82s:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c82t
_c82u:
	leaq block_c82l_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c82l
_c82m:
	movq (%rbx),%rax
	jmp *(%rax)
_c82t:
	leaq GHC.Integer.Type.digitsMaybeZeroToInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.digitsMaybeZeroToInteger_entry, .-GHC.Integer.Type.digitsMaybeZeroToInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.424677201 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.digitsMaybeZeroToInteger_info
.type GHC.Integer.Type.digitsMaybeZeroToInteger_info, @object
GHC.Integer.Type.digitsMaybeZeroToInteger_info:
	.quad	GHC.Integer.Type.digitsMaybeZeroToInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.42678065 UTC

.section .text
.align 8
_c82l:
_c82l:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c82p
_c82q:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c82A:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c82p:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c82A
_c82z:
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c82l, .-_c82l


==================== Asm code ====================
2018-03-16 15:53:55.428055437 UTC

.section .data.rel.ro
.align 8
.align 1
block_c82l_info:
	.quad	_c82l
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.437906608 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.removeZeroTails_closure
.type GHC.Integer.Type.removeZeroTails_closure, @object
GHC.Integer.Type.removeZeroTails_closure:
	.quad	GHC.Integer.Type.removeZeroTails_info


==================== Asm code ====================
2018-03-16 15:53:55.439743751 UTC

.section .text
.align 8
.globl GHC.Integer.Type.removeZeroTails_entry
.type GHC.Integer.Type.removeZeroTails_entry, @object
GHC.Integer.Type.removeZeroTails_entry:
_c835:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c836
_c837:
	leaq block_c82Y_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c82Y
_c82Z:
	movq (%rbx),%rax
	jmp *(%rax)
_c836:
	leaq GHC.Integer.Type.removeZeroTails_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.removeZeroTails_entry, .-GHC.Integer.Type.removeZeroTails_entry


==================== Asm code ====================
2018-03-16 15:53:55.440968475 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.removeZeroTails_info
.type GHC.Integer.Type.removeZeroTails_info, @object
GHC.Integer.Type.removeZeroTails_info:
	.quad	GHC.Integer.Type.removeZeroTails_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.442085902 UTC

.section .text
.align 8
_c82Y:
_c82Y:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c832
_u83H:
	addq $8,%rbp
	jmp _c833
_c832:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	testq %rbx,%rbx
	jne _c83j
_c83p:
	leaq block_c83o_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	jmp GHC.Integer.Type.removeZeroTails_entry
_c83j:
	leaq block_c83d_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.removeZeroTails_entry
	.size _c82Y, .-_c82Y


==================== Asm code ====================
2018-03-16 15:53:55.442861737 UTC

.section .data.rel.ro
.align 8
.align 1
block_c82Y_info:
	.quad	_c82Y
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.443783268 UTC

.section .text
.align 8
_c83d:
_c83d:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c83m
_c83l:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c83m:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c83d, .-_c83d


==================== Asm code ====================
2018-03-16 15:53:55.444947613 UTC

.section .data.rel.ro
.align 8
.align 1
block_c83d_info:
	.quad	_c83d
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.445922677 UTC

.section .text
.align 8
_c83o:
_c83o:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c83v
_u83I:
	addq $8,%rbp
	jmp _c833
_c83y:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c83v:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c83y
_c83x:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq $0,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c83o, .-_c83o


==================== Asm code ====================
2018-03-16 15:53:55.446719704 UTC

.section .data.rel.ro
.align 8
.align 1
block_c83o_info:
	.quad	_c83o
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.447462356 UTC

.section .text
.align 8
_c833:
_c833:
	leaq GHC.Integer.Type.None_closure+2(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c833, .-_c833


==================== Asm code ====================
2018-03-16 15:53:55.451222851 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.digitsToNegativeInteger_closure
.type GHC.Integer.Type.digitsToNegativeInteger_closure, @object
GHC.Integer.Type.digitsToNegativeInteger_closure:
	.quad	GHC.Integer.Type.digitsToNegativeInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.452216504 UTC

.section .text
.align 8
.globl GHC.Integer.Type.digitsToNegativeInteger_entry
.type GHC.Integer.Type.digitsToNegativeInteger_entry, @object
GHC.Integer.Type.digitsToNegativeInteger_entry:
_c84q:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c84r
_c84s:
	leaq block_c84k_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.removeZeroTails_entry
_c84r:
	leaq GHC.Integer.Type.digitsToNegativeInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.digitsToNegativeInteger_entry, .-GHC.Integer.Type.digitsToNegativeInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.452984774 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.digitsToNegativeInteger_info
.type GHC.Integer.Type.digitsToNegativeInteger_info, @object
GHC.Integer.Type.digitsToNegativeInteger_info:
	.quad	GHC.Integer.Type.digitsToNegativeInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.454084718 UTC

.section .text
.align 8
_c84k:
_c84k:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c84n
_c84o:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c84y:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c84n:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c84y
_c84x:
	leaq GHC.Integer.Type.Negative_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c84k, .-_c84k


==================== Asm code ====================
2018-03-16 15:53:55.454908781 UTC

.section .data.rel.ro
.align 8
.align 1
block_c84k_info:
	.quad	_c84k
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.460110024 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.digitsToInteger_closure
.type GHC.Integer.Type.digitsToInteger_closure, @object
GHC.Integer.Type.digitsToInteger_closure:
	.quad	GHC.Integer.Type.digitsToInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.461578377 UTC

.section .text
.align 8
.globl GHC.Integer.Type.digitsToInteger_entry
.type GHC.Integer.Type.digitsToInteger_entry, @object
GHC.Integer.Type.digitsToInteger_entry:
_c850:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c851
_c852:
	leaq block_c84U_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.removeZeroTails_entry
_c851:
	leaq GHC.Integer.Type.digitsToInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.digitsToInteger_entry, .-GHC.Integer.Type.digitsToInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.462672082 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.digitsToInteger_info
.type GHC.Integer.Type.digitsToInteger_info, @object
GHC.Integer.Type.digitsToInteger_info:
	.quad	GHC.Integer.Type.digitsToInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.464103136 UTC

.section .text
.align 8
_c84U:
_c84U:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c84X
_c84Y:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c858:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c84X:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c858
_c857:
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c84U, .-_c84U


==================== Asm code ====================
2018-03-16 15:53:55.46535715 UTC

.section .data.rel.ro
.align 8
.align 1
block_c84U_info:
	.quad	_c84U
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.476216686 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.comparePositive_closure
.type GHC.Integer.Type.comparePositive_closure, @object
GHC.Integer.Type.comparePositive_closure:
	.quad	GHC.Integer.Type.comparePositive_info


==================== Asm code ====================
2018-03-16 15:53:55.477798049 UTC

.section .text
.align 8
.globl GHC.Integer.Type.comparePositive_entry
.type GHC.Integer.Type.comparePositive_entry, @object
GHC.Integer.Type.comparePositive_entry:
_c85B:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c85C
_c85D:
	leaq block_c85u_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c85u
_c85v:
	movq (%rbx),%rax
	jmp *(%rax)
_c85C:
	leaq GHC.Integer.Type.comparePositive_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.comparePositive_entry, .-GHC.Integer.Type.comparePositive_entry


==================== Asm code ====================
2018-03-16 15:53:55.478993064 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.comparePositive_info
.type GHC.Integer.Type.comparePositive_info, @object
GHC.Integer.Type.comparePositive_info:
	.quad	GHC.Integer.Type.comparePositive_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.480164524 UTC

.section .text
.align 8
_c85u:
_c85u:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c85y
_c85z:
	leaq block_c86h_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c86h
_c86j:
	movq (%rbx),%rax
	jmp *(%rax)
_c85y:
	leaq block_c85G_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %rdx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c85G
_c85I:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c85u, .-_c85u


==================== Asm code ====================
2018-03-16 15:53:55.480998091 UTC

.section .data.rel.ro
.align 8
.align 1
block_c85u_info:
	.quad	_c85u
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.482305884 UTC

.section .text
.align 8
_c85G:
_c85G:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c85P
_u86z:
	addq $24,%rbp
	jmp _c86e
_c85P:
	leaq block_c85M_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.Integer.Type.comparePositive_entry
	.size _c85G, .-_c85G


==================== Asm code ====================
2018-03-16 15:53:55.483109204 UTC

.section .data.rel.ro
.align 8
.align 1
block_c85G_info:
	.quad	_c85G
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.484109496 UTC

.section .text
.align 8
_c85M:
_c85M:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	je _c86a
_c85V:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u86C:
	addq $24,%rbp
	jmp _c86t
_c868:
	cmpq %rcx,%rax
	jbe _u86C
_u86B:
	addq $24,%rbp
	jmp _c86e
_c86a:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	cmpq %rcx,%rax
	jae _c868
_u86A:
	addq $24,%rbp
	jmp _c86p
	.size _c85M, .-_c85M


==================== Asm code ====================
2018-03-16 15:53:55.484863884 UTC

.section .data.rel.ro
.align 8
.align 1
block_c85M_info:
	.quad	_c85M
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.485682439 UTC

.section .text
.align 8
_c86e:
_c86e:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c86e, .-_c86e


==================== Asm code ====================
2018-03-16 15:53:55.486487027 UTC

.section .text
.align 8
_c86h:
_c86h:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u86x
_u86y:
	addq $8,%rbp
	jmp _c86t
_u86x:
	addq $8,%rbp
	jmp _c86p
	.size _c86h, .-_c86h


==================== Asm code ====================
2018-03-16 15:53:55.487545806 UTC

.section .data.rel.ro
.align 8
.align 1
block_c86h_info:
	.quad	_c86h
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.488318812 UTC

.section .text
.align 8
_c86p:
_c86p:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c86p, .-_c86p


==================== Asm code ====================
2018-03-16 15:53:55.489075872 UTC

.section .text
.align 8
_c86t:
_c86t:
	movq GHC.Types.EQ_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c86t, .-_c86t


==================== Asm code ====================
2018-03-16 15:53:55.495661161 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.compareInteger_closure
.type GHC.Integer.Type.compareInteger_closure, @object
GHC.Integer.Type.compareInteger_closure:
	.quad	GHC.Integer.Type.compareInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.496731911 UTC

.section .text
.align 8
.globl GHC.Integer.Type.compareInteger_entry
.type GHC.Integer.Type.compareInteger_entry, @object
GHC.Integer.Type.compareInteger_entry:
_c87J:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c87K
_c87L:
	leaq block_c87B_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c87B
_c87C:
	movq (%rbx),%rax
	jmp *(%rax)
_c87K:
	leaq GHC.Integer.Type.compareInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.compareInteger_entry, .-GHC.Integer.Type.compareInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.497532224 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.compareInteger_info
.type GHC.Integer.Type.compareInteger_info, @object
GHC.Integer.Type.compareInteger_info:
	.quad	GHC.Integer.Type.compareInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.499025987 UTC

.section .text
.align 8
_c87B:
_c87B:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u88C
_c87H:
	leaq block_c88i_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c88i
_c88k:
	movq (%rbx),%rax
	jmp *(%rax)
_u88C:
	cmpq $2,%rcx
	jb _c87F
_c87G:
	leaq block_c883_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c883
_c885:
	movq (%rbx),%rax
	jmp *(%rax)
_c87F:
	leaq block_c87O_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c87O
_c87Q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c87B, .-_c87B


==================== Asm code ====================
2018-03-16 15:53:55.499977939 UTC

.section .data.rel.ro
.align 8
.align 1
block_c87B_info:
	.quad	_c87B
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.500804367 UTC

.section .text
.align 8
_c87O:
_c87O:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c880
_u88E:
	addq $16,%rbp
	jmp _c88u
_c880:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.comparePositive_entry
	.size _c87O, .-_c87O


==================== Asm code ====================
2018-03-16 15:53:55.501882539 UTC

.section .data.rel.ro
.align 8
.align 1
block_c87O_info:
	.quad	_c87O
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.503017564 UTC

.section .text
.align 8
_c883:
_c883:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	je _c88f
_u88F:
	addq $16,%rbp
	jmp _c88q
_c88f:
	movq 8(%rbp),%rsi
	movq 6(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.comparePositive_entry
	.size _c883, .-_c883


==================== Asm code ====================
2018-03-16 15:53:55.504071584 UTC

.section .data.rel.ro
.align 8
.align 1
block_c883_info:
	.quad	_c883
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.505497047 UTC

.section .text
.align 8
_c88i:
_c88i:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u88D
_c88y:
	movq GHC.Types.EQ_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u88H:
	addq $8,%rbp
	jmp _c88q
_u88D:
	cmpq $2,%rbx
	jb _u88H
_u88G:
	addq $8,%rbp
	jmp _c88u
	.size _c88i, .-_c88i


==================== Asm code ====================
2018-03-16 15:53:55.506676824 UTC

.section .data.rel.ro
.align 8
.align 1
block_c88i_info:
	.quad	_c88i
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.507774687 UTC

.section .text
.align 8
_c88q:
_c88q:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c88q, .-_c88q


==================== Asm code ====================
2018-03-16 15:53:55.50901927 UTC

.section .text
.align 8
_c88u:
_c88u:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c88u, .-_c88u


==================== Asm code ====================
2018-03-16 15:53:55.5146898 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.eqInteger#_closure
.type GHC.Integer.Type.eqInteger#_closure, @object
GHC.Integer.Type.eqInteger#_closure:
	.quad	GHC.Integer.Type.eqInteger#_info


==================== Asm code ====================
2018-03-16 15:53:55.515982634 UTC

.section .text
.align 8
.globl GHC.Integer.Type.eqInteger#_entry
.type GHC.Integer.Type.eqInteger#_entry, @object
GHC.Integer.Type.eqInteger#_entry:
_c89F:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c89G
_c89H:
	leaq block_c89z_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.compareInteger_entry
_c89G:
	leaq GHC.Integer.Type.eqInteger#_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.eqInteger#_entry, .-GHC.Integer.Type.eqInteger#_entry


==================== Asm code ====================
2018-03-16 15:53:55.517093318 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.eqInteger#_info
.type GHC.Integer.Type.eqInteger#_info, @object
GHC.Integer.Type.eqInteger#_info:
	.quad	GHC.Integer.Type.eqInteger#_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.5183704 UTC

.section .text
.align 8
_c89z:
_c89z:
	andl $7,%ebx
	cmpq $2,%rbx
	je _c89D
_c89C:
	xorl %ebx,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c89D:
	movl $1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c89z, .-_c89z


==================== Asm code ====================
2018-03-16 15:53:55.519391373 UTC

.section .data.rel.ro
.align 8
.align 1
block_c89z_info:
	.quad	_c89z
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.523266367 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.eqInteger_closure
.type GHC.Integer.Type.eqInteger_closure, @object
GHC.Integer.Type.eqInteger_closure:
	.quad	GHC.Integer.Type.eqInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.524227636 UTC

.section .text
.align 8
.globl GHC.Integer.Type.eqInteger_entry
.type GHC.Integer.Type.eqInteger_entry, @object
GHC.Integer.Type.eqInteger_entry:
_c8a7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8a8
_c8a9:
	leaq block_c8a5_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c8a8:
	leaq GHC.Integer.Type.eqInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.eqInteger_entry, .-GHC.Integer.Type.eqInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.525014141 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.eqInteger_info
.type GHC.Integer.Type.eqInteger_info, @object
GHC.Integer.Type.eqInteger_info:
	.quad	GHC.Integer.Type.eqInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.525927694 UTC

.section .text
.align 8
_c8a5:
_c8a5:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rax
	movq (%rbx,%rax,1),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8a5, .-_c8a5


==================== Asm code ====================
2018-03-16 15:53:55.526614502 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8a5_info:
	.quad	_c8a5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.530446832 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.neqInteger#_closure
.type GHC.Integer.Type.neqInteger#_closure, @object
GHC.Integer.Type.neqInteger#_closure:
	.quad	GHC.Integer.Type.neqInteger#_info


==================== Asm code ====================
2018-03-16 15:53:55.531389696 UTC

.section .text
.align 8
.globl GHC.Integer.Type.neqInteger#_entry
.type GHC.Integer.Type.neqInteger#_entry, @object
GHC.Integer.Type.neqInteger#_entry:
_c8az:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8aA
_c8aB:
	leaq block_c8at_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.compareInteger_entry
_c8aA:
	leaq GHC.Integer.Type.neqInteger#_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.neqInteger#_entry, .-GHC.Integer.Type.neqInteger#_entry


==================== Asm code ====================
2018-03-16 15:53:55.532113939 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.neqInteger#_info
.type GHC.Integer.Type.neqInteger#_info, @object
GHC.Integer.Type.neqInteger#_info:
	.quad	GHC.Integer.Type.neqInteger#_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.532916416 UTC

.section .text
.align 8
_c8at:
_c8at:
	andl $7,%ebx
	cmpq $2,%rbx
	je _c8ax
_c8aw:
	movl $1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ax:
	xorl %ebx,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8at, .-_c8at


==================== Asm code ====================
2018-03-16 15:53:55.533678169 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8at_info:
	.quad	_c8at
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.5369267 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.neqInteger_closure
.type GHC.Integer.Type.neqInteger_closure, @object
GHC.Integer.Type.neqInteger_closure:
	.quad	GHC.Integer.Type.neqInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.537952727 UTC

.section .text
.align 8
.globl GHC.Integer.Type.neqInteger_entry
.type GHC.Integer.Type.neqInteger_entry, @object
GHC.Integer.Type.neqInteger_entry:
_c8b1:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8b2
_c8b3:
	leaq block_c8aZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.neqInteger#_entry
_c8b2:
	leaq GHC.Integer.Type.neqInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.neqInteger_entry, .-GHC.Integer.Type.neqInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.539326066 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.neqInteger_info
.type GHC.Integer.Type.neqInteger_info, @object
GHC.Integer.Type.neqInteger_info:
	.quad	GHC.Integer.Type.neqInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.540645281 UTC

.section .text
.align 8
_c8aZ:
_c8aZ:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rax
	movq (%rbx,%rax,1),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8aZ, .-_c8aZ


==================== Asm code ====================
2018-03-16 15:53:55.541732265 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8aZ_info:
	.quad	_c8aZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.543952137 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$fEqInteger_closure
.type GHC.Integer.Type.$fEqInteger_closure, @object
GHC.Integer.Type.$fEqInteger_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.Integer.Type.eqInteger_closure+2
	.quad	GHC.Integer.Type.neqInteger_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:55.547607199 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.ltInteger#_closure
.type GHC.Integer.Type.ltInteger#_closure, @object
GHC.Integer.Type.ltInteger#_closure:
	.quad	GHC.Integer.Type.ltInteger#_info


==================== Asm code ====================
2018-03-16 15:53:55.548553312 UTC

.section .text
.align 8
.globl GHC.Integer.Type.ltInteger#_entry
.type GHC.Integer.Type.ltInteger#_entry, @object
GHC.Integer.Type.ltInteger#_entry:
_c8bu:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8bv
_c8bw:
	leaq block_c8bo_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.compareInteger_entry
_c8bv:
	leaq GHC.Integer.Type.ltInteger#_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.ltInteger#_entry, .-GHC.Integer.Type.ltInteger#_entry


==================== Asm code ====================
2018-03-16 15:53:55.549445972 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.ltInteger#_info
.type GHC.Integer.Type.ltInteger#_info, @object
GHC.Integer.Type.ltInteger#_info:
	.quad	GHC.Integer.Type.ltInteger#_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.550278037 UTC

.section .text
.align 8
_c8bo:
_c8bo:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8bs
_c8br:
	xorl %ebx,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8bs:
	movl $1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8bo, .-_c8bo


==================== Asm code ====================
2018-03-16 15:53:55.551502973 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8bo_info:
	.quad	_c8bo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.554688735 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.ltInteger_closure
.type GHC.Integer.Type.ltInteger_closure, @object
GHC.Integer.Type.ltInteger_closure:
	.quad	GHC.Integer.Type.ltInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.555588983 UTC

.section .text
.align 8
.globl GHC.Integer.Type.ltInteger_entry
.type GHC.Integer.Type.ltInteger_entry, @object
GHC.Integer.Type.ltInteger_entry:
_c8bW:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8bX
_c8bY:
	leaq block_c8bU_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.ltInteger#_entry
_c8bX:
	leaq GHC.Integer.Type.ltInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.ltInteger_entry, .-GHC.Integer.Type.ltInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.556273727 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.ltInteger_info
.type GHC.Integer.Type.ltInteger_info, @object
GHC.Integer.Type.ltInteger_info:
	.quad	GHC.Integer.Type.ltInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.55713044 UTC

.section .text
.align 8
_c8bU:
_c8bU:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rax
	movq (%rbx,%rax,1),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8bU, .-_c8bU


==================== Asm code ====================
2018-03-16 15:53:55.557991646 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8bU_info:
	.quad	_c8bU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.561563257 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.gtInteger#_closure
.type GHC.Integer.Type.gtInteger#_closure, @object
GHC.Integer.Type.gtInteger#_closure:
	.quad	GHC.Integer.Type.gtInteger#_info


==================== Asm code ====================
2018-03-16 15:53:55.562913343 UTC

.section .text
.align 8
.globl GHC.Integer.Type.gtInteger#_entry
.type GHC.Integer.Type.gtInteger#_entry, @object
GHC.Integer.Type.gtInteger#_entry:
_c8co:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cp
_c8cq:
	leaq block_c8ci_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.compareInteger_entry
_c8cp:
	leaq GHC.Integer.Type.gtInteger#_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.gtInteger#_entry, .-GHC.Integer.Type.gtInteger#_entry


==================== Asm code ====================
2018-03-16 15:53:55.563670498 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.gtInteger#_info
.type GHC.Integer.Type.gtInteger#_info, @object
GHC.Integer.Type.gtInteger#_info:
	.quad	GHC.Integer.Type.gtInteger#_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.564488163 UTC

.section .text
.align 8
_c8ci:
_c8ci:
	andl $7,%ebx
	cmpq $3,%rbx
	je _c8cm
_c8cl:
	xorl %ebx,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8cm:
	movl $1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8ci, .-_c8ci


==================== Asm code ====================
2018-03-16 15:53:55.565231482 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ci_info:
	.quad	_c8ci
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.568427839 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.gtInteger_closure
.type GHC.Integer.Type.gtInteger_closure, @object
GHC.Integer.Type.gtInteger_closure:
	.quad	GHC.Integer.Type.gtInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.569445372 UTC

.section .text
.align 8
.globl GHC.Integer.Type.gtInteger_entry
.type GHC.Integer.Type.gtInteger_entry, @object
GHC.Integer.Type.gtInteger_entry:
_c8cQ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cR
_c8cS:
	leaq block_c8cO_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.gtInteger#_entry
_c8cR:
	leaq GHC.Integer.Type.gtInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.gtInteger_entry, .-GHC.Integer.Type.gtInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.570238757 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.gtInteger_info
.type GHC.Integer.Type.gtInteger_info, @object
GHC.Integer.Type.gtInteger_info:
	.quad	GHC.Integer.Type.gtInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.571023094 UTC

.section .text
.align 8
_c8cO:
_c8cO:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rax
	movq (%rbx,%rax,1),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cO, .-_c8cO


==================== Asm code ====================
2018-03-16 15:53:55.571680674 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cO_info:
	.quad	_c8cO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.576044684 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.leInteger#_closure
.type GHC.Integer.Type.leInteger#_closure, @object
GHC.Integer.Type.leInteger#_closure:
	.quad	GHC.Integer.Type.leInteger#_info


==================== Asm code ====================
2018-03-16 15:53:55.576985933 UTC

.section .text
.align 8
.globl GHC.Integer.Type.leInteger#_entry
.type GHC.Integer.Type.leInteger#_entry, @object
GHC.Integer.Type.leInteger#_entry:
_c8di:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dj
_c8dk:
	leaq block_c8dc_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.compareInteger_entry
_c8dj:
	leaq GHC.Integer.Type.leInteger#_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.leInteger#_entry, .-GHC.Integer.Type.leInteger#_entry


==================== Asm code ====================
2018-03-16 15:53:55.577827563 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.leInteger#_info
.type GHC.Integer.Type.leInteger#_info, @object
GHC.Integer.Type.leInteger#_info:
	.quad	GHC.Integer.Type.leInteger#_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.578727053 UTC

.section .text
.align 8
_c8dc:
_c8dc:
	andl $7,%ebx
	cmpq $3,%rbx
	je _c8dg
_c8df:
	movl $1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8dg:
	xorl %ebx,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dc, .-_c8dc


==================== Asm code ====================
2018-03-16 15:53:55.579528192 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dc_info:
	.quad	_c8dc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.582813821 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.leInteger_closure
.type GHC.Integer.Type.leInteger_closure, @object
GHC.Integer.Type.leInteger_closure:
	.quad	GHC.Integer.Type.leInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.583763935 UTC

.section .text
.align 8
.globl GHC.Integer.Type.leInteger_entry
.type GHC.Integer.Type.leInteger_entry, @object
GHC.Integer.Type.leInteger_entry:
_c8dK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dL
_c8dM:
	leaq block_c8dI_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.leInteger#_entry
_c8dL:
	leaq GHC.Integer.Type.leInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.leInteger_entry, .-GHC.Integer.Type.leInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.584496851 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.leInteger_info
.type GHC.Integer.Type.leInteger_info, @object
GHC.Integer.Type.leInteger_info:
	.quad	GHC.Integer.Type.leInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.585777123 UTC

.section .text
.align 8
_c8dI:
_c8dI:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rax
	movq (%rbx,%rax,1),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dI, .-_c8dI


==================== Asm code ====================
2018-03-16 15:53:55.5865411 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dI_info:
	.quad	_c8dI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.590430161 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.geInteger#_closure
.type GHC.Integer.Type.geInteger#_closure, @object
GHC.Integer.Type.geInteger#_closure:
	.quad	GHC.Integer.Type.geInteger#_info


==================== Asm code ====================
2018-03-16 15:53:55.591410226 UTC

.section .text
.align 8
.globl GHC.Integer.Type.geInteger#_entry
.type GHC.Integer.Type.geInteger#_entry, @object
GHC.Integer.Type.geInteger#_entry:
_c8ec:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ed
_c8ee:
	leaq block_c8e6_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.compareInteger_entry
_c8ed:
	leaq GHC.Integer.Type.geInteger#_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.geInteger#_entry, .-GHC.Integer.Type.geInteger#_entry


==================== Asm code ====================
2018-03-16 15:53:55.592211666 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.geInteger#_info
.type GHC.Integer.Type.geInteger#_info, @object
GHC.Integer.Type.geInteger#_info:
	.quad	GHC.Integer.Type.geInteger#_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.593114079 UTC

.section .text
.align 8
_c8e6:
_c8e6:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8ea
_c8e9:
	movl $1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ea:
	xorl %ebx,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8e6, .-_c8e6


==================== Asm code ====================
2018-03-16 15:53:55.593958531 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8e6_info:
	.quad	_c8e6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.597796479 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.geInteger_closure
.type GHC.Integer.Type.geInteger_closure, @object
GHC.Integer.Type.geInteger_closure:
	.quad	GHC.Integer.Type.geInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.598722789 UTC

.section .text
.align 8
.globl GHC.Integer.Type.geInteger_entry
.type GHC.Integer.Type.geInteger_entry, @object
GHC.Integer.Type.geInteger_entry:
_c8eE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eF
_c8eG:
	leaq block_c8eC_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.geInteger#_entry
_c8eF:
	leaq GHC.Integer.Type.geInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.geInteger_entry, .-GHC.Integer.Type.geInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.599484616 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.geInteger_info
.type GHC.Integer.Type.geInteger_info, @object
GHC.Integer.Type.geInteger_info:
	.quad	GHC.Integer.Type.geInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.600409368 UTC

.section .text
.align 8
_c8eC:
_c8eC:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rax
	movq (%rbx,%rax,1),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8eC, .-_c8eC


==================== Asm code ====================
2018-03-16 15:53:55.601113688 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eC_info:
	.quad	_c8eC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.604741646 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$fOrdInteger_$cmax_closure
.type GHC.Integer.Type.$fOrdInteger_$cmax_closure, @object
GHC.Integer.Type.$fOrdInteger_$cmax_closure:
	.quad	GHC.Integer.Type.$fOrdInteger_$cmax_info


==================== Asm code ====================
2018-03-16 15:53:55.605882294 UTC

.section .text
.align 8
.globl GHC.Integer.Type.$fOrdInteger_$cmax_entry
.type GHC.Integer.Type.$fOrdInteger_$cmax_entry, @object
GHC.Integer.Type.$fOrdInteger_$cmax_entry:
_c8f5:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8f6
_c8f7:
	leaq block_c8f0_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	movq %r14,%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.leInteger#_entry
_c8f6:
	leaq GHC.Integer.Type.$fOrdInteger_$cmax_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.$fOrdInteger_$cmax_entry, .-GHC.Integer.Type.$fOrdInteger_$cmax_entry


==================== Asm code ====================
2018-03-16 15:53:55.60665958 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.$fOrdInteger_$cmax_info
.type GHC.Integer.Type.$fOrdInteger_$cmax_info, @object
GHC.Integer.Type.$fOrdInteger_$cmax_info:
	.quad	GHC.Integer.Type.$fOrdInteger_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.607561874 UTC

.section .text
.align 8
_c8f0:
_c8f0:
	cmpq $1,%rbx
	je _c8f4
_c8f3:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8f4:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8f0, .-_c8f0


==================== Asm code ====================
2018-03-16 15:53:55.608719538 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f0_info:
	.quad	_c8f0
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.612450121 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$fOrdInteger_$cmin_closure
.type GHC.Integer.Type.$fOrdInteger_$cmin_closure, @object
GHC.Integer.Type.$fOrdInteger_$cmin_closure:
	.quad	GHC.Integer.Type.$fOrdInteger_$cmin_info


==================== Asm code ====================
2018-03-16 15:53:55.613504544 UTC

.section .text
.align 8
.globl GHC.Integer.Type.$fOrdInteger_$cmin_entry
.type GHC.Integer.Type.$fOrdInteger_$cmin_entry, @object
GHC.Integer.Type.$fOrdInteger_$cmin_entry:
_c8fA:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fB
_c8fC:
	leaq block_c8fv_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	movq %r14,%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.leInteger#_entry
_c8fB:
	leaq GHC.Integer.Type.$fOrdInteger_$cmin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.$fOrdInteger_$cmin_entry, .-GHC.Integer.Type.$fOrdInteger_$cmin_entry


==================== Asm code ====================
2018-03-16 15:53:55.614287548 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.$fOrdInteger_$cmin_info
.type GHC.Integer.Type.$fOrdInteger_$cmin_info, @object
GHC.Integer.Type.$fOrdInteger_$cmin_info:
	.quad	GHC.Integer.Type.$fOrdInteger_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.615135528 UTC

.section .text
.align 8
_c8fv:
_c8fv:
	cmpq $1,%rbx
	je _c8fz
_c8fy:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8fz:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fv, .-_c8fv


==================== Asm code ====================
2018-03-16 15:53:55.615854152 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fv_info:
	.quad	_c8fv
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.618140615 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$fOrdInteger_closure
.type GHC.Integer.Type.$fOrdInteger_closure, @object
GHC.Integer.Type.$fOrdInteger_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.Integer.Type.$fEqInteger_closure+1
	.quad	GHC.Integer.Type.compareInteger_closure+2
	.quad	GHC.Integer.Type.ltInteger_closure+2
	.quad	GHC.Integer.Type.leInteger_closure+2
	.quad	GHC.Integer.Type.gtInteger_closure+2
	.quad	GHC.Integer.Type.geInteger_closure+2
	.quad	GHC.Integer.Type.$fOrdInteger_$cmax_closure+2
	.quad	GHC.Integer.Type.$fOrdInteger_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:55.628301734 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.plusInteger_closure
.type GHC.Integer.Type.plusInteger_closure, @object
GHC.Integer.Type.plusInteger_closure:
	.quad	GHC.Integer.Type.plusInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:55.629508409 UTC

.section .text
.align 8
.globl GHC.Integer.Type.plusInteger_entry
.type GHC.Integer.Type.plusInteger_entry, @object
GHC.Integer.Type.plusInteger_entry:
_c8g9:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ga
_u8hJ:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c8fY
_c8ga:
	leaq GHC.Integer.Type.plusInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.plusInteger_entry, .-GHC.Integer.Type.plusInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.631325516 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.plusInteger_info
.type GHC.Integer.Type.plusInteger_info, @object
GHC.Integer.Type.plusInteger_info:
	.quad	GHC.Integer.Type.plusInteger_entry
	.quad	0
	.quad	141733920782
	.quad	8589934607
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.632605778 UTC

.section .text
.align 8
_c8fY:
_c8fY:
	movq (%rbp),%rax
	leaq block_c8g1_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8g1
_c8g2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fY, .-_c8fY


==================== Asm code ====================
2018-03-16 15:53:55.634313171 UTC

.section .text
.align 8
_c8g1:
_c8g1:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8hF
_c8g7:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u8hF:
	cmpq $2,%rcx
	jb _c8g5
_c8g6:
	leaq block_c8ha_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rcx
	movq 6(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8ha
_c8hc:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g5:
	leaq block_c8ge_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8ge
_c8gg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8g1, .-_c8g1


==================== Asm code ====================
2018-03-16 15:53:55.635459377 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g1_info:
	.quad	_c8g1
	.quad	1
	.quad	4294967326
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.636404326 UTC

.section .text
.align 8
_c8ge:
_c8ge:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u8hG
_u8hK:
	addq $16,%rbp
	jmp _c8hy
_u8hG:
	movq 8(%rbp),%rcx
	cmpq $2,%rax
	jb _c8gr
_c8gz:
	leaq block_c8gx_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq %rax,%rsi
	movq %rcx,%r14
	movq %rax,16(%rbp)
	jmp GHC.Integer.Type.comparePositive_entry
_c8gr:
	leaq block_c8gk_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 7(%rbx),%rdi
	movq %rcx,%rsi
	xorl %r14d,%r14d
	addq $16,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
	.size _c8ge, .-_c8ge


==================== Asm code ====================
2018-03-16 15:53:55.637190289 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ge_info:
	.quad	_c8ge
	.quad	2
	.quad	4294967326
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.638154539 UTC

.section .text
.align 8
_c8gk:
_c8gk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8gu
_c8gt:
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8gu:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8gk, .-_c8gk


==================== Asm code ====================
2018-03-16 15:53:55.638924396 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8gk_info:
	.quad	_c8gk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.639874794 UTC

.section .text
.align 8
_c8gx:
_c8gx:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u8hH
_c8h0:
	leaq block_c8gU_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
_u8hH:
	cmpq $2,%rbx
	jb _c8gK
_c8gR:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8gK:
	leaq block_c8gD_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rsi
	movq %rcx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
	.size _c8gx, .-_c8gx


==================== Asm code ====================
2018-03-16 15:53:55.64069846 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8gx_info:
	.quad	_c8gx
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.641677579 UTC

.section .text
.align 8
_c8gD:
_c8gD:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8gN
_c8gM:
	leaq GHC.Integer.Type.Negative_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8gN:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8gD, .-_c8gD


==================== Asm code ====================
2018-03-16 15:53:55.642871973 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8gD_info:
	.quad	_c8gD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.643732723 UTC

.section .text
.align 8
_c8gU:
_c8gU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8h3
_c8h2:
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8h3:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8gU, .-_c8gU


==================== Asm code ====================
2018-03-16 15:53:55.64463483 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8gU_info:
	.quad	_c8gU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.645643118 UTC

.section .text
.align 8
_c8ha:
_c8ha:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u8hI
_u8hL:
	addq $16,%rbp
	jmp _c8hy
_u8hI:
	cmpq $2,%rax
	jb _c8hi
_c8hr:
	leaq block_c8hl_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 6(%rbx),%rdi
	movq 8(%rbp),%rsi
	xorl %r14d,%r14d
	addq $16,%rbp
	jmp GHC.Integer.Type.plusPositive_addWithCarry_entry
_c8hi:
	movq %rbx,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c8fY
	.size _c8ha, .-_c8ha


==================== Asm code ====================
2018-03-16 15:53:55.646483235 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ha_info:
	.quad	_c8ha
	.quad	2
	.quad	4294967326
	.quad	S7IQ_srt


==================== Asm code ====================
2018-03-16 15:53:55.647287731 UTC

.section .text
.align 8
_c8hl:
_c8hl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8hu
_c8ht:
	leaq GHC.Integer.Type.Negative_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8hu:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8hl, .-_c8hl


==================== Asm code ====================
2018-03-16 15:53:55.648044028 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8hl_info:
	.quad	_c8hl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.648803578 UTC

.section .text
.align 8
_c8hy:
_c8hy:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8hy, .-_c8hy


==================== Asm code ====================
2018-03-16 15:53:55.652214488 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.minusInteger_closure
.type GHC.Integer.Type.minusInteger_closure, @object
GHC.Integer.Type.minusInteger_closure:
	.quad	GHC.Integer.Type.minusInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:55.653156894 UTC

.section .text
.align 8
.globl GHC.Integer.Type.minusInteger_entry
.type GHC.Integer.Type.minusInteger_entry, @object
GHC.Integer.Type.minusInteger_entry:
_c8j0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8j1
_c8j2:
	leaq block_c8iY_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq %rsi,%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
_c8j1:
	leaq GHC.Integer.Type.minusInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.minusInteger_entry, .-GHC.Integer.Type.minusInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.654406566 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.minusInteger_info
.type GHC.Integer.Type.minusInteger_info, @object
GHC.Integer.Type.minusInteger_info:
	.quad	GHC.Integer.Type.minusInteger_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S7IQ_srt+40


==================== Asm code ====================
2018-03-16 15:53:55.655245357 UTC

.section .text
.align 8
_c8iY:
_c8iY:
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
	.size _c8iY, .-_c8iY


==================== Asm code ====================
2018-03-16 15:53:55.655904981 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8iY_info:
	.quad	_c8iY
	.quad	1
	.quad	4294967326
	.quad	S7IQ_srt+40


==================== Asm code ====================
2018-03-16 15:53:55.658659228 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.complementInteger_closure
.type GHC.Integer.Type.complementInteger_closure, @object
GHC.Integer.Type.complementInteger_closure:
	.quad	GHC.Integer.Type.complementInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:55.659535045 UTC

.section .text
.align 8
.globl GHC.Integer.Type.complementInteger_entry
.type GHC.Integer.Type.complementInteger_entry, @object
GHC.Integer.Type.complementInteger_entry:
_c8jj:
	movq %r14,%rsi
	leaq GHC.Integer.Type.negativeOneInteger_closure+2(%rip),%r14
	jmp GHC.Integer.Type.minusInteger_entry
	.size GHC.Integer.Type.complementInteger_entry, .-GHC.Integer.Type.complementInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.660228147 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.complementInteger_info
.type GHC.Integer.Type.complementInteger_info, @object
GHC.Integer.Type.complementInteger_info:
	.quad	GHC.Integer.Type.complementInteger_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S7IQ_srt+48


==================== Asm code ====================
2018-03-16 15:53:55.666940869 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.decodeDoubleInteger_closure
.type GHC.Integer.Type.decodeDoubleInteger_closure, @object
GHC.Integer.Type.decodeDoubleInteger_closure:
	.quad	GHC.Integer.Type.decodeDoubleInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:55.667923518 UTC

.section .text
.align 8
sat_s7oh_entry:
_c8jE:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c8jU
_c8jV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c8jC_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%r14
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
_c8jU:
	jmp *-16(%r13)
	.size sat_s7oh_entry, .-sat_s7oh_entry


==================== Asm code ====================
2018-03-16 15:53:55.668660045 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7oh_info:
	.quad	sat_s7oh_entry
	.quad	12884901888
	.quad	12884901903
	.quad	S7IQ_srt+32


==================== Asm code ====================
2018-03-16 15:53:55.669431223 UTC

.section .text
.align 8
_c8jC:
_c8jC:
	leaq block_c8jH_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,16(%rbp)
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _c8jC, .-_c8jC


==================== Asm code ====================
2018-03-16 15:53:55.670146986 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8jC_info:
	.quad	_c8jC
	.quad	194
	.quad	12884901918
	.quad	S7IQ_srt+32


==================== Asm code ====================
2018-03-16 15:53:55.670884597 UTC

.section .text
.align 8
_c8jH:
_c8jH:
	leaq block_c8jL_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Integer.Type.twoToTheThirtytwoInteger_closure+1(%rip),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c8jH, .-_c8jH


==================== Asm code ====================
2018-03-16 15:53:55.67155561 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8jH_info:
	.quad	_c8jH
	.quad	66
	.quad	12884901918
	.quad	S7IQ_srt+32


==================== Asm code ====================
2018-03-16 15:53:55.672367638 UTC

.section .text
.align 8
_c8jL:
_c8jL:
	leaq block_c8jP_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.plusInteger_entry
	.size _c8jL, .-_c8jL


==================== Asm code ====================
2018-03-16 15:53:55.673407882 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8jL_info:
	.quad	_c8jL
	.quad	66
	.quad	12884901918
	.quad	S7IQ_srt+32


==================== Asm code ====================
2018-03-16 15:53:55.674502737 UTC

.section .text
.align 8
_c8jP:
_c8jP:
	movq 8(%rbp),%rax
	leaq block_c8jT_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c8jP, .-_c8jP


==================== Asm code ====================
2018-03-16 15:53:55.675552826 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8jP_info:
	.quad	_c8jP
	.quad	194
	.quad	4294967326
	.quad	S7IQ_srt+32


==================== Asm code ====================
2018-03-16 15:53:55.676938336 UTC

.section .text
.align 8
_c8jT:
_c8jT:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c8jT, .-_c8jT


==================== Asm code ====================
2018-03-16 15:53:55.677798893 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8jT_info:
	.quad	_c8jT
	.quad	1
	.quad	4294967326
	.quad	S7IQ_srt+32


==================== Asm code ====================
2018-03-16 15:53:55.67869174 UTC

.section .text
.align 8
.globl GHC.Integer.Type.decodeDoubleInteger_entry
.type GHC.Integer.Type.decodeDoubleInteger_entry, @object
GHC.Integer.Type.decodeDoubleInteger_entry:
_c8k4:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c8k5
_c8k6:
	leaq block_c8ju_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *stg_decodeDouble_2Int#@gotpcrel(%rip)
_c8k5:
	leaq GHC.Integer.Type.decodeDoubleInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.decodeDoubleInteger_entry, .-GHC.Integer.Type.decodeDoubleInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.679433634 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.decodeDoubleInteger_info
.type GHC.Integer.Type.decodeDoubleInteger_info, @object
GHC.Integer.Type.decodeDoubleInteger_info:
	.quad	GHC.Integer.Type.decodeDoubleInteger_entry
	.quad	0
	.quad	47244640270
	.quad	4294967303
	.quad	S7IQ_srt+32


==================== Asm code ====================
2018-03-16 15:53:55.680248002 UTC

.section .text
.align 8
_c8ju:
_c8ju:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp _c8jv
	.size _c8ju, .-_c8ju


==================== Asm code ====================
2018-03-16 15:53:55.680932381 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ju_info:
	.quad	_c8ju
	.quad	0
	.quad	12884901918
	.quad	S7IQ_srt+32


==================== Asm code ====================
2018-03-16 15:53:55.68186914 UTC

.section .text
.align 8
_c8jv:
_c8jv:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8k9
_c8k8:
	leaq sat_s7oh_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 24(%rbp),%r14
	leaq -32(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8k9:
	movq $40,904(%r13)
	leaq block_c8jv_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8jv, .-_c8jv


==================== Asm code ====================
2018-03-16 15:53:55.682612571 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8jv_info:
	.quad	_c8jv
	.quad	964
	.quad	12884901918
	.quad	S7IQ_srt+32


==================== Asm code ====================
2018-03-16 15:53:55.689103258 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.smallShiftLPositive_closure
.type GHC.Integer.Type.smallShiftLPositive_closure, @object
GHC.Integer.Type.smallShiftLPositive_closure:
	.quad	GHC.Integer.Type.smallShiftLPositive_info


==================== Asm code ====================
2018-03-16 15:53:55.690309895 UTC

.section .text
.align 8
f2_s7om_entry:
_c8lg:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c8lh
_c8li:
	leaq block_c8l9_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %rsi,%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8l9
_c8la:
	movq (%rbx),%rax
	jmp *(%rax)
_c8lh:
	jmp *-8(%r13)
	.size f2_s7om_entry, .-f2_s7om_entry


==================== Asm code ====================
2018-03-16 15:53:55.691105334 UTC

.section .data.rel.ro
.align 8
.align 1
f2_s7om_info:
	.quad	f2_s7om_entry
	.quad	8589934592
	.quad	13
	.quad	8589934605


==================== Asm code ====================
2018-03-16 15:53:55.692165847 UTC

.section .text
.align 8
_c8l9:
_c8l9:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8ld
_c8le:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8lH
_c8lG:
	movq 32(%rbp),%rax
	testq %rax,%rax
	jne _c8lM
_c8lN:
	addq $-24,%r12
	leaq GHC.Integer.Type.None_closure+2(%rip),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8lM:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Integer.Type.None_closure+2(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8lH:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8ld:
	leaq block_c8lo_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	movq 15(%rbx),%rax
	movq %rax,%rbx
	movq 16(%rbp),%rcx
	shrq %cl,%rbx
	movq %rbx,%r14
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	jmp f2_s7om_entry
	.size _c8l9, .-_c8l9


==================== Asm code ====================
2018-03-16 15:53:55.693056942 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8l9_info:
	.quad	_c8l9
	.quad	708
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.693924709 UTC

.section .text
.align 8
_c8lo:
_c8lo:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8lC
_c8lB:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	shlq %cl,%rax
	orq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8lC:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8lo, .-_c8lo


==================== Asm code ====================
2018-03-16 15:53:55.694770035 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8lo_info:
	.quad	_c8lo
	.quad	964
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.695720602 UTC

.section .text
.align 8
.globl GHC.Integer.Type.smallShiftLPositive_entry
.type GHC.Integer.Type.smallShiftLPositive_entry, @object
GHC.Integer.Type.smallShiftLPositive_entry:
_c8lS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8lW
_c8lV:
	testq %rsi,%rsi
	je _c8lR
_c8lQ:
	leaq f2_s7om_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rsi,-8(%r12)
	movl $64,%eax
	subq %rsi,%rax
	movq %rax,(%r12)
	movq %r14,%rsi
	xorl %r14d,%r14d
	leaq -14(%r12),%rbx
	jmp f2_s7om_entry
_c8lW:
	movq $24,904(%r13)
	leaq GHC.Integer.Type.smallShiftLPositive_closure(%rip),%rbx
	jmp *-8(%r13)
_c8lR:
	addq $-24,%r12
	movq %r14,%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.smallShiftLPositive_entry, .-GHC.Integer.Type.smallShiftLPositive_entry


==================== Asm code ====================
2018-03-16 15:53:55.696562632 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.smallShiftLPositive_info
.type GHC.Integer.Type.smallShiftLPositive_info, @object
GHC.Integer.Type.smallShiftLPositive_info:
	.quad	GHC.Integer.Type.smallShiftLPositive_entry
	.quad	0
	.quad	14
	.quad	8589934606


==================== Asm code ====================
2018-03-16 15:53:55.70252761 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.smallShiftRPositive_closure
.type GHC.Integer.Type.smallShiftRPositive_closure, @object
GHC.Integer.Type.smallShiftRPositive_closure:
	.quad	GHC.Integer.Type.smallShiftRPositive_info


==================== Asm code ====================
2018-03-16 15:53:55.70353422 UTC

.section .text
.align 8
.globl GHC.Integer.Type.smallShiftRPositive_entry
.type GHC.Integer.Type.smallShiftRPositive_entry, @object
GHC.Integer.Type.smallShiftRPositive_entry:
_c8mC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8mD
_c8mE:
	leaq block_c8mz_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8mz
_c8mA:
	movq (%rbx),%rax
	jmp *(%rax)
_c8mD:
	leaq GHC.Integer.Type.smallShiftRPositive_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.smallShiftRPositive_entry, .-GHC.Integer.Type.smallShiftRPositive_entry


==================== Asm code ====================
2018-03-16 15:53:55.704329766 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.smallShiftRPositive_info
.type GHC.Integer.Type.smallShiftRPositive_info, @object
GHC.Integer.Type.smallShiftRPositive_info:
	.quad	GHC.Integer.Type.smallShiftRPositive_entry
	.quad	0
	.quad	14
	.quad	8589934606


==================== Asm code ====================
2018-03-16 15:53:55.705386761 UTC

.section .text
.align 8
_c8mz:
_c8mz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8mJ
_c8mI:
	movq 8(%rbp),%rax
	testq %rax,%rax
	je _c8nj
_c8mR:
	addq $-16,%r12
	leaq block_c8mP_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movl $64,%esi
	subq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallShiftLPositive_entry
_c8nj:
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8mJ:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8mz, .-_c8mz


==================== Asm code ====================
2018-03-16 15:53:55.706396942 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8mz_info:
	.quad	_c8mz
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.707611448 UTC

.section .text
.align 8
_c8mP:
_c8mP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8mY
_u8nm:
	addq $8,%rbp
	jmp _c8ng
_c8mY:
	leaq block_c8mV_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	testb $7,%bl
	jne _c8mV
_c8mZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8mP, .-_c8mP


==================== Asm code ====================
2018-03-16 15:53:55.708575965 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8mP_info:
	.quad	_c8mP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.710069572 UTC

.section .text
.align 8
_c8mV:
_c8mV:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8n5
_u8nn:
	addq $8,%rbp
	jmp _c8ng
_c8n8:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8n5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8n8
_c8n7:
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8mV, .-_c8mV


==================== Asm code ====================
2018-03-16 15:53:55.711329648 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8mV_info:
	.quad	_c8mV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.712274059 UTC

.section .text
.align 8
_c8ng:
_c8ng:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8ng, .-_c8ng


==================== Asm code ====================
2018-03-16 15:53:55.717056212 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.shiftRPositive_closure
.type GHC.Integer.Type.shiftRPositive_closure, @object
GHC.Integer.Type.shiftRPositive_closure:
	.quad	GHC.Integer.Type.shiftRPositive_info


==================== Asm code ====================
2018-03-16 15:53:55.718282807 UTC

.section .text
.align 8
.globl GHC.Integer.Type.shiftRPositive_entry
.type GHC.Integer.Type.shiftRPositive_entry, @object
GHC.Integer.Type.shiftRPositive_entry:
_c8o8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8o9
_u8op:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c8nY
_c8o9:
	leaq GHC.Integer.Type.shiftRPositive_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.shiftRPositive_entry, .-GHC.Integer.Type.shiftRPositive_entry


==================== Asm code ====================
2018-03-16 15:53:55.71916731 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.shiftRPositive_info
.type GHC.Integer.Type.shiftRPositive_info, @object
GHC.Integer.Type.shiftRPositive_info:
	.quad	GHC.Integer.Type.shiftRPositive_entry
	.quad	0
	.quad	14
	.quad	8589934606


==================== Asm code ====================
2018-03-16 15:53:55.720058368 UTC

.section .text
.align 8
_c8nY:
_c8nY:
	movq (%rbp),%rax
	leaq block_c8o1_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8o1
_c8o2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8nY, .-_c8nY


==================== Asm code ====================
2018-03-16 15:53:55.720912259 UTC

.section .text
.align 8
_c8o1:
_c8o1:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8o5
_c8o6:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8o5:
	movq 8(%rbp),%rax
	cmpq $64,%rax
	jl _c8oh
_c8oi:
	movq 7(%rbx),%rbx
	movq %rbx,(%rbp)
	addq $-64,%rax
	movq %rax,8(%rbp)
	jmp _c8nY
_c8oh:
	movq %rax,%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.smallShiftRPositive_entry
	.size _c8o1, .-_c8o1


==================== Asm code ====================
2018-03-16 15:53:55.721858218 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8o1_info:
	.quad	_c8o1
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.726880313 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.shiftRInteger_closure
.type GHC.Integer.Type.shiftRInteger_closure, @object
GHC.Integer.Type.shiftRInteger_closure:
	.quad	GHC.Integer.Type.shiftRInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:55.727957094 UTC

.section .text
.align 8
.globl GHC.Integer.Type.shiftRInteger_entry
.type GHC.Integer.Type.shiftRInteger_entry, @object
GHC.Integer.Type.shiftRInteger_entry:
_c8oX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8oY
_c8oZ:
	leaq block_c8oP_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8oP
_c8oQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c8oY:
	leaq GHC.Integer.Type.shiftRInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.shiftRInteger_entry, .-GHC.Integer.Type.shiftRInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.728931166 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.shiftRInteger_info
.type GHC.Integer.Type.shiftRInteger_info, @object
GHC.Integer.Type.shiftRInteger_info:
	.quad	GHC.Integer.Type.shiftRInteger_entry
	.quad	0
	.quad	12884901902
	.quad	8589934606
	.quad	S7IQ_srt+64


==================== Asm code ====================
2018-03-16 15:53:55.72997251 UTC

.section .text
.align 8
_c8oP:
_c8oP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u8pj
_c8oV:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u8pj:
	cmpq $2,%rax
	jb _c8oT
_c8oU:
	leaq block_c8p5_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.complementInteger_entry
_c8oT:
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.shiftRPositive_entry
	.size _c8oP, .-_c8oP


==================== Asm code ====================
2018-03-16 15:53:55.730786355 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8oP_info:
	.quad	_c8oP
	.quad	65
	.quad	12884901918
	.quad	S7IQ_srt+64


==================== Asm code ====================
2018-03-16 15:53:55.731522804 UTC

.section .text
.align 8
_c8p5:
_c8p5:
	movq 8(%rbp),%rax
	leaq block_c8p9_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.shiftRInteger_entry
	.size _c8p5, .-_c8p5


==================== Asm code ====================
2018-03-16 15:53:55.732270919 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8p5_info:
	.quad	_c8p5
	.quad	65
	.quad	12884901918
	.quad	S7IQ_srt+64


==================== Asm code ====================
2018-03-16 15:53:55.732997779 UTC

.section .text
.align 8
_c8p9:
_c8p9:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.complementInteger_entry
	.size _c8p9, .-_c8p9


==================== Asm code ====================
2018-03-16 15:53:55.733815163 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8p9_info:
	.quad	_c8p9
	.quad	0
	.quad	4294967326
	.quad	S7IQ_srt+64


==================== Asm code ====================
2018-03-16 15:53:55.738549505 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.shiftLPositive_closure
.type GHC.Integer.Type.shiftLPositive_closure, @object
GHC.Integer.Type.shiftLPositive_closure:
	.quad	GHC.Integer.Type.shiftLPositive_info


==================== Asm code ====================
2018-03-16 15:53:55.739563245 UTC

.section .text
.align 8
.globl GHC.Integer.Type.shiftLPositive_entry
.type GHC.Integer.Type.shiftLPositive_entry, @object
GHC.Integer.Type.shiftLPositive_entry:
_c8pZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8q0
_u8q5:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c8pG
_c8q0:
	leaq GHC.Integer.Type.shiftLPositive_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.shiftLPositive_entry, .-GHC.Integer.Type.shiftLPositive_entry


==================== Asm code ====================
2018-03-16 15:53:55.740272833 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.shiftLPositive_info
.type GHC.Integer.Type.shiftLPositive_info, @object
GHC.Integer.Type.shiftLPositive_info:
	.quad	GHC.Integer.Type.shiftLPositive_entry
	.quad	0
	.quad	14
	.quad	8589934606


==================== Asm code ====================
2018-03-16 15:53:55.741170574 UTC

.section .text
.align 8
_c8pG:
_c8pG:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	cmpq $64,%rbx
	jl _c8pX
_c8pY:
	leaq block_c8pN_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8pN
_c8pO:
	movq (%rbx),%rax
	jmp *(%rax)
_c8pX:
	movq %rbx,%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.smallShiftLPositive_entry
	.size _c8pG, .-_c8pG


==================== Asm code ====================
2018-03-16 15:53:55.742180846 UTC

.section .text
.align 8
_c8pN:
_c8pN:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8q4
_c8q3:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq $0,(%r12)
	leaq -15(%r12),%rax
	movq %rax,(%rbp)
	addq $-64,8(%rbp)
	jmp _c8pG
_c8q4:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8pN, .-_c8pN


==================== Asm code ====================
2018-03-16 15:53:55.742986159 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8pN_info:
	.quad	_c8pN
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.74867552 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.shiftLInteger_closure
.type GHC.Integer.Type.shiftLInteger_closure, @object
GHC.Integer.Type.shiftLInteger_closure:
	.quad	GHC.Integer.Type.shiftLInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.750518504 UTC

.section .text
.align 8
.globl GHC.Integer.Type.shiftLInteger_entry
.type GHC.Integer.Type.shiftLInteger_entry, @object
GHC.Integer.Type.shiftLInteger_entry:
_c8qA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8qB
_c8qC:
	leaq block_c8qs_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8qs
_c8qt:
	movq (%rbx),%rax
	jmp *(%rax)
_c8qB:
	leaq GHC.Integer.Type.shiftLInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.shiftLInteger_entry, .-GHC.Integer.Type.shiftLInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.751294826 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.shiftLInteger_info
.type GHC.Integer.Type.shiftLInteger_info, @object
GHC.Integer.Type.shiftLInteger_info:
	.quad	GHC.Integer.Type.shiftLInteger_entry
	.quad	0
	.quad	14
	.quad	8589934606


==================== Asm code ====================
2018-03-16 15:53:55.752220182 UTC

.section .text
.align 8
_c8qs:
_c8qs:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u8r2
_c8qy:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u8r2:
	movq 8(%rbp),%rcx
	cmpq $2,%rax
	jb _c8qw
_c8qx:
	leaq block_c8qQ_info(%rip),%rax
	movq %rax,8(%rbp)
	movq %rcx,%rsi
	movq 6(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.shiftLPositive_entry
_c8qw:
	leaq block_c8qF_info(%rip),%rax
	movq %rax,8(%rbp)
	movq %rcx,%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.shiftLPositive_entry
	.size _c8qs, .-_c8qs


==================== Asm code ====================
2018-03-16 15:53:55.753225644 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8qs_info:
	.quad	_c8qs
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.754441321 UTC

.section .text
.align 8
_c8qF:
_c8qF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8qN
_c8qM:
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8qN:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8qF, .-_c8qF


==================== Asm code ====================
2018-03-16 15:53:55.755377587 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8qF_info:
	.quad	_c8qF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.756279457 UTC

.section .text
.align 8
_c8qQ:
_c8qQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8qY
_c8qX:
	leaq GHC.Integer.Type.Negative_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8qY:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8qQ, .-_c8qQ


==================== Asm code ====================
2018-03-16 15:53:55.757110441 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8qQ_info:
	.quad	_c8qQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.762016804 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.some_closure
.type GHC.Integer.Type.some_closure, @object
GHC.Integer.Type.some_closure:
	.quad	GHC.Integer.Type.some_info


==================== Asm code ====================
2018-03-16 15:53:55.763039481 UTC

.section .text
.align 8
.globl GHC.Integer.Type.some_entry
.type GHC.Integer.Type.some_entry, @object
GHC.Integer.Type.some_entry:
_c8rD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8rE
_c8rF:
	leaq block_c8rw_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8rw
_c8rx:
	movq (%rbx),%rax
	jmp *(%rax)
_c8rE:
	leaq GHC.Integer.Type.some_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.some_entry, .-GHC.Integer.Type.some_entry


==================== Asm code ====================
2018-03-16 15:53:55.76387318 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.some_info
.type GHC.Integer.Type.some_info, @object
GHC.Integer.Type.some_info:
	.quad	GHC.Integer.Type.some_entry
	.quad	0
	.quad	14
	.quad	8589934605


==================== Asm code ====================
2018-03-16 15:53:55.764916808 UTC

.section .text
.align 8
_c8rw:
_c8rw:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8rA
_c8rB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8rQ
_c8rP:
	testq %rax,%rax
	je _c8rW
_c8rV:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Integer.Type.None_closure+2(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8rW:
	addq $-24,%r12
	leaq GHC.Integer.Type.None_closure+2(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8rQ:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8rA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8rQ
_c8rK:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8rw, .-_c8rw


==================== Asm code ====================
2018-03-16 15:53:55.765888069 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8rw_info:
	.quad	_c8rw
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.771890532 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.quotRemPositive_g_closure
.type GHC.Integer.Type.quotRemPositive_g_closure, @object
GHC.Integer.Type.quotRemPositive_g_closure:
	.quad	GHC.Integer.Type.quotRemPositive_g_info


==================== Asm code ====================
2018-03-16 15:53:55.772801353 UTC

.section .text
.align 8
.globl GHC.Integer.Type.quotRemPositive_g_entry
.type GHC.Integer.Type.quotRemPositive_g_entry, @object
GHC.Integer.Type.quotRemPositive_g_entry:
_c8sr:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ss
_u8t2:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c8sh
_c8ss:
	leaq GHC.Integer.Type.quotRemPositive_g_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.quotRemPositive_g_entry, .-GHC.Integer.Type.quotRemPositive_g_entry


==================== Asm code ====================
2018-03-16 15:53:55.773645849 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.quotRemPositive_g_info
.type GHC.Integer.Type.quotRemPositive_g_info, @object
GHC.Integer.Type.quotRemPositive_g_info:
	.quad	GHC.Integer.Type.quotRemPositive_g_entry
	.quad	0
	.quad	14
	.quad	12884901907


==================== Asm code ====================
2018-03-16 15:53:55.774490608 UTC

.section .text
.align 8
_c8sh:
_c8sh:
	leaq block_c8sk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8sk
_c8sl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8sh, .-_c8sh


==================== Asm code ====================
2018-03-16 15:53:55.775412675 UTC

.section .text
.align 8
_c8sk:
_c8sk:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8so
_c8sp:
	leaq block_c8sF_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq 6(%rbx),%rcx
	movq %rcx,%rsi
	movq %rax,%r14
	movq 14(%rbx),%rax
	movq %rax,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.comparePositive_entry
_c8so:
	leaq block_c8sw_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8sw
_c8sy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8sk, .-_c8sk


==================== Asm code ====================
2018-03-16 15:53:55.77616871 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8sk_info:
	.quad	_c8sk
	.quad	195
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.776913835 UTC

.section .text
.align 8
_c8sw:
_c8sw:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8sw, .-_c8sw


==================== Asm code ====================
2018-03-16 15:53:55.778682536 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8sw_info:
	.quad	_c8sw
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.779731985 UTC

.section .text
.align 8
_c8sF:
_c8sF:
	movq 32(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8sV
_c8sN:
	leaq block_c8sK_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq 24(%rbp),%rsi
	movq %rax,%r14
	jmp GHC.Integer.Type.minusPositive_entry
_c8sV:
	movq 16(%rbp),%rbx
	shlq $1,%rbx
	movq %rbx,16(%rbp)
	movq 8(%rbp),%rbx
	movq %rbx,24(%rbp)
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp _c8sh
	.size _c8sF, .-_c8sF


==================== Asm code ====================
2018-03-16 15:53:55.780497643 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8sF_info:
	.quad	_c8sF
	.quad	132
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.781361061 UTC

.section .text
.align 8
_c8sK:
_c8sK:
	movq 16(%rbp),%rax
	shlq $1,%rax
	incq %rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	movq %rbx,32(%rbp)
	addq $16,%rbp
	jmp _c8sh
	.size _c8sK, .-_c8sK


==================== Asm code ====================
2018-03-16 15:53:55.782080789 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8sK_info:
	.quad	_c8sK
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.800846982 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.quotRemPositive_closure
.type GHC.Integer.Type.quotRemPositive_closure, @object
GHC.Integer.Type.quotRemPositive_closure:
	.quad	GHC.Integer.Type.quotRemPositive_info


==================== Asm code ====================
2018-03-16 15:53:55.80182373 UTC

.section .text
.align 8
sat_s7pB_entry:
_c8ub:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8uc
_c8ud:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq -1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp mkSubtractors_s7pw_entry
_c8uc:
	jmp *-16(%r13)
	.size sat_s7pB_entry, .-sat_s7pB_entry


==================== Asm code ====================
2018-03-16 15:53:55.802533259 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7pB_info:
	.quad	sat_s7pB_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:53:55.803338418 UTC

.section .text
.align 8
sat_s7pz_entry:
_c8ui:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8uj
_c8uk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.smallShiftLPositive_entry
_c8uj:
	jmp *-16(%r13)
	.size sat_s7pz_entry, .-sat_s7pz_entry


==================== Asm code ====================
2018-03-16 15:53:55.804159179 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7pz_info:
	.quad	sat_s7pz_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:53:55.805098354 UTC

.section .text
.align 8
mkSubtractors_s7pw_entry:
_c8uo:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c8us
_c8ur:
	testq %r14,%r14
	je _c8un
_c8um:
	movq 7(%rbx),%rax
	leaq sat_s7pB_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %r14,-56(%r12)
	leaq sat_s7pz_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	leaq GHC.Integer.Type.Cons_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8us:
	movq $88,904(%r13)
	jmp *-8(%r13)
_c8un:
	movq 15(%rbx),%rax
	addq $-88,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size mkSubtractors_s7pw_entry, .-mkSubtractors_s7pw_entry


==================== Asm code ====================
2018-03-16 15:53:55.806669004 UTC

.section .data.rel.ro
.align 8
.align 1
mkSubtractors_s7pw_info:
	.quad	mkSubtractors_s7pw_entry
	.quad	2
	.quad	11
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:53:55.807776343 UTC

.section .text
.align 8
subtractors_s7pu_entry:
_c8uu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8uv
_c8uw:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c8uy
_c8ux:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq GHC.Integer.Type.Cons_con_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-32(%r12)
	leaq GHC.Integer.Type.Nil_closure+1(%rip),%rbx
	movq %rbx,-24(%r12)
	leaq mkSubtractors_s7pw_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	movl $63,%r14d
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp mkSubtractors_s7pw_entry
_c8uy:
	movq $48,904(%r13)
_c8uv:
	jmp *-16(%r13)
	.size subtractors_s7pu_entry, .-subtractors_s7pu_entry


==================== Asm code ====================
2018-03-16 15:53:55.80871391 UTC

.section .data.rel.ro
.align 8
.align 1
subtractors_s7pu_info:
	.quad	subtractors_s7pu_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:53:55.809617545 UTC

.section .text
.align 8
sat_s7pR_entry:
_c8uZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8v0
_c8v1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.some_entry
_c8v0:
	jmp *-16(%r13)
	.size sat_s7pR_entry, .-sat_s7pR_entry


==================== Asm code ====================
2018-03-16 15:53:55.810513255 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7pR_info:
	.quad	sat_s7pR_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:53:55.811788225 UTC

.section .text
.align 8
sat_s7pX_entry:
_c8vf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8vg
_c8vh:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.some_entry
_c8vg:
	jmp *-16(%r13)
	.size sat_s7pX_entry, .-sat_s7pX_entry


==================== Asm code ====================
2018-03-16 15:53:55.812915472 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7pX_info:
	.quad	sat_s7pX_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:53:55.814216448 UTC

.section .text
.align 8
sat_s7q1_entry:
_c8vr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8vs
_c8vt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.some_entry
_c8vs:
	jmp *-16(%r13)
	.size sat_s7q1_entry, .-sat_s7q1_entry


==================== Asm code ====================
2018-03-16 15:53:55.815253127 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7q1_info:
	.quad	sat_s7q1_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:53:55.81654788 UTC

.section .text
.align 8
f2_s7pC_entry:
_c8vy:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8vz
_c8vA:
	leaq block_c8uE_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8uE
_c8uF:
	movq (%rbx),%rax
	jmp *(%rax)
_c8vz:
	jmp *-8(%r13)
	.size f2_s7pC_entry, .-f2_s7pC_entry


==================== Asm code ====================
2018-03-16 15:53:55.817692605 UTC

.section .data.rel.ro
.align 8
.align 1
f2_s7pC_info:
	.quad	f2_s7pC_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:55.818980924 UTC

.section .text
.align 8
_c8uE:
_c8uE:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8vv
_c8vw:
	leaq GHC.Integer.Type.None_closure+2(%rip),%r14
	leaq GHC.Integer.Type.None_closure+2(%rip),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8vv:
	leaq block_c8uJ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp f2_s7pC_entry
	.size _c8uE, .-_c8uE


==================== Asm code ====================
2018-03-16 15:53:55.820146025 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8uE_info:
	.quad	_c8uE
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.82192836 UTC

.section .text
.align 8
_c8uJ:
_c8uJ:
	leaq block_c8uL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8uL
_c8uM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8uJ, .-_c8uJ


==================== Asm code ====================
2018-03-16 15:53:55.823031956 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8uJ_info:
	.quad	_c8uJ
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.82479373 UTC

.section .text
.align 8
_c8uL:
_c8uL:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c8vE
_c8vL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8vO
_c8vN:
	testq %rcx,%rcx
	je _c8vU
_c8vQ:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Integer.Type.None_closure+2(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rcx,(%r12)
	leaq block_c8v7_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq -15(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Type.quotRemPositive_g_entry
_c8vU:
	addq $-24,%r12
	leaq block_c8vj_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq GHC.Integer.Type.None_closure+2(%rip),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Type.quotRemPositive_g_entry
_c8vO:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8vE:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8vO
_c8vG:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rcx,(%r12)
	leaq block_c8uR_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq -15(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Type.quotRemPositive_g_entry
	.size _c8uL, .-_c8uL


==================== Asm code ====================
2018-03-16 15:53:55.826540075 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8uL_info:
	.quad	_c8uL
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.827608885 UTC

.section .text
.align 8
_c8uR:
_c8uR:
	movq %r14,16(%rbp)
	movq %rbx,24(%rbp)
	jmp _c8uS
	.size _c8uR, .-_c8uR


==================== Asm code ====================
2018-03-16 15:53:55.828600213 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8uR_info:
	.quad	_c8uR
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.829986693 UTC

.section .text
.align 8
_c8uS:
_c8uS:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8vK
_c8vJ:
	leaq sat_s7pR_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%r14
	leaq -24(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8vK:
	movq $32,904(%r13)
	leaq block_c8uS_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8uS, .-_c8uS


==================== Asm code ====================
2018-03-16 15:53:55.831159218 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8uS_info:
	.quad	_c8uS
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.832331954 UTC

.section .text
.align 8
_c8vj:
_c8vj:
	movq %r14,16(%rbp)
	movq %rbx,24(%rbp)
	jmp _c8vk
	.size _c8vj, .-_c8vj


==================== Asm code ====================
2018-03-16 15:53:55.833384333 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8vj_info:
	.quad	_c8vj
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.834680189 UTC

.section .text
.align 8
_c8vk:
_c8vk:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8vX
_c8vW:
	leaq sat_s7q1_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%r14
	leaq -24(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8vX:
	movq $32,904(%r13)
	leaq block_c8vk_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8vk, .-_c8vk


==================== Asm code ====================
2018-03-16 15:53:55.835892724 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8vk_info:
	.quad	_c8vk
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.837844099 UTC

.section .text
.align 8
_c8v7:
_c8v7:
	movq %r14,16(%rbp)
	movq %rbx,24(%rbp)
	jmp _c8v8
	.size _c8v7, .-_c8v7


==================== Asm code ====================
2018-03-16 15:53:55.838866258 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8v7_info:
	.quad	_c8v7
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.840230581 UTC

.section .text
.align 8
_c8v8:
_c8v8:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8vT
_c8vS:
	leaq sat_s7pX_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%r14
	leaq -24(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8vT:
	movq $32,904(%r13)
	leaq block_c8v8_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8v8, .-_c8v8


==================== Asm code ====================
2018-03-16 15:53:55.841569573 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8v8_info:
	.quad	_c8v8
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.842818273 UTC

.section .text
.align 8
sat_s7q6_entry:
_c8wg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8wh
_c8wi:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.digitsMaybeZeroToInteger_entry
_c8wh:
	jmp *-16(%r13)
	.size sat_s7q6_entry, .-sat_s7q6_entry


==================== Asm code ====================
2018-03-16 15:53:55.843891274 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7q6_info:
	.quad	sat_s7q6_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:53:55.845043275 UTC

.section .text
.align 8
sat_s7q5_entry:
_c8wn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8wo
_c8wp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.digitsMaybeZeroToInteger_entry
_c8wo:
	jmp *-16(%r13)
	.size sat_s7q5_entry, .-sat_s7q5_entry


==================== Asm code ====================
2018-03-16 15:53:55.846179465 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7q5_info:
	.quad	sat_s7q5_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:53:55.847390878 UTC

.section .text
.align 8
.globl GHC.Integer.Type.quotRemPositive_entry
.type GHC.Integer.Type.quotRemPositive_entry, @object
GHC.Integer.Type.quotRemPositive_entry:
_c8wq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8wr
_c8ws:
	leaq block_c8tO_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8tO
_c8tP:
	movq (%rbx),%rax
	jmp *(%rax)
_c8wr:
	leaq GHC.Integer.Type.quotRemPositive_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.quotRemPositive_entry, .-GHC.Integer.Type.quotRemPositive_entry


==================== Asm code ====================
2018-03-16 15:53:55.848571214 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.quotRemPositive_info
.type GHC.Integer.Type.quotRemPositive_info, @object
GHC.Integer.Type.quotRemPositive_info:
	.quad	GHC.Integer.Type.quotRemPositive_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.849984588 UTC

.section .text
.align 8
_c8tO:
_c8tO:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8wv
_c8wu:
	leaq subtractors_s7pu_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %rbx,-16(%r12)
	leaq f2_s7pC_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%rax
	leaq block_c8wa_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%r14
	leaq -7(%r12),%rbx
	addq $8,%rbp
	jmp f2_s7pC_entry
_c8wv:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8tO, .-_c8tO


==================== Asm code ====================
2018-03-16 15:53:55.85123803 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8tO_info:
	.quad	_c8tO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.853055868 UTC

.section .text
.align 8
_c8wa:
_c8wa:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c8wy
_c8wx:
	leaq sat_s7q6_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq sat_s7q5_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%r14
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wy:
	movq $48,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c8wa, .-_c8wa


==================== Asm code ====================
2018-03-16 15:53:55.854357167 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8wa_info:
	.quad	_c8wa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.871993194 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.quotRemInteger_closure
.type GHC.Integer.Type.quotRemInteger_closure, @object
GHC.Integer.Type.quotRemInteger_closure:
	.quad	GHC.Integer.Type.quotRemInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.874044283 UTC

.section .text
.align 8
sat_s7qj_entry:
_c8zi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8zj
_c8zk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
_c8zj:
	jmp *-16(%r13)
	.size sat_s7qj_entry, .-sat_s7qj_entry


==================== Asm code ====================
2018-03-16 15:53:55.875151896 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7qj_info:
	.quad	sat_s7qj_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:53:55.876436286 UTC

.section .text
.align 8
sat_s7qr_entry:
_c8zy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8zz
_c8zA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
_c8zz:
	jmp *-16(%r13)
	.size sat_s7qr_entry, .-sat_s7qr_entry


==================== Asm code ====================
2018-03-16 15:53:55.877389621 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7qr_info:
	.quad	sat_s7qr_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:53:55.878448801 UTC

.section .text
.align 8
sat_s7qq_entry:
_c8zF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8zG
_c8zH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
_c8zG:
	jmp *-16(%r13)
	.size sat_s7qq_entry, .-sat_s7qq_entry


==================== Asm code ====================
2018-03-16 15:53:55.879378156 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7qq_info:
	.quad	sat_s7qq_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:53:55.880525476 UTC

.section .text
.align 8
sat_s7qw_entry:
_c8zQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8zR
_c8zS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
_c8zR:
	jmp *-16(%r13)
	.size sat_s7qw_entry, .-sat_s7qw_entry


==================== Asm code ====================
2018-03-16 15:53:55.88162379 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7qw_info:
	.quad	sat_s7qw_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:53:55.882640152 UTC

.section .text
.align 8
.globl GHC.Integer.Type.quotRemInteger_entry
.type GHC.Integer.Type.quotRemInteger_entry, @object
GHC.Integer.Type.quotRemInteger_entry:
_c8zX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8zY
_c8zZ:
	leaq block_c8yR_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8yR
_c8yS:
	movq (%rbx),%rax
	jmp *(%rax)
_c8zY:
	leaq GHC.Integer.Type.quotRemInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.quotRemInteger_entry, .-GHC.Integer.Type.quotRemInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.883407302 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.quotRemInteger_info
.type GHC.Integer.Type.quotRemInteger_info, @object
GHC.Integer.Type.quotRemInteger_info:
	.quad	GHC.Integer.Type.quotRemInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.884810179 UTC

.section .text
.align 8
_c8yR:
_c8yR:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	je _c8zV
_c8zU:
	leaq block_c8yW_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8yW
_c8yX:
	movq (%rbx),%rax
	jmp *(%rax)
_c8zV:
	leaq block_c8Az_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8Az
_c8AB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8yR, .-_c8yR


==================== Asm code ====================
2018-03-16 15:53:55.885750962 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yR_info:
	.quad	_c8yR
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.886452868 UTC

.section .text
.align 8
_c8Az:
_c8Az:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%r14
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8Az, .-_c8Az


==================== Asm code ====================
2018-03-16 15:53:55.887137897 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Az_info:
	.quad	_c8Az
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.888060146 UTC

.section .text
.align 8
_c8yW:
_c8yW:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8Aw
_c8A3:
	leaq block_c8z1_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8z1
_c8z2:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Aw:
	leaq GHC.Integer.Type.errorInteger_closure+1(%rip),%r14
	leaq GHC.Integer.Type.errorInteger_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8yW, .-_c8yW


==================== Asm code ====================
2018-03-16 15:53:55.888828354 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yW_info:
	.quad	_c8yW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.889822576 UTC

.section .text
.align 8
_c8z1:
_c8z1:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $2,%rcx
	jb _c8A6
_c8Ah:
	leaq block_c8zn_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8zn
_c8zo:
	movq (%rbx),%rax
	jmp *(%rax)
_c8A6:
	leaq block_c8z6_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8z6
_c8z7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8z1, .-_c8z1


==================== Asm code ====================
2018-03-16 15:53:55.890625542 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8z1_info:
	.quad	_c8z1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.891449167 UTC

.section .text
.align 8
_c8z6:
_c8z6:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $2,%rcx
	jb _c8Aa
_c8Ac:
	leaq block_c8zc_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 6(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.quotRemPositive_entry
_c8Aa:
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.quotRemPositive_entry
	.size _c8z6, .-_c8z6


==================== Asm code ====================
2018-03-16 15:53:55.892259656 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8z6_info:
	.quad	_c8z6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.893163936 UTC

.section .text
.align 8
_c8zc:
_c8zc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8Af
_c8Ae:
	leaq sat_s7qj_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Af:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c8zc, .-_c8zc


==================== Asm code ====================
2018-03-16 15:53:55.893946814 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8zc_info:
	.quad	_c8zc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.894847181 UTC

.section .text
.align 8
_c8zn:
_c8zn:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $2,%rcx
	jb _c8Ak
_c8Ap:
	leaq block_c8zK_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 6(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.quotRemPositive_entry
_c8Ak:
	leaq block_c8zs_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.quotRemPositive_entry
	.size _c8zn, .-_c8zn


==================== Asm code ====================
2018-03-16 15:53:55.896038153 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8zn_info:
	.quad	_c8zn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.896943738 UTC

.section .text
.align 8
_c8zs:
_c8zs:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c8An
_c8Am:
	leaq sat_s7qr_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq sat_s7qq_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%r14
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8An:
	movq $48,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c8zs, .-_c8zs


==================== Asm code ====================
2018-03-16 15:53:55.898176918 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8zs_info:
	.quad	_c8zs
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.899479 UTC

.section .text
.align 8
_c8zK:
_c8zK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8As
_c8Ar:
	leaq sat_s7qw_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8As:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c8zK, .-_c8zK


==================== Asm code ====================
2018-03-16 15:53:55.90057773 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8zK_info:
	.quad	_c8zK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.910726226 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.divModInteger_closure
.type GHC.Integer.Type.divModInteger_closure, @object
GHC.Integer.Type.divModInteger_closure:
	.quad	GHC.Integer.Type.divModInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:55.912704845 UTC

.section .text
.align 8
sat_s7qI_entry:
_c8CF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CG
_c8CH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c8CG:
	jmp *-16(%r13)
	.size sat_s7qI_entry, .-sat_s7qI_entry


==================== Asm code ====================
2018-03-16 15:53:55.913877578 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7qI_info:
	.quad	sat_s7qI_entry
	.quad	2
	.quad	4294967314
	.quad	S7IQ_srt+40


==================== Asm code ====================
2018-03-16 15:53:55.915117971 UTC

.section .text
.align 8
sat_s7qH_entry:
_c8CM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CN
_c8CO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.Integer.Type.oneInteger_closure+1(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.minusInteger_entry
_c8CN:
	jmp *-16(%r13)
	.size sat_s7qH_entry, .-sat_s7qH_entry


==================== Asm code ====================
2018-03-16 15:53:55.916286772 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7qH_info:
	.quad	sat_s7qH_entry
	.quad	1
	.quad	4294967312
	.quad	S7IQ_srt+48


==================== Asm code ====================
2018-03-16 15:53:55.917568667 UTC

.section .text
.align 8
.globl GHC.Integer.Type.divModInteger_entry
.type GHC.Integer.Type.divModInteger_entry, @object
GHC.Integer.Type.divModInteger_entry:
_c8CP:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CQ
_c8CR:
	leaq block_c8Ci_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.quotRemInteger_entry
_c8CQ:
	leaq GHC.Integer.Type.divModInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.divModInteger_entry, .-GHC.Integer.Type.divModInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.918721877 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.divModInteger_info
.type GHC.Integer.Type.divModInteger_info, @object
GHC.Integer.Type.divModInteger_info:
	.quad	GHC.Integer.Type.divModInteger_entry
	.quad	0
	.quad	150323855374
	.quad	8589934607
	.quad	S7IQ_srt+40


==================== Asm code ====================
2018-03-16 15:53:55.919939811 UTC

.section .text
.align 8
_c8Ci:
_c8Ci:
	leaq block_c8Ck_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 8(%rbp),%r14
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.signumInteger_entry
	.size _c8Ci, .-_c8Ci


==================== Asm code ====================
2018-03-16 15:53:55.920968409 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Ci_info:
	.quad	_c8Ci
	.quad	1
	.quad	12884901918
	.quad	S7IQ_srt+40


==================== Asm code ====================
2018-03-16 15:53:55.922179033 UTC

.section .text
.align 8
_c8Ck:
_c8Ck:
	leaq block_c8Co_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.negateInteger_entry
	.size _c8Ck, .-_c8Ck


==================== Asm code ====================
2018-03-16 15:53:55.923122133 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Ck_info:
	.quad	_c8Ck
	.quad	3
	.quad	12884901918
	.quad	S7IQ_srt+40


==================== Asm code ====================
2018-03-16 15:53:55.92416537 UTC

.section .text
.align 8
_c8Co:
_c8Co:
	leaq block_c8Cs_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.signumInteger_entry
	.size _c8Co, .-_c8Co


==================== Asm code ====================
2018-03-16 15:53:55.925234704 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Co_info:
	.quad	_c8Co
	.quad	3
	.quad	12884901918
	.quad	S7IQ_srt+40


==================== Asm code ====================
2018-03-16 15:53:55.927043653 UTC

.section .text
.align 8
_c8Cs:
_c8Cs:
	movq 8(%rbp),%rax
	leaq block_c8Cw_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c8Cs, .-_c8Cs


==================== Asm code ====================
2018-03-16 15:53:55.928170255 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Cs_info:
	.quad	_c8Cs
	.quad	4
	.quad	12884901918
	.quad	S7IQ_srt+40


==================== Asm code ====================
2018-03-16 15:53:55.9296588 UTC

.section .text
.align 8
_c8Cw:
_c8Cw:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	cmpq $1,%rbx
	je _c8D0
_c8CZ:
	movq %rcx,%r14
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8D3:
	movq $56,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c8D0:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8D3
_c8D2:
	leaq sat_s7qI_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rcx,-24(%r12)
	leaq sat_s7qH_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -48(%r12),%r14
	leaq -16(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8Cw, .-_c8Cw


==================== Asm code ====================
2018-03-16 15:53:55.930922513 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Cw_info:
	.quad	_c8Cw
	.quad	3
	.quad	12884901918
	.quad	S7IQ_srt+40


==================== Asm code ====================
2018-03-16 15:53:55.935723907 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.divInteger_closure
.type GHC.Integer.Type.divInteger_closure, @object
GHC.Integer.Type.divInteger_closure:
	.quad	GHC.Integer.Type.divInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:55.937140154 UTC

.section .text
.align 8
.globl GHC.Integer.Type.divInteger_entry
.type GHC.Integer.Type.divInteger_entry, @object
GHC.Integer.Type.divInteger_entry:
_c8DO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DP
_c8DQ:
	leaq block_c8DM_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.divModInteger_entry
_c8DP:
	leaq GHC.Integer.Type.divInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.divInteger_entry, .-GHC.Integer.Type.divInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.938390727 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.divInteger_info
.type GHC.Integer.Type.divInteger_info, @object
GHC.Integer.Type.divInteger_info:
	.quad	GHC.Integer.Type.divInteger_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S7IQ_srt+80


==================== Asm code ====================
2018-03-16 15:53:55.939678118 UTC

.section .text
.align 8
_c8DM:
_c8DM:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8DM, .-_c8DM


==================== Asm code ====================
2018-03-16 15:53:55.94067795 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DM_info:
	.quad	_c8DM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.946260923 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.modInteger_closure
.type GHC.Integer.Type.modInteger_closure, @object
GHC.Integer.Type.modInteger_closure:
	.quad	GHC.Integer.Type.modInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:55.947603631 UTC

.section .text
.align 8
.globl GHC.Integer.Type.modInteger_entry
.type GHC.Integer.Type.modInteger_entry, @object
GHC.Integer.Type.modInteger_entry:
_c8E9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Ea
_c8Eb:
	leaq block_c8E7_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.divModInteger_entry
_c8Ea:
	leaq GHC.Integer.Type.modInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.modInteger_entry, .-GHC.Integer.Type.modInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.948757286 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.modInteger_info
.type GHC.Integer.Type.modInteger_info, @object
GHC.Integer.Type.modInteger_info:
	.quad	GHC.Integer.Type.modInteger_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S7IQ_srt+80


==================== Asm code ====================
2018-03-16 15:53:55.949926604 UTC

.section .text
.align 8
_c8E7:
_c8E7:
	movq %r14,%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8E7, .-_c8E7


==================== Asm code ====================
2018-03-16 15:53:55.950910458 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8E7_info:
	.quad	_c8E7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.956249864 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.quotInteger_closure
.type GHC.Integer.Type.quotInteger_closure, @object
GHC.Integer.Type.quotInteger_closure:
	.quad	GHC.Integer.Type.quotInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.95773841 UTC

.section .text
.align 8
.globl GHC.Integer.Type.quotInteger_entry
.type GHC.Integer.Type.quotInteger_entry, @object
GHC.Integer.Type.quotInteger_entry:
_c8Eu:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Ev
_c8Ew:
	leaq block_c8Es_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.quotRemInteger_entry
_c8Ev:
	leaq GHC.Integer.Type.quotInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.quotInteger_entry, .-GHC.Integer.Type.quotInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.958922441 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.quotInteger_info
.type GHC.Integer.Type.quotInteger_info, @object
GHC.Integer.Type.quotInteger_info:
	.quad	GHC.Integer.Type.quotInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.960698752 UTC

.section .text
.align 8
_c8Es:
_c8Es:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Es, .-_c8Es


==================== Asm code ====================
2018-03-16 15:53:55.961706941 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Es_info:
	.quad	_c8Es
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.966905979 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.remInteger_closure
.type GHC.Integer.Type.remInteger_closure, @object
GHC.Integer.Type.remInteger_closure:
	.quad	GHC.Integer.Type.remInteger_info


==================== Asm code ====================
2018-03-16 15:53:55.968328802 UTC

.section .text
.align 8
.globl GHC.Integer.Type.remInteger_entry
.type GHC.Integer.Type.remInteger_entry, @object
GHC.Integer.Type.remInteger_entry:
_c8EP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8EQ
_c8ER:
	leaq block_c8EN_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.quotRemInteger_entry
_c8EQ:
	leaq GHC.Integer.Type.remInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.remInteger_entry, .-GHC.Integer.Type.remInteger_entry


==================== Asm code ====================
2018-03-16 15:53:55.969525255 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.remInteger_info
.type GHC.Integer.Type.remInteger_info, @object
GHC.Integer.Type.remInteger_info:
	.quad	GHC.Integer.Type.remInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.970682622 UTC

.section .text
.align 8
_c8EN:
_c8EN:
	movq %r14,%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8EN, .-_c8EN


==================== Asm code ====================
2018-03-16 15:53:55.971708984 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8EN_info:
	.quad	_c8EN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.978226061 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.andDigits_closure
.type GHC.Integer.Type.andDigits_closure, @object
GHC.Integer.Type.andDigits_closure:
	.quad	GHC.Integer.Type.andDigits_info


==================== Asm code ====================
2018-03-16 15:53:55.979253462 UTC

.section .text
.align 8
.globl GHC.Integer.Type.andDigits_entry
.type GHC.Integer.Type.andDigits_entry, @object
GHC.Integer.Type.andDigits_entry:
_c8Ff:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Fg
_c8Fh:
	leaq block_c8F8_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8F8
_c8F9:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Fg:
	leaq GHC.Integer.Type.andDigits_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.andDigits_entry, .-GHC.Integer.Type.andDigits_entry


==================== Asm code ====================
2018-03-16 15:53:55.979996682 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.andDigits_info
.type GHC.Integer.Type.andDigits_info, @object
GHC.Integer.Type.andDigits_info:
	.quad	GHC.Integer.Type.andDigits_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.980959764 UTC

.section .text
.align 8
_c8F8:
_c8F8:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8Fc
_c8Fd:
	leaq block_c8FK_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8FK
_c8FM:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Fc:
	leaq block_c8Fk_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %rdx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8Fk
_c8Fm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8F8, .-_c8F8


==================== Asm code ====================
2018-03-16 15:53:55.98188599 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8F8_info:
	.quad	_c8F8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.982734912 UTC

.section .text
.align 8
_c8Fk:
_c8Fk:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8FA
_c8FH:
	leaq GHC.Integer.Type.None_closure+2(%rip),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8FA:
	leaq block_c8Fq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.Integer.Type.andDigits_entry
	.size _c8Fk, .-_c8Fk


==================== Asm code ====================
2018-03-16 15:53:55.983431465 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Fk_info:
	.quad	_c8Fk
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.984237029 UTC

.section .text
.align 8
_c8Fq:
_c8Fq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8FD
_c8FC:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rax
	andq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8FD:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Fq, .-_c8Fq


==================== Asm code ====================
2018-03-16 15:53:55.984991593 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Fq_info:
	.quad	_c8Fq
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.985808192 UTC

.section .text
.align 8
_c8FK:
_c8FK:
	leaq GHC.Integer.Type.None_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8FK, .-_c8FK


==================== Asm code ====================
2018-03-16 15:53:55.986466692 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8FK_info:
	.quad	_c8FK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.991955093 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.andDigitsOnes_closure
.type GHC.Integer.Type.andDigitsOnes_closure, @object
GHC.Integer.Type.andDigitsOnes_closure:
	.quad	GHC.Integer.Type.andDigitsOnes_info


==================== Asm code ====================
2018-03-16 15:53:55.99297716 UTC

.section .text
.align 8
.globl GHC.Integer.Type.andDigitsOnes_entry
.type GHC.Integer.Type.andDigitsOnes_entry, @object
GHC.Integer.Type.andDigitsOnes_entry:
_c8GF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8GG
_c8GH:
	leaq block_c8Gy_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8Gy
_c8Gz:
	movq (%rbx),%rax
	jmp *(%rax)
_c8GG:
	leaq GHC.Integer.Type.andDigitsOnes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.andDigitsOnes_entry, .-GHC.Integer.Type.andDigitsOnes_entry


==================== Asm code ====================
2018-03-16 15:53:55.993786664 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.andDigitsOnes_info
.type GHC.Integer.Type.andDigitsOnes_info, @object
GHC.Integer.Type.andDigitsOnes_info:
	.quad	GHC.Integer.Type.andDigitsOnes_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:55.994710186 UTC

.section .text
.align 8
_c8Gy:
_c8Gy:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8GC
_c8GD:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8GC:
	leaq block_c8GK_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %rdx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8GK
_c8GM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Gy, .-_c8Gy


==================== Asm code ====================
2018-03-16 15:53:55.995538978 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Gy_info:
	.quad	_c8Gy
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.996432743 UTC

.section .text
.align 8
_c8GK:
_c8GK:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8H0
_c8H7:
	leaq GHC.Integer.Type.None_closure+2(%rip),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8H0:
	leaq block_c8GQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.Integer.Type.andDigitsOnes_entry
	.size _c8GK, .-_c8GK


==================== Asm code ====================
2018-03-16 15:53:55.997171139 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8GK_info:
	.quad	_c8GK
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:55.998484573 UTC

.section .text
.align 8
_c8GQ:
_c8GQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8H3
_c8H2:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rax
	andq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8H3:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8GQ, .-_c8GQ


==================== Asm code ====================
2018-03-16 15:53:55.999250948 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8GQ_info:
	.quad	_c8GQ
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.00428469 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.orDigits_closure
.type GHC.Integer.Type.orDigits_closure, @object
GHC.Integer.Type.orDigits_closure:
	.quad	GHC.Integer.Type.orDigits_info


==================== Asm code ====================
2018-03-16 15:53:56.005410282 UTC

.section .text
.align 8
.globl GHC.Integer.Type.orDigits_entry
.type GHC.Integer.Type.orDigits_entry, @object
GHC.Integer.Type.orDigits_entry:
_c8HU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HV
_c8HW:
	leaq block_c8HN_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8HN
_c8HO:
	movq (%rbx),%rax
	jmp *(%rax)
_c8HV:
	leaq GHC.Integer.Type.orDigits_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.orDigits_entry, .-GHC.Integer.Type.orDigits_entry


==================== Asm code ====================
2018-03-16 15:53:56.006074137 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.orDigits_info
.type GHC.Integer.Type.orDigits_info, @object
GHC.Integer.Type.orDigits_info:
	.quad	GHC.Integer.Type.orDigits_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:56.007031926 UTC

.section .text
.align 8
_c8HN:
_c8HN:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8HR
_c8HS:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8HR:
	leaq block_c8HZ_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rdx,-8(%rbp)
	movq %rsi,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8HZ
_c8I1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8HN, .-_c8HN


==================== Asm code ====================
2018-03-16 15:53:56.007842355 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HN_info:
	.quad	_c8HN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.008720637 UTC

.section .text
.align 8
_c8HZ:
_c8HZ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8If
_c8Im:
	movq 24(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8If:
	movq 8(%rbp),%rax
	leaq block_c8I5_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.orDigits_entry
	.size _c8HZ, .-_c8HZ


==================== Asm code ====================
2018-03-16 15:53:56.009612664 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HZ_info:
	.quad	_c8HZ
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.010803709 UTC

.section .text
.align 8
_c8I5:
_c8I5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8Ii
_c8Ih:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	orq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Ii:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8I5, .-_c8I5


==================== Asm code ====================
2018-03-16 15:53:56.011623643 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8I5_info:
	.quad	_c8I5
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.026052285 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.orInteger_closure
.type GHC.Integer.Type.orInteger_closure, @object
GHC.Integer.Type.orInteger_closure:
	.quad	GHC.Integer.Type.orInteger_info


==================== Asm code ====================
2018-03-16 15:53:56.026992691 UTC

.section .text
.align 8
.globl GHC.Integer.Type.orInteger_entry
.type GHC.Integer.Type.orInteger_entry, @object
GHC.Integer.Type.orInteger_entry:
_c8Ja:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Jb
_u8Lv:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c8J0
_c8Jb:
	leaq GHC.Integer.Type.orInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.orInteger_entry, .-GHC.Integer.Type.orInteger_entry


==================== Asm code ====================
2018-03-16 15:53:56.027721745 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.orInteger_info
.type GHC.Integer.Type.orInteger_info, @object
GHC.Integer.Type.orInteger_info:
	.quad	GHC.Integer.Type.orInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:56.028598972 UTC

.section .text
.align 8
_c8J0:
_c8J0:
	movq (%rbp),%rax
	leaq block_c8J3_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8J3
_c8J4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8J0, .-_c8J0


==================== Asm code ====================
2018-03-16 15:53:56.029648181 UTC

.section .text
.align 8
_c8J3:
_c8J3:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	je _c8J8
_c8J7:
	leaq block_c8Jf_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8Jf
_c8Jh:
	movq (%rbx),%rax
	jmp *(%rax)
_c8J8:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8J3, .-_c8J3


==================== Asm code ====================
2018-03-16 15:53:56.030436399 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8J3_info:
	.quad	_c8J3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.031367417 UTC

.section .text
.align 8
_c8Jf:
_c8Jf:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	je _c8Ll
_c8Jo:
	leaq block_c8Jl_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8Jl
_c8Jp:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Ll:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Jf, .-_c8Jf


==================== Asm code ====================
2018-03-16 15:53:56.032132224 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Jf_info:
	.quad	_c8Jf
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.033698903 UTC

.section .text
.align 8
_c8Jl:
_c8Jl:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $2,%rcx
	jb _c8Jw
_c8Kv:
	leaq block_c8Kt_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rcx
	movq 6(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8Kt
_c8Kw:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Jw:
	leaq block_c8Jt_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8Jt
_c8Jx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Jl, .-_c8Jl


==================== Asm code ====================
2018-03-16 15:53:56.03452456 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Jl_info:
	.quad	_c8Jl
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.035306078 UTC

.section .text
.align 8
_c8Jt:
_c8Jt:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	jb _c8JI
_c8JY:
	leaq block_c8JO_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Integer.Type.onePositive_closure+1(%rip),%rsi
	movq 6(%rbx),%r14
	jmp GHC.Integer.Type.minusPositive_entry
_c8JI:
	movq 8(%rbp),%rax
	leaq block_c8JB_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.orDigits_entry
	.size _c8Jt, .-_c8Jt


==================== Asm code ====================
2018-03-16 15:53:56.03606348 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Jt_info:
	.quad	_c8Jt
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.036885442 UTC

.section .text
.align 8
_c8JB:
_c8JB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8JL
_c8JK:
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8JL:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8JB, .-_c8JB


==================== Asm code ====================
2018-03-16 15:53:56.037656756 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8JB_info:
	.quad	_c8JB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.038384633 UTC

.section .text
.align 8
_c8JO:
_c8JO:
	leaq block_c8JS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp GHC.Integer.Type.flipBitsDigits_entry
	.size _c8JO, .-_c8JO


==================== Asm code ====================
2018-03-16 15:53:56.039029725 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8JO_info:
	.quad	_c8JO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.039767933 UTC

.section .text
.align 8
_c8JS:
_c8JS:
	movq 8(%rbp),%rax
	leaq block_c8JW_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.andDigitsOnes_entry
	.size _c8JS, .-_c8JS


==================== Asm code ====================
2018-03-16 15:53:56.040439028 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8JS_info:
	.quad	_c8JS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.042299965 UTC

.section .text
.align 8
_c8JW:
_c8JW:
	leaq block_c8K4_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.$wsuccPositive_entry
	.size _c8JW, .-_c8JW


==================== Asm code ====================
2018-03-16 15:53:56.043288276 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8JW_info:
	.quad	_c8JW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.04414181 UTC

.section .text
.align 8
_c8K4:
_c8K4:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c8K5
	.size _c8K4, .-_c8K4


==================== Asm code ====================
2018-03-16 15:53:56.044787258 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8K4_info:
	.quad	_c8K4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.046105922 UTC

.section .text
.align 8
_c8K5:
_c8K5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8Kd
_c8Kc:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c8K9_info(%rip),%rax
	movq %rax,16(%rbp)
	leaq -15(%r12),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.removeZeroTails_entry
_c8Kd:
	movq $24,904(%r13)
	leaq block_c8K5_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8K5, .-_c8K5


==================== Asm code ====================
2018-03-16 15:53:56.046915255 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8K5_info:
	.quad	_c8K5
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.047778643 UTC

.section .text
.align 8
_c8K9:
_c8K9:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8Kj
_u8Lx:
	addq $8,%rbp
	jmp _c8Lh
_c8Km:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8Kj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8Km
_c8Kl:
	leaq GHC.Integer.Type.Negative_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8K9, .-_c8K9


==================== Asm code ====================
2018-03-16 15:53:56.048584582 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8K9_info:
	.quad	_c8K9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.049528959 UTC

.section .text
.align 8
_c8Kt:
_c8Kt:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	jb _c8KC
_c8KP:
	leaq block_c8KF_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Integer.Type.onePositive_closure+1(%rip),%rsi
	movq 6(%rbx),%r14
	jmp GHC.Integer.Type.minusPositive_entry
_c8KC:
	movq %rbx,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c8J0
	.size _c8Kt, .-_c8Kt


==================== Asm code ====================
2018-03-16 15:53:56.050306519 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Kt_info:
	.quad	_c8Kt
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.051124438 UTC

.section .text
.align 8
_c8KF:
_c8KF:
	movq 8(%rbp),%rax
	leaq block_c8KJ_info(%rip),%rcx
	movq %rcx,8(%rbp)
	leaq GHC.Integer.Type.onePositive_closure+1(%rip),%rsi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
	.size _c8KF, .-_c8KF


==================== Asm code ====================
2018-03-16 15:53:56.051857039 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8KF_info:
	.quad	_c8KF
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.052599986 UTC

.section .text
.align 8
_c8KJ:
_c8KJ:
	movq 8(%rbp),%rax
	leaq block_c8KN_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.andDigits_entry
	.size _c8KJ, .-_c8KJ


==================== Asm code ====================
2018-03-16 15:53:56.053391263 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8KJ_info:
	.quad	_c8KJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.054151044 UTC

.section .text
.align 8
_c8KN:
_c8KN:
	leaq block_c8KV_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.$wsuccPositive_entry
	.size _c8KN, .-_c8KN


==================== Asm code ====================
2018-03-16 15:53:56.054930269 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8KN_info:
	.quad	_c8KN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.055792412 UTC

.section .text
.align 8
_c8KV:
_c8KV:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c8KW
	.size _c8KV, .-_c8KV


==================== Asm code ====================
2018-03-16 15:53:56.05720472 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8KV_info:
	.quad	_c8KV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.058439482 UTC

.section .text
.align 8
_c8KW:
_c8KW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8L4
_c8L3:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c8L0_info(%rip),%rax
	movq %rax,16(%rbp)
	leaq -15(%r12),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.removeZeroTails_entry
_c8L4:
	movq $24,904(%r13)
	leaq block_c8KW_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8KW, .-_c8KW


==================== Asm code ====================
2018-03-16 15:53:56.059535777 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8KW_info:
	.quad	_c8KW
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.060832931 UTC

.section .text
.align 8
_c8L0:
_c8L0:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8La
_u8LA:
	addq $8,%rbp
	jmp _c8Lh
_c8Ld:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8La:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8Ld
_c8Lc:
	leaq GHC.Integer.Type.Negative_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8L0, .-_c8L0


==================== Asm code ====================
2018-03-16 15:53:56.062059956 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8L0_info:
	.quad	_c8L0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.063156787 UTC

.section .text
.align 8
_c8Lh:
_c8Lh:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8Lh, .-_c8Lh


==================== Asm code ====================
2018-03-16 15:53:56.0698984 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.mkInteger_f_closure
.type GHC.Integer.Type.mkInteger_f_closure, @object
GHC.Integer.Type.mkInteger_f_closure:
	.quad	GHC.Integer.Type.mkInteger_f_info


==================== Asm code ====================
2018-03-16 15:53:56.07090256 UTC

.section .text
.align 8
.globl GHC.Integer.Type.mkInteger_f_entry
.type GHC.Integer.Type.mkInteger_f_entry, @object
GHC.Integer.Type.mkInteger_f_entry:
_c8NR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NS
_c8NT:
	leaq block_c8NK_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8NK
_c8NL:
	movq (%rbx),%rax
	jmp *(%rax)
_c8NS:
	leaq GHC.Integer.Type.mkInteger_f_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.mkInteger_f_entry, .-GHC.Integer.Type.mkInteger_f_entry


==================== Asm code ====================
2018-03-16 15:53:56.072137258 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.mkInteger_f_info
.type GHC.Integer.Type.mkInteger_f_info, @object
GHC.Integer.Type.mkInteger_f_info:
	.quad	GHC.Integer.Type.mkInteger_f_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:56.073107302 UTC

.section .text
.align 8
_c8NK:
_c8NK:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8NO
_c8NP:
	leaq block_c8NZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8NZ
_c8O0:
	movq (%rbx),%rax
	jmp *(%rax)
_c8NO:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8NK, .-_c8NK


==================== Asm code ====================
2018-03-16 15:53:56.073979313 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NK_info:
	.quad	_c8NK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.074724968 UTC

.section .text
.align 8
_c8NZ:
_c8NZ:
	leaq block_c8O4_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.Integer.Type.mkInteger_f_entry
	.size _c8NZ, .-_c8NZ


==================== Asm code ====================
2018-03-16 15:53:56.075393075 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NZ_info:
	.quad	_c8NZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.076091616 UTC

.section .text
.align 8
_c8O4:
_c8O4:
	leaq block_c8O8_info(%rip),%rax
	movq %rax,(%rbp)
	movl $31,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _c8O4, .-_c8O4


==================== Asm code ====================
2018-03-16 15:53:56.076740258 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8O4_info:
	.quad	_c8O4
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.077524232 UTC

.section .text
.align 8
_c8O8:
_c8O8:
	leaq block_c8Oc_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c8O8, .-_c8O8


==================== Asm code ====================
2018-03-16 15:53:56.078217061 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8O8_info:
	.quad	_c8O8
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.078976913 UTC

.section .text
.align 8
_c8Oc:
_c8Oc:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.orInteger_entry
	.size _c8Oc, .-_c8Oc


==================== Asm code ====================
2018-03-16 15:53:56.079684207 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Oc_info:
	.quad	_c8Oc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.084004766 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.mkInteger_closure
.type GHC.Integer.Type.mkInteger_closure, @object
GHC.Integer.Type.mkInteger_closure:
	.quad	GHC.Integer.Type.mkInteger_info


==================== Asm code ====================
2018-03-16 15:53:56.085002725 UTC

.section .text
.align 8
.globl GHC.Integer.Type.mkInteger_entry
.type GHC.Integer.Type.mkInteger_entry, @object
GHC.Integer.Type.mkInteger_entry:
_c8P3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8P4
_c8P5:
	leaq block_c8OW_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8OW
_c8OX:
	movq (%rbx),%rax
	jmp *(%rax)
_c8P4:
	leaq GHC.Integer.Type.mkInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.mkInteger_entry, .-GHC.Integer.Type.mkInteger_entry


==================== Asm code ====================
2018-03-16 15:53:56.086129923 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.mkInteger_info
.type GHC.Integer.Type.mkInteger_info, @object
GHC.Integer.Type.mkInteger_info:
	.quad	GHC.Integer.Type.mkInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:56.086947125 UTC

.section .text
.align 8
_c8OW:
_c8OW:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8P0
_c8P1:
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.mkInteger_f_entry
_c8P0:
	leaq block_c8P8_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.mkInteger_f_entry
	.size _c8OW, .-_c8OW


==================== Asm code ====================
2018-03-16 15:53:56.087584445 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8OW_info:
	.quad	_c8OW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.08833639 UTC

.section .text
.align 8
_c8P8:
_c8P8:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
	.size _c8P8, .-_c8P8


==================== Asm code ====================
2018-03-16 15:53:56.088970204 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8P8_info:
	.quad	_c8P8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.102027758 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.andInteger_closure
.type GHC.Integer.Type.andInteger_closure, @object
GHC.Integer.Type.andInteger_closure:
	.quad	GHC.Integer.Type.andInteger_info


==================== Asm code ====================
2018-03-16 15:53:56.103078323 UTC

.section .text
.align 8
.globl GHC.Integer.Type.andInteger_entry
.type GHC.Integer.Type.andInteger_entry, @object
GHC.Integer.Type.andInteger_entry:
_c8PJ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8PK
_u8Se:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c8Pz
_c8PK:
	leaq GHC.Integer.Type.andInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.andInteger_entry, .-GHC.Integer.Type.andInteger_entry


==================== Asm code ====================
2018-03-16 15:53:56.104340097 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.andInteger_info
.type GHC.Integer.Type.andInteger_info, @object
GHC.Integer.Type.andInteger_info:
	.quad	GHC.Integer.Type.andInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:56.105283621 UTC

.section .text
.align 8
_c8Pz:
_c8Pz:
	movq (%rbp),%rax
	leaq block_c8PC_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8PC
_c8PD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Pz, .-_c8Pz


==================== Asm code ====================
2018-03-16 15:53:56.106230478 UTC

.section .text
.align 8
_c8PC:
_c8PC:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	je _c8PH
_c8PG:
	leaq block_c8PO_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8PO
_c8PQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c8PH:
	leaq block_c8S0_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8S0
_c8S2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8PC, .-_c8PC


==================== Asm code ====================
2018-03-16 15:53:56.107114885 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8PC_info:
	.quad	_c8PC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.107871696 UTC

.section .text
.align 8
_c8S0:
_c8S0:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8S0, .-_c8S0


==================== Asm code ====================
2018-03-16 15:53:56.108495194 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8S0_info:
	.quad	_c8S0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.109407241 UTC

.section .text
.align 8
_c8PO:
_c8PO:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _u8Sf
_c8PX:
	leaq block_c8PU_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8PU
_c8PY:
	movq (%rbx),%rax
	jmp *(%rax)
_u8Sf:
	addq $16,%rbp
	jmp _c8RX
	.size _c8PO, .-_c8PO


==================== Asm code ====================
2018-03-16 15:53:56.110223227 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8PO_info:
	.quad	_c8PO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.111181858 UTC

.section .text
.align 8
_c8PU:
_c8PU:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $2,%rcx
	jb _c8Q5
_c8R7:
	leaq block_c8R5_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rcx
	movq 6(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8R5
_c8R8:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Q5:
	leaq block_c8Q2_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8Q2
_c8Q6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8PU, .-_c8PU


==================== Asm code ====================
2018-03-16 15:53:56.111989907 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8PU_info:
	.quad	_c8PU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.112953561 UTC

.section .text
.align 8
_c8Q2:
_c8Q2:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	jb _c8Qd
_c8QI:
	leaq block_c8Qy_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Integer.Type.onePositive_closure+1(%rip),%rsi
	movq 6(%rbx),%r14
	jmp GHC.Integer.Type.minusPositive_entry
_c8Qd:
	movq 8(%rbp),%rax
	leaq block_c8Qa_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.andDigits_entry
	.size _c8Q2, .-_c8Q2


==================== Asm code ====================
2018-03-16 15:53:56.114203513 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Q2_info:
	.quad	_c8Q2
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.115441562 UTC

.section .text
.align 8
_c8Qa:
_c8Qa:
	leaq block_c8Qh_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.removeZeroTails_entry
	.size _c8Qa, .-_c8Qa


==================== Asm code ====================
2018-03-16 15:53:56.116159967 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Qa_info:
	.quad	_c8Qa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.117084757 UTC

.section .text
.align 8
_c8Qh:
_c8Qh:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8Qo
_u8Sg:
	addq $8,%rbp
	jmp _c8RX
_c8Qr:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8Qo:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8Qr
_c8Qq:
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8Qh, .-_c8Qh


==================== Asm code ====================
2018-03-16 15:53:56.117975733 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Qh_info:
	.quad	_c8Qh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.11871136 UTC

.section .text
.align 8
_c8Qy:
_c8Qy:
	leaq block_c8QC_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.flipBitsDigits_entry
	.size _c8Qy, .-_c8Qy


==================== Asm code ====================
2018-03-16 15:53:56.119382048 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Qy_info:
	.quad	_c8Qy
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.120151329 UTC

.section .text
.align 8
_c8QC:
_c8QC:
	movq 8(%rbp),%rax
	leaq block_c8QG_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.andDigitsOnes_entry
	.size _c8QC, .-_c8QC


==================== Asm code ====================
2018-03-16 15:53:56.120829314 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8QC_info:
	.quad	_c8QC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.121673314 UTC

.section .text
.align 8
_c8QG:
_c8QG:
	leaq block_c8QO_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.removeZeroTails_entry
	.size _c8QG, .-_c8QG


==================== Asm code ====================
2018-03-16 15:53:56.122335924 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8QG_info:
	.quad	_c8QG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.123219081 UTC

.section .text
.align 8
_c8QO:
_c8QO:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8QV
_u8Sh:
	addq $8,%rbp
	jmp _c8RX
_c8QY:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8QV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8QY
_c8QX:
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8QO, .-_c8QO


==================== Asm code ====================
2018-03-16 15:53:56.123965323 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8QO_info:
	.quad	_c8QO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.124770058 UTC

.section .text
.align 8
_c8R5:
_c8R5:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	jb _c8Re
_c8Rr:
	leaq block_c8Rh_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Integer.Type.onePositive_closure+1(%rip),%rsi
	movq 6(%rbx),%r14
	jmp GHC.Integer.Type.minusPositive_entry
_c8Re:
	movq %rbx,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c8Pz
	.size _c8R5, .-_c8R5


==================== Asm code ====================
2018-03-16 15:53:56.125559233 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8R5_info:
	.quad	_c8R5
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.126699364 UTC

.section .text
.align 8
_c8Rh:
_c8Rh:
	movq 8(%rbp),%rax
	leaq block_c8Rl_info(%rip),%rcx
	movq %rcx,8(%rbp)
	leaq GHC.Integer.Type.onePositive_closure+1(%rip),%rsi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
	.size _c8Rh, .-_c8Rh


==================== Asm code ====================
2018-03-16 15:53:56.12739237 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Rh_info:
	.quad	_c8Rh
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.128145174 UTC

.section .text
.align 8
_c8Rl:
_c8Rl:
	movq 8(%rbp),%rax
	leaq block_c8Rp_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.orDigits_entry
	.size _c8Rl, .-_c8Rl


==================== Asm code ====================
2018-03-16 15:53:56.128797975 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Rl_info:
	.quad	_c8Rl
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.129590199 UTC

.section .text
.align 8
_c8Rp:
_c8Rp:
	leaq block_c8Rx_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.$wsuccPositive_entry
	.size _c8Rp, .-_c8Rp


==================== Asm code ====================
2018-03-16 15:53:56.1302567 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Rp_info:
	.quad	_c8Rp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.130972223 UTC

.section .text
.align 8
_c8Rx:
_c8Rx:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c8Ry
	.size _c8Rx, .-_c8Rx


==================== Asm code ====================
2018-03-16 15:53:56.131657181 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Rx_info:
	.quad	_c8Rx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.132584534 UTC

.section .text
.align 8
_c8Ry:
_c8Ry:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8RG
_c8RF:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c8RC_info(%rip),%rax
	movq %rax,16(%rbp)
	leaq -15(%r12),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.removeZeroTails_entry
_c8RG:
	movq $24,904(%r13)
	leaq block_c8Ry_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8Ry, .-_c8Ry


==================== Asm code ====================
2018-03-16 15:53:56.133460011 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Ry_info:
	.quad	_c8Ry
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.134474264 UTC

.section .text
.align 8
_c8RC:
_c8RC:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8RM
_u8Sk:
	addq $8,%rbp
	jmp _c8RX
_c8RP:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8RM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8RP
_c8RO:
	leaq GHC.Integer.Type.Negative_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8RC, .-_c8RC


==================== Asm code ====================
2018-03-16 15:53:56.135239634 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8RC_info:
	.quad	_c8RC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.136148288 UTC

.section .text
.align 8
_c8RX:
_c8RX:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8RX, .-_c8RX


==================== Asm code ====================
2018-03-16 15:53:56.141217473 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.testBitInteger_closure
.type GHC.Integer.Type.testBitInteger_closure, @object
GHC.Integer.Type.testBitInteger_closure:
	.quad	GHC.Integer.Type.testBitInteger_info


==================== Asm code ====================
2018-03-16 15:53:56.142339513 UTC

.section .text
.align 8
.globl GHC.Integer.Type.testBitInteger_entry
.type GHC.Integer.Type.testBitInteger_entry, @object
GHC.Integer.Type.testBitInteger_entry:
_c8Uv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8UD
_c8UE:
	leaq block_c8Ut_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	leaq GHC.Integer.Type.oneInteger_closure+1(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c8UD:
	leaq GHC.Integer.Type.testBitInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.testBitInteger_entry, .-GHC.Integer.Type.testBitInteger_entry


==================== Asm code ====================
2018-03-16 15:53:56.143125735 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.testBitInteger_info
.type GHC.Integer.Type.testBitInteger_info, @object
GHC.Integer.Type.testBitInteger_info:
	.quad	GHC.Integer.Type.testBitInteger_entry
	.quad	0
	.quad	14
	.quad	8589934606


==================== Asm code ====================
2018-03-16 15:53:56.143898889 UTC

.section .text
.align 8
_c8Ut:
_c8Ut:
	movq 8(%rbp),%rax
	leaq block_c8Uy_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.andInteger_entry
	.size _c8Ut, .-_c8Ut


==================== Asm code ====================
2018-03-16 15:53:56.144597322 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Ut_info:
	.quad	_c8Ut
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.145452301 UTC

.section .text
.align 8
_c8Uy:
_c8Uy:
	leaq block_c8UC_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.neqInteger#_entry
	.size _c8Uy, .-_c8Uy


==================== Asm code ====================
2018-03-16 15:53:56.146197991 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Uy_info:
	.quad	_c8Uy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.147071448 UTC

.section .text
.align 8
_c8UC:
_c8UC:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rax
	movq (%rbx,%rax,1),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8UC, .-_c8UC


==================== Asm code ====================
2018-03-16 15:53:56.147802914 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8UC_info:
	.quad	_c8UC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.154895816 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.xorDigits_closure
.type GHC.Integer.Type.xorDigits_closure, @object
GHC.Integer.Type.xorDigits_closure:
	.quad	GHC.Integer.Type.xorDigits_info


==================== Asm code ====================
2018-03-16 15:53:56.15595632 UTC

.section .text
.align 8
.globl GHC.Integer.Type.xorDigits_entry
.type GHC.Integer.Type.xorDigits_entry, @object
GHC.Integer.Type.xorDigits_entry:
_c8Vg:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Vh
_c8Vi:
	leaq block_c8V9_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8V9
_c8Va:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Vh:
	leaq GHC.Integer.Type.xorDigits_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.xorDigits_entry, .-GHC.Integer.Type.xorDigits_entry


==================== Asm code ====================
2018-03-16 15:53:56.15670956 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.xorDigits_info
.type GHC.Integer.Type.xorDigits_info, @object
GHC.Integer.Type.xorDigits_info:
	.quad	GHC.Integer.Type.xorDigits_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:56.157710649 UTC

.section .text
.align 8
_c8V9:
_c8V9:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8Vd
_c8Ve:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8Vd:
	leaq block_c8Vl_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rdx,-8(%rbp)
	movq %rsi,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8Vl
_c8Vn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8V9, .-_c8V9


==================== Asm code ====================
2018-03-16 15:53:56.15851198 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V9_info:
	.quad	_c8V9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.159455226 UTC

.section .text
.align 8
_c8Vl:
_c8Vl:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8VB
_c8VI:
	movq 24(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8VB:
	movq 8(%rbp),%rax
	leaq block_c8Vr_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.xorDigits_entry
	.size _c8Vl, .-_c8Vl


==================== Asm code ====================
2018-03-16 15:53:56.160287705 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vl_info:
	.quad	_c8Vl
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.161625772 UTC

.section .text
.align 8
_c8Vr:
_c8Vr:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8VE
_c8VD:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	xorq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8VE:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Vr, .-_c8Vr


==================== Asm code ====================
2018-03-16 15:53:56.16238008 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vr_info:
	.quad	_c8Vr
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.178122719 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.xorInteger_closure
.type GHC.Integer.Type.xorInteger_closure, @object
GHC.Integer.Type.xorInteger_closure:
	.quad	GHC.Integer.Type.xorInteger_info


==================== Asm code ====================
2018-03-16 15:53:56.179582643 UTC

.section .text
.align 8
.globl GHC.Integer.Type.xorInteger_entry
.type GHC.Integer.Type.xorInteger_entry, @object
GHC.Integer.Type.xorInteger_entry:
_c8Ww:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Wx
_u8YQ:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c8Wm
_c8Wx:
	leaq GHC.Integer.Type.xorInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.xorInteger_entry, .-GHC.Integer.Type.xorInteger_entry


==================== Asm code ====================
2018-03-16 15:53:56.18076614 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.xorInteger_info
.type GHC.Integer.Type.xorInteger_info, @object
GHC.Integer.Type.xorInteger_info:
	.quad	GHC.Integer.Type.xorInteger_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:56.182075648 UTC

.section .text
.align 8
_c8Wm:
_c8Wm:
	movq (%rbp),%rax
	leaq block_c8Wp_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8Wp
_c8Wq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Wm, .-_c8Wm


==================== Asm code ====================
2018-03-16 15:53:56.183450977 UTC

.section .text
.align 8
_c8Wp:
_c8Wp:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	je _c8Wu
_c8Wt:
	leaq block_c8WB_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8WB
_c8WD:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Wu:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Wp, .-_c8Wp


==================== Asm code ====================
2018-03-16 15:53:56.184679695 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wp_info:
	.quad	_c8Wp
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.186707691 UTC

.section .text
.align 8
_c8WB:
_c8WB:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	je _c8YF
_c8WK:
	leaq block_c8WH_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8WH
_c8WL:
	movq (%rbx),%rax
	jmp *(%rax)
_c8YF:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WB, .-_c8WB


==================== Asm code ====================
2018-03-16 15:53:56.187849702 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WB_info:
	.quad	_c8WB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.189218572 UTC

.section .text
.align 8
_c8WH:
_c8WH:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $2,%rcx
	jb _c8WS
_c8XX:
	leaq block_c8XV_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rcx
	movq 6(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8XV
_c8XY:
	movq (%rbx),%rax
	jmp *(%rax)
_c8WS:
	leaq block_c8WP_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8WP
_c8WT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WH, .-_c8WH


==================== Asm code ====================
2018-03-16 15:53:56.191182025 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WH_info:
	.quad	_c8WH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.192408502 UTC

.section .text
.align 8
_c8WP:
_c8WP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	jb _c8X0
_c8Xr:
	leaq block_c8Xl_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Integer.Type.onePositive_closure+1(%rip),%rsi
	movq 6(%rbx),%r14
	jmp GHC.Integer.Type.minusPositive_entry
_c8X0:
	movq 8(%rbp),%rax
	leaq block_c8WX_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.xorDigits_entry
	.size _c8WP, .-_c8WP


==================== Asm code ====================
2018-03-16 15:53:56.193776675 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WP_info:
	.quad	_c8WP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.194491889 UTC

.section .text
.align 8
_c8WX:
_c8WX:
	leaq block_c8X4_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.removeZeroTails_entry
	.size _c8WX, .-_c8WX


==================== Asm code ====================
2018-03-16 15:53:56.195170052 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WX_info:
	.quad	_c8WX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.196040747 UTC

.section .text
.align 8
_c8X4:
_c8X4:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8Xb
_u8YR:
	addq $8,%rbp
	jmp _c8YB
_c8Xe:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8Xb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8Xe
_c8Xd:
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8X4, .-_c8X4


==================== Asm code ====================
2018-03-16 15:53:56.196787712 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8X4_info:
	.quad	_c8X4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.197566596 UTC

.section .text
.align 8
_c8Xl:
_c8Xl:
	movq 8(%rbp),%rax
	leaq block_c8Xp_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.xorDigits_entry
	.size _c8Xl, .-_c8Xl


==================== Asm code ====================
2018-03-16 15:53:56.198233307 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Xl_info:
	.quad	_c8Xl
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.199031712 UTC

.section .text
.align 8
_c8Xp:
_c8Xp:
	leaq block_c8Xw_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.$wsuccPositive_entry
	.size _c8Xp, .-_c8Xp


==================== Asm code ====================
2018-03-16 15:53:56.199676844 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Xp_info:
	.quad	_c8Xp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.200409367 UTC

.section .text
.align 8
_c8Xw:
_c8Xw:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c8Xx
	.size _c8Xw, .-_c8Xw


==================== Asm code ====================
2018-03-16 15:53:56.201111383 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Xw_info:
	.quad	_c8Xw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.202422757 UTC

.section .text
.align 8
_c8Xx:
_c8Xx:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8XF
_c8XE:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c8XB_info(%rip),%rax
	movq %rax,16(%rbp)
	leaq -15(%r12),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.removeZeroTails_entry
_c8XF:
	movq $24,904(%r13)
	leaq block_c8Xx_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8Xx, .-_c8Xx


==================== Asm code ====================
2018-03-16 15:53:56.203214299 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Xx_info:
	.quad	_c8Xx
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.204119195 UTC

.section .text
.align 8
_c8XB:
_c8XB:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8XL
_u8YT:
	addq $8,%rbp
	jmp _c8YB
_c8XO:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8XL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8XO
_c8XN:
	leaq GHC.Integer.Type.Negative_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8XB, .-_c8XB


==================== Asm code ====================
2018-03-16 15:53:56.204864459 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8XB_info:
	.quad	_c8XB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.205781701 UTC

.section .text
.align 8
_c8XV:
_c8XV:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $2,%rax
	jb _c8Y4
_c8Yh:
	leaq block_c8Y7_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Integer.Type.onePositive_closure+1(%rip),%rsi
	movq 6(%rbx),%r14
	jmp GHC.Integer.Type.minusPositive_entry
_c8Y4:
	movq %rbx,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c8Wm
	.size _c8XV, .-_c8XV


==================== Asm code ====================
2018-03-16 15:53:56.206564205 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8XV_info:
	.quad	_c8XV
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.207366613 UTC

.section .text
.align 8
_c8Y7:
_c8Y7:
	movq 8(%rbp),%rax
	leaq block_c8Yb_info(%rip),%rcx
	movq %rcx,8(%rbp)
	leaq GHC.Integer.Type.onePositive_closure+1(%rip),%rsi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.minusPositive_entry
	.size _c8Y7, .-_c8Y7


==================== Asm code ====================
2018-03-16 15:53:56.208127254 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Y7_info:
	.quad	_c8Y7
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.208887785 UTC

.section .text
.align 8
_c8Yb:
_c8Yb:
	movq 8(%rbp),%rax
	leaq block_c8Yf_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.xorDigits_entry
	.size _c8Yb, .-_c8Yb


==================== Asm code ====================
2018-03-16 15:53:56.209849106 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Yb_info:
	.quad	_c8Yb
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.210606197 UTC

.section .text
.align 8
_c8Yf:
_c8Yf:
	leaq block_c8Yn_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.removeZeroTails_entry
	.size _c8Yf, .-_c8Yf


==================== Asm code ====================
2018-03-16 15:53:56.211279559 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Yf_info:
	.quad	_c8Yf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.212640776 UTC

.section .text
.align 8
_c8Yn:
_c8Yn:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8Yu
_u8YV:
	addq $8,%rbp
	jmp _c8YB
_c8Yx:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8Yu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8Yx
_c8Yw:
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8Yn, .-_c8Yn


==================== Asm code ====================
2018-03-16 15:53:56.213552701 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Yn_info:
	.quad	_c8Yn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.214308999 UTC

.section .text
.align 8
_c8YB:
_c8YB:
	leaq GHC.Integer.Type.Naught_closure+3(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8YB, .-_c8YB


==================== Asm code ====================
2018-03-16 15:53:56.216349194 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$trModule4_bytes
.type GHC.Integer.Type.$trModule4_bytes, @object
GHC.Integer.Type.$trModule4_bytes:
	.asciz "integer-simple"


==================== Asm code ====================
2018-03-16 15:53:56.218517958 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$trModule3_closure
.type GHC.Integer.Type.$trModule3_closure, @object
GHC.Integer.Type.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:53:56.220522226 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$trModule2_bytes
.type GHC.Integer.Type.$trModule2_bytes, @object
GHC.Integer.Type.$trModule2_bytes:
	.asciz "GHC.Integer.Type"


==================== Asm code ====================
2018-03-16 15:53:56.222928366 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$trModule1_closure
.type GHC.Integer.Type.$trModule1_closure, @object
GHC.Integer.Type.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:53:56.224919747 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$trModule_closure
.type GHC.Integer.Type.$trModule_closure, @object
GHC.Integer.Type.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Integer.Type.$trModule3_closure+1
	.quad	GHC.Integer.Type.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.227082615 UTC

.section .data
.align 8
.align 1
$krep_r3Bp_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:53:56.229112667 UTC

.section .data
.align 8
.align 1
$krep1_r3Bq_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcWord#_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.231077438 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tcDigits2_bytes
.type GHC.Integer.Type.$tcDigits2_bytes, @object
GHC.Integer.Type.$tcDigits2_bytes:
	.asciz "Digits"


==================== Asm code ====================
2018-03-16 15:53:56.233531454 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tcDigits1_closure
.type GHC.Integer.Type.$tcDigits1_closure, @object
GHC.Integer.Type.$tcDigits1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tcDigits2_bytes


==================== Asm code ====================
2018-03-16 15:53:56.235667042 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tcDigits_closure
.type GHC.Integer.Type.$tcDigits_closure, @object
GHC.Integer.Type.$tcDigits_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tcDigits1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-1798881422218972136
	.quad	7069031713090282797
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.237826109 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'None1_closure
.type GHC.Integer.Type.$tc'None1_closure, @object
GHC.Integer.Type.$tc'None1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Integer.Type.$tcDigits_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.239899659 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tc'None3_bytes
.type GHC.Integer.Type.$tc'None3_bytes, @object
GHC.Integer.Type.$tc'None3_bytes:
	.asciz "'None"


==================== Asm code ====================
2018-03-16 15:53:56.243066354 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'None2_closure
.type GHC.Integer.Type.$tc'None2_closure, @object
GHC.Integer.Type.$tc'None2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tc'None3_bytes


==================== Asm code ====================
2018-03-16 15:53:56.245187194 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'None_closure
.type GHC.Integer.Type.$tc'None_closure, @object
GHC.Integer.Type.$tc'None_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tc'None2_closure+1
	.quad	GHC.Integer.Type.$tc'None1_closure+1
	.quad	903679638320298226
	.quad	-5469346920408273056
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.247285038 UTC

.section .data
.align 8
.align 1
$krep2_r3Br_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Integer.Type.$tc'None1_closure+1
	.quad	GHC.Integer.Type.$tc'None1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.249300496 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Some1_closure
.type GHC.Integer.Type.$tc'Some1_closure, @object
GHC.Integer.Type.$tc'Some1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_r3Bq_closure+1
	.quad	$krep2_r3Br_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.251102017 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tc'Some3_bytes
.type GHC.Integer.Type.$tc'Some3_bytes, @object
GHC.Integer.Type.$tc'Some3_bytes:
	.asciz "'Some"


==================== Asm code ====================
2018-03-16 15:53:56.253705208 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Some2_closure
.type GHC.Integer.Type.$tc'Some2_closure, @object
GHC.Integer.Type.$tc'Some2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tc'Some3_bytes


==================== Asm code ====================
2018-03-16 15:53:56.255721075 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Some_closure
.type GHC.Integer.Type.$tc'Some_closure, @object
GHC.Integer.Type.$tc'Some_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tc'Some2_closure+1
	.quad	GHC.Integer.Type.$tc'Some1_closure+4
	.quad	6045911439621864566
	.quad	-8743870717774539228
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.25768575 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tcInteger2_bytes
.type GHC.Integer.Type.$tcInteger2_bytes, @object
GHC.Integer.Type.$tcInteger2_bytes:
	.asciz "Integer"


==================== Asm code ====================
2018-03-16 15:53:56.259640325 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tcInteger1_closure
.type GHC.Integer.Type.$tcInteger1_closure, @object
GHC.Integer.Type.$tcInteger1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tcInteger2_bytes


==================== Asm code ====================
2018-03-16 15:53:56.262119662 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tcInteger_closure
.type GHC.Integer.Type.$tcInteger_closure, @object
GHC.Integer.Type.$tcInteger_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tcInteger1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-6186330285685223188
	.quad	-8863123377027041700
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.264142488 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Naught1_closure
.type GHC.Integer.Type.$tc'Naught1_closure, @object
GHC.Integer.Type.$tc'Naught1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Integer.Type.$tcInteger_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.266164611 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tc'Naught3_bytes
.type GHC.Integer.Type.$tc'Naught3_bytes, @object
GHC.Integer.Type.$tc'Naught3_bytes:
	.asciz "'Naught"


==================== Asm code ====================
2018-03-16 15:53:56.268176073 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Naught2_closure
.type GHC.Integer.Type.$tc'Naught2_closure, @object
GHC.Integer.Type.$tc'Naught2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tc'Naught3_bytes


==================== Asm code ====================
2018-03-16 15:53:56.270863165 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Naught_closure
.type GHC.Integer.Type.$tc'Naught_closure, @object
GHC.Integer.Type.$tc'Naught_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tc'Naught2_closure+1
	.quad	GHC.Integer.Type.$tc'Naught1_closure+1
	.quad	7287704174224038176
	.quad	776397532388787230
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.273300642 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Negative1_closure
.type GHC.Integer.Type.$tc'Negative1_closure, @object
GHC.Integer.Type.$tc'Negative1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Integer.Type.$tc'None1_closure+1
	.quad	GHC.Integer.Type.$tc'Naught1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.275261132 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tc'Positive2_bytes
.type GHC.Integer.Type.$tc'Positive2_bytes, @object
GHC.Integer.Type.$tc'Positive2_bytes:
	.asciz "'Positive"


==================== Asm code ====================
2018-03-16 15:53:56.277395308 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Positive1_closure
.type GHC.Integer.Type.$tc'Positive1_closure, @object
GHC.Integer.Type.$tc'Positive1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tc'Positive2_bytes


==================== Asm code ====================
2018-03-16 15:53:56.279503735 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Positive_closure
.type GHC.Integer.Type.$tc'Positive_closure, @object
GHC.Integer.Type.$tc'Positive_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tc'Positive1_closure+1
	.quad	GHC.Integer.Type.$tc'Negative1_closure+4
	.quad	6887932004110746796
	.quad	-9054853933958989681
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.282002645 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tc'Negative3_bytes
.type GHC.Integer.Type.$tc'Negative3_bytes, @object
GHC.Integer.Type.$tc'Negative3_bytes:
	.asciz "'Negative"


==================== Asm code ====================
2018-03-16 15:53:56.284085499 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Negative2_closure
.type GHC.Integer.Type.$tc'Negative2_closure, @object
GHC.Integer.Type.$tc'Negative2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tc'Negative3_bytes


==================== Asm code ====================
2018-03-16 15:53:56.286246667 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Negative_closure
.type GHC.Integer.Type.$tc'Negative_closure, @object
GHC.Integer.Type.$tc'Negative_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tc'Negative2_closure+1
	.quad	GHC.Integer.Type.$tc'Negative1_closure+4
	.quad	4010847856516363452
	.quad	-2822385425371619160
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.28819187 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tcList2_bytes
.type GHC.Integer.Type.$tcList2_bytes, @object
GHC.Integer.Type.$tcList2_bytes:
	.asciz "List"


==================== Asm code ====================
2018-03-16 15:53:56.290203809 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tcList1_closure
.type GHC.Integer.Type.$tcList1_closure, @object
GHC.Integer.Type.$tcList1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tcList2_bytes


==================== Asm code ====================
2018-03-16 15:53:56.292803063 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tcList_closure
.type GHC.Integer.Type.$tcList_closure, @object
GHC.Integer.Type.$tcList_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tcList1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	732340346576824023
	.quad	-8793628142119563116
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.294883006 UTC

.section .data
.align 8
.align 1
$krep3_r3Bs_closure:
	.quad	:_con_info
	.quad	$krep_r3Bp_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.296911969 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Nil1_closure
.type GHC.Integer.Type.$tc'Nil1_closure, @object
GHC.Integer.Type.$tc'Nil1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Integer.Type.$tcList_closure+1
	.quad	$krep3_r3Bs_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.29889487 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tc'Nil3_bytes
.type GHC.Integer.Type.$tc'Nil3_bytes, @object
GHC.Integer.Type.$tc'Nil3_bytes:
	.asciz "'Nil"


==================== Asm code ====================
2018-03-16 15:53:56.30156866 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Nil2_closure
.type GHC.Integer.Type.$tc'Nil2_closure, @object
GHC.Integer.Type.$tc'Nil2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tc'Nil3_bytes


==================== Asm code ====================
2018-03-16 15:53:56.303580569 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Nil_closure
.type GHC.Integer.Type.$tc'Nil_closure, @object
GHC.Integer.Type.$tc'Nil_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tc'Nil2_closure+1
	.quad	GHC.Integer.Type.$tc'Nil1_closure+1
	.quad	-4908158942199606165
	.quad	-9080427985304105481
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.305707782 UTC

.section .data
.align 8
.align 1
$krep4_r3Bt_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Integer.Type.$tc'Nil1_closure+1
	.quad	GHC.Integer.Type.$tc'Nil1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.307716683 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Cons1_closure
.type GHC.Integer.Type.$tc'Cons1_closure, @object
GHC.Integer.Type.$tc'Cons1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r3Bp_closure+2
	.quad	$krep4_r3Bt_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.310093141 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tc'Cons3_bytes
.type GHC.Integer.Type.$tc'Cons3_bytes, @object
GHC.Integer.Type.$tc'Cons3_bytes:
	.asciz "'Cons"


==================== Asm code ====================
2018-03-16 15:53:56.312200297 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Cons2_closure
.type GHC.Integer.Type.$tc'Cons2_closure, @object
GHC.Integer.Type.$tc'Cons2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tc'Cons3_bytes


==================== Asm code ====================
2018-03-16 15:53:56.314426329 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'Cons_closure
.type GHC.Integer.Type.$tc'Cons_closure, @object
GHC.Integer.Type.$tc'Cons_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tc'Cons2_closure+1
	.quad	GHC.Integer.Type.$tc'Cons1_closure+4
	.quad	3906777924842222150
	.quad	5463288556346842885
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.316486214 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tcDigitsOnes2_bytes
.type GHC.Integer.Type.$tcDigitsOnes2_bytes, @object
GHC.Integer.Type.$tcDigitsOnes2_bytes:
	.asciz "DigitsOnes"


==================== Asm code ====================
2018-03-16 15:53:56.318512449 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tcDigitsOnes1_closure
.type GHC.Integer.Type.$tcDigitsOnes1_closure, @object
GHC.Integer.Type.$tcDigitsOnes1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tcDigitsOnes2_bytes


==================== Asm code ====================
2018-03-16 15:53:56.321196465 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tcDigitsOnes_closure
.type GHC.Integer.Type.$tcDigitsOnes_closure, @object
GHC.Integer.Type.$tcDigitsOnes_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tcDigitsOnes1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	4554239703586147919
	.quad	6957361150436389790
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.323321912 UTC

.section .data
.align 8
.align 1
$krep5_r3Bu_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Integer.Type.$tcDigitsOnes_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.325323467 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'DigitsOnes1_closure
.type GHC.Integer.Type.$tc'DigitsOnes1_closure, @object
GHC.Integer.Type.$tc'DigitsOnes1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Integer.Type.$tc'None1_closure+1
	.quad	$krep5_r3Bu_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.327264459 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Integer.Type.$tc'DigitsOnes3_bytes
.type GHC.Integer.Type.$tc'DigitsOnes3_bytes, @object
GHC.Integer.Type.$tc'DigitsOnes3_bytes:
	.asciz "'DigitsOnes"


==================== Asm code ====================
2018-03-16 15:53:56.329742193 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'DigitsOnes2_closure
.type GHC.Integer.Type.$tc'DigitsOnes2_closure, @object
GHC.Integer.Type.$tc'DigitsOnes2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Integer.Type.$tc'DigitsOnes3_bytes


==================== Asm code ====================
2018-03-16 15:53:56.33189628 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.$tc'DigitsOnes_closure
.type GHC.Integer.Type.$tc'DigitsOnes_closure, @object
GHC.Integer.Type.$tc'DigitsOnes_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Integer.Type.$trModule_closure+1
	.quad	GHC.Integer.Type.$tc'DigitsOnes2_closure+1
	.quad	GHC.Integer.Type.$tc'DigitsOnes1_closure+4
	.quad	-3235633334052056601
	.quad	1682512192113792266
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:53:56.334732886 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.encodeDouble#_closure
.type GHC.Integer.Type.encodeDouble#_closure, @object
GHC.Integer.Type.encodeDouble#_closure:
	.quad	GHC.Integer.Type.encodeDouble#_info


==================== Asm code ====================
2018-03-16 15:53:56.33567116 UTC

.section .text
.align 8
.globl GHC.Integer.Type.encodeDouble#_entry
.type GHC.Integer.Type.encodeDouble#_entry, @object
GHC.Integer.Type.encodeDouble#_entry:
_c91R:
	subq $8,%rsp
	movq %r14,%rdi
	xorl %eax,%eax
	call __word_encodeDouble@plt
	addq $8,%rsp
	movsd %xmm0,%xmm1
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.encodeDouble#_entry, .-GHC.Integer.Type.encodeDouble#_entry


==================== Asm code ====================
2018-03-16 15:53:56.33637485 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.encodeDouble#_info
.type GHC.Integer.Type.encodeDouble#_info, @object
GHC.Integer.Type.encodeDouble#_info:
	.quad	GHC.Integer.Type.encodeDouble#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:53:56.341538759 UTC

.section .data
.align 8
.align 1
f_r3Bv_closure:
	.quad	f_r3Bv_info


==================== Asm code ====================
2018-03-16 15:53:56.342357232 UTC

.section .text
.align 8
f_r3Bv_slow:
_c921:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movsd (%rbp),%xmm1
	addq $24,%rbp
	jmp f_r3Bv_entry
	.size f_r3Bv_slow, .-f_r3Bv_slow


==================== Asm code ====================
2018-03-16 15:53:56.343251842 UTC

.section .text
.align 8
f_r3Bv_entry:
_c92c:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c92d
_u92s:
	movsd %xmm1,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c922
_c92d:
	leaq f_r3Bv_closure(%rip),%rbx
	movsd %xmm1,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp *-8(%r13)
	.size f_r3Bv_entry, .-f_r3Bv_entry


==================== Asm code ====================
2018-03-16 15:53:56.343995258 UTC

.section .data.rel.ro
.align 8
.align 1
f_r3Bv_info:
	.quad	f_r3Bv_entry
	.quad	0
	.quad	14
	.quad	12884901888
	.quad	0
	.quad	323
	.quad	f_r3Bv_slow


==================== Asm code ====================
2018-03-16 15:53:56.344825801 UTC

.section .text
.align 8
_c922:
_c922:
	leaq block_c925_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c925
_c926:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c922, .-_c922


==================== Asm code ====================
2018-03-16 15:53:56.345932197 UTC

.section .text
.align 8
_c925:
_c925:
	movsd 8(%rbp),%xmm0
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c929
_c92a:
	movsd %xmm0,%xmm1
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c929:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rcx
	subq $8,%rsp
	movq %rax,%rsi
	movq 15(%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movsd %xmm0,72(%rsp)
	movq %rcx,%r14
	call __word_encodeDouble@plt
	addq $8,%rsp
	movsd 64(%rsp),%xmm1
	addsd %xmm0,%xmm1
	movsd %xmm1,8(%rbp)
	movq %r14,16(%rbp)
	leaq 64(%rbx),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c922
	.size _c925, .-_c925


==================== Asm code ====================
2018-03-16 15:53:56.34676244 UTC

.section .data.rel.ro
.align 8
.align 1
block_c925_info:
	.quad	_c925
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.351851386 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.encodeDoubleInteger_closure
.type GHC.Integer.Type.encodeDoubleInteger_closure, @object
GHC.Integer.Type.encodeDoubleInteger_closure:
	.quad	GHC.Integer.Type.encodeDoubleInteger_info


==================== Asm code ====================
2018-03-16 15:53:56.352819972 UTC

.section .text
.align 8
.globl GHC.Integer.Type.encodeDoubleInteger_entry
.type GHC.Integer.Type.encodeDoubleInteger_entry, @object
GHC.Integer.Type.encodeDoubleInteger_entry:
_c933:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c934
_c935:
	leaq block_c92V_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c92V
_c92W:
	movq (%rbx),%rax
	jmp *(%rax)
_c934:
	leaq GHC.Integer.Type.encodeDoubleInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.encodeDoubleInteger_entry, .-GHC.Integer.Type.encodeDoubleInteger_entry


==================== Asm code ====================
2018-03-16 15:53:56.354166073 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.encodeDoubleInteger_info
.type GHC.Integer.Type.encodeDoubleInteger_info, @object
GHC.Integer.Type.encodeDoubleInteger_info:
	.quad	GHC.Integer.Type.encodeDoubleInteger_entry
	.quad	0
	.quad	14
	.quad	8589934606


==================== Asm code ====================
2018-03-16 15:53:56.355166935 UTC

.section .text
.align 8
_c92V:
_c92V:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u93o
_c931:
	xorpd %xmm1,%xmm1
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c93j:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_u93o:
	movq 8(%rbp),%rcx
	cmpq $2,%rax
	jb _c92Z
_c930:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c93j
_c93i:
	movq 6(%rbx),%rax
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq block_c93c_info(%rip),%rax
	movq %rax,8(%rbp)
	movq %rcx,%rsi
	leaq -7(%r12),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
_c92Z:
	movq %rcx,%rsi
	movq 7(%rbx),%r14
	xorpd %xmm1,%xmm1
	addq $16,%rbp
	jmp f_r3Bv_entry
	.size _c92V, .-_c92V


==================== Asm code ====================
2018-03-16 15:53:56.356018657 UTC

.section .data.rel.ro
.align 8
.align 1
block_c92V_info:
	.quad	_c92V
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.356799946 UTC

.section .text
.align 8
_c93c:
_c93c:
	movsd _n93F(%rip),%xmm0
	xorpd %xmm0,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c93c, .-_c93c
.section .rodata
.align 8
.align 8
_n93F:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:53:56.357552523 UTC

.section .data.rel.ro
.align 8
.align 1
block_c93c_info:
	.quad	_c93c
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.360236895 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.encodeFloat#_closure
.type GHC.Integer.Type.encodeFloat#_closure, @object
GHC.Integer.Type.encodeFloat#_closure:
	.quad	GHC.Integer.Type.encodeFloat#_info


==================== Asm code ====================
2018-03-16 15:53:56.361116858 UTC

.section .text
.align 8
.globl GHC.Integer.Type.encodeFloat#_entry
.type GHC.Integer.Type.encodeFloat#_entry, @object
GHC.Integer.Type.encodeFloat#_entry:
_c93R:
	subq $8,%rsp
	movq %r14,%rdi
	xorl %eax,%eax
	call __word_encodeFloat@plt
	addq $8,%rsp
	movss %xmm0,%xmm1
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.encodeFloat#_entry, .-GHC.Integer.Type.encodeFloat#_entry


==================== Asm code ====================
2018-03-16 15:53:56.361905994 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.encodeFloat#_info
.type GHC.Integer.Type.encodeFloat#_info, @object
GHC.Integer.Type.encodeFloat#_info:
	.quad	GHC.Integer.Type.encodeFloat#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:53:56.366680975 UTC

.section .data
.align 8
.align 1
f1_r3Bw_closure:
	.quad	f1_r3Bw_info


==================== Asm code ====================
2018-03-16 15:53:56.367499408 UTC

.section .text
.align 8
f1_r3Bw_slow:
_c941:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movss (%rbp),%xmm1
	addq $24,%rbp
	jmp f1_r3Bw_entry
	.size f1_r3Bw_slow, .-f1_r3Bw_slow


==================== Asm code ====================
2018-03-16 15:53:56.368382988 UTC

.section .text
.align 8
f1_r3Bw_entry:
_c94c:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c94d
_u94s:
	movss %xmm1,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c942
_c94d:
	leaq f1_r3Bw_closure(%rip),%rbx
	movss %xmm1,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp *-8(%r13)
	.size f1_r3Bw_entry, .-f1_r3Bw_entry


==================== Asm code ====================
2018-03-16 15:53:56.3691107 UTC

.section .data.rel.ro
.align 8
.align 1
f1_r3Bw_info:
	.quad	f1_r3Bw_entry
	.quad	0
	.quad	14
	.quad	12884901888
	.quad	0
	.quad	323
	.quad	f1_r3Bw_slow


==================== Asm code ====================
2018-03-16 15:53:56.369976064 UTC

.section .text
.align 8
_c942:
_c942:
	leaq block_c945_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c945
_c946:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c942, .-_c942


==================== Asm code ====================
2018-03-16 15:53:56.370972823 UTC

.section .text
.align 8
_c945:
_c945:
	movss 8(%rbp),%xmm0
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c949
_c94a:
	movss %xmm0,%xmm1
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c949:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rcx
	subq $8,%rsp
	movq %rax,%rsi
	movq 15(%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movsd %xmm0,72(%rsp)
	movq %rcx,%r14
	call __word_encodeFloat@plt
	addq $8,%rsp
	movsd 64(%rsp),%xmm1
	addss %xmm0,%xmm1
	movss %xmm1,8(%rbp)
	movq %r14,16(%rbp)
	leaq 64(%rbx),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c942
	.size _c945, .-_c945


==================== Asm code ====================
2018-03-16 15:53:56.371817254 UTC

.section .data.rel.ro
.align 8
.align 1
block_c945_info:
	.quad	_c945
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.376795763 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.encodeFloatInteger_closure
.type GHC.Integer.Type.encodeFloatInteger_closure, @object
GHC.Integer.Type.encodeFloatInteger_closure:
	.quad	GHC.Integer.Type.encodeFloatInteger_info


==================== Asm code ====================
2018-03-16 15:53:56.377836823 UTC

.section .text
.align 8
.globl GHC.Integer.Type.encodeFloatInteger_entry
.type GHC.Integer.Type.encodeFloatInteger_entry, @object
GHC.Integer.Type.encodeFloatInteger_entry:
_c953:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c954
_c955:
	leaq block_c94V_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c94V
_c94W:
	movq (%rbx),%rax
	jmp *(%rax)
_c954:
	leaq GHC.Integer.Type.encodeFloatInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.encodeFloatInteger_entry, .-GHC.Integer.Type.encodeFloatInteger_entry


==================== Asm code ====================
2018-03-16 15:53:56.378613051 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.encodeFloatInteger_info
.type GHC.Integer.Type.encodeFloatInteger_info, @object
GHC.Integer.Type.encodeFloatInteger_info:
	.quad	GHC.Integer.Type.encodeFloatInteger_entry
	.quad	0
	.quad	14
	.quad	8589934606


==================== Asm code ====================
2018-03-16 15:53:56.379587268 UTC

.section .text
.align 8
_c94V:
_c94V:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u95o
_c951:
	xorps %xmm1,%xmm1
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c95j:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_u95o:
	movq 8(%rbp),%rcx
	cmpq $2,%rax
	jb _c94Z
_c950:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c95j
_c95i:
	movq 6(%rbx),%rax
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq block_c95c_info(%rip),%rax
	movq %rax,8(%rbp)
	movq %rcx,%rsi
	leaq -7(%r12),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
_c94Z:
	movq %rcx,%rsi
	movq 7(%rbx),%r14
	xorps %xmm1,%xmm1
	addq $16,%rbp
	jmp f1_r3Bw_entry
	.size _c94V, .-_c94V


==================== Asm code ====================
2018-03-16 15:53:56.380469217 UTC

.section .data.rel.ro
.align 8
.align 1
block_c94V_info:
	.quad	_c94V
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.382085715 UTC

.section .text
.align 8
_c95c:
_c95c:
	movss _n95F(%rip),%xmm0
	xorps %xmm0,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c95c, .-_c95c
.section .rodata
.align 8
.align 4
_n95F:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:53:56.382819967 UTC

.section .data.rel.ro
.align 8
.align 1
block_c95c_info:
	.quad	_c95c
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:53:56.386087089 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.Positive_closure
.type GHC.Integer.Type.Positive_closure, @object
GHC.Integer.Type.Positive_closure:
	.quad	GHC.Integer.Type.Positive_info


==================== Asm code ====================
2018-03-16 15:53:56.3870242 UTC

.section .text
.align 8
GHC.Integer.Type.Positive_entry:
_c95P:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c95T
_c95S:
	leaq GHC.Integer.Type.Positive_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c95T:
	movq $16,904(%r13)
	leaq GHC.Integer.Type.Positive_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.Positive_entry, .-GHC.Integer.Type.Positive_entry


==================== Asm code ====================
2018-03-16 15:53:56.387777113 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Integer.Type.Positive_info:
	.quad	GHC.Integer.Type.Positive_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:56.390643005 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.Negative_closure
.type GHC.Integer.Type.Negative_closure, @object
GHC.Integer.Type.Negative_closure:
	.quad	GHC.Integer.Type.Negative_info


==================== Asm code ====================
2018-03-16 15:53:56.391564252 UTC

.section .text
.align 8
GHC.Integer.Type.Negative_entry:
_c965:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c969
_c968:
	leaq GHC.Integer.Type.Negative_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -6(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c969:
	movq $16,904(%r13)
	leaq GHC.Integer.Type.Negative_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.Negative_entry, .-GHC.Integer.Type.Negative_entry


==================== Asm code ====================
2018-03-16 15:53:56.392327701 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Integer.Type.Negative_info:
	.quad	GHC.Integer.Type.Negative_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:53:56.395984622 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.Naught_closure
.type GHC.Integer.Type.Naught_closure, @object
GHC.Integer.Type.Naught_closure:
	.quad	GHC.Integer.Type.Naught_con_info


==================== Asm code ====================
2018-03-16 15:53:56.398134267 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.Nil_closure
.type GHC.Integer.Type.Nil_closure, @object
GHC.Integer.Type.Nil_closure:
	.quad	GHC.Integer.Type.Nil_con_info


==================== Asm code ====================
2018-03-16 15:53:56.401105471 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.Cons_closure
.type GHC.Integer.Type.Cons_closure, @object
GHC.Integer.Type.Cons_closure:
	.quad	GHC.Integer.Type.Cons_info


==================== Asm code ====================
2018-03-16 15:53:56.402108141 UTC

.section .text
.align 8
GHC.Integer.Type.Cons_entry:
_c96n:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c96r
_c96q:
	leaq GHC.Integer.Type.Cons_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c96r:
	movq $24,904(%r13)
	leaq GHC.Integer.Type.Cons_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.Cons_entry, .-GHC.Integer.Type.Cons_entry


==================== Asm code ====================
2018-03-16 15:53:56.402869983 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Integer.Type.Cons_info:
	.quad	GHC.Integer.Type.Cons_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:53:56.405825505 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.Some_closure
.type GHC.Integer.Type.Some_closure, @object
GHC.Integer.Type.Some_closure:
	.quad	GHC.Integer.Type.Some_info


==================== Asm code ====================
2018-03-16 15:53:56.407166446 UTC

.section .text
.align 8
GHC.Integer.Type.Some_entry:
_c96D:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c96H
_c96G:
	leaq GHC.Integer.Type.Some_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rsi,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c96H:
	movq $24,904(%r13)
	leaq GHC.Integer.Type.Some_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Integer.Type.Some_entry, .-GHC.Integer.Type.Some_entry


==================== Asm code ====================
2018-03-16 15:53:56.407922394 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Integer.Type.Some_info:
	.quad	GHC.Integer.Type.Some_entry
	.quad	0
	.quad	14
	.quad	8589934605


==================== Asm code ====================
2018-03-16 15:53:56.409933063 UTC

.section .data
.align 8
.align 1
.globl GHC.Integer.Type.None_closure
.type GHC.Integer.Type.None_closure, @object
GHC.Integer.Type.None_closure:
	.quad	GHC.Integer.Type.None_con_info


==================== Asm code ====================
2018-03-16 15:53:56.412333796 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i96Q_str:
	.asciz "integer-simple:GHC.Integer.Type.Positive"


==================== Asm code ====================
2018-03-16 15:53:56.413129841 UTC

.section .text
.align 8
.globl GHC.Integer.Type.Positive_con_entry
.type GHC.Integer.Type.Positive_con_entry, @object
GHC.Integer.Type.Positive_con_entry:
_c96P:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.Positive_con_entry, .-GHC.Integer.Type.Positive_con_entry


==================== Asm code ====================
2018-03-16 15:53:56.413902534 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.Positive_con_info
.type GHC.Integer.Type.Positive_con_info, @object
GHC.Integer.Type.Positive_con_info:
	.quad	GHC.Integer.Type.Positive_con_entry
	.quad	1
	.quad	2
	.quad	i96Q_str


==================== Asm code ====================
2018-03-16 15:53:56.416674731 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i96X_str:
	.asciz "integer-simple:GHC.Integer.Type.Negative"


==================== Asm code ====================
2018-03-16 15:53:56.417513664 UTC

.section .text
.align 8
.globl GHC.Integer.Type.Negative_con_entry
.type GHC.Integer.Type.Negative_con_entry, @object
GHC.Integer.Type.Negative_con_entry:
_c96W:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.Negative_con_entry, .-GHC.Integer.Type.Negative_con_entry


==================== Asm code ====================
2018-03-16 15:53:56.418207236 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.Negative_con_info
.type GHC.Integer.Type.Negative_con_info, @object
GHC.Integer.Type.Negative_con_info:
	.quad	GHC.Integer.Type.Negative_con_entry
	.quad	1
	.quad	4294967298
	.quad	i96X_str


==================== Asm code ====================
2018-03-16 15:53:56.420602431 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i974_str:
	.asciz "integer-simple:GHC.Integer.Type.Naught"


==================== Asm code ====================
2018-03-16 15:53:56.421421082 UTC

.section .text
.align 8
.globl GHC.Integer.Type.Naught_con_entry
.type GHC.Integer.Type.Naught_con_entry, @object
GHC.Integer.Type.Naught_con_entry:
_c973:
	addq $3,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.Naught_con_entry, .-GHC.Integer.Type.Naught_con_entry


==================== Asm code ====================
2018-03-16 15:53:56.422106904 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.Naught_con_info
.type GHC.Integer.Type.Naught_con_info, @object
GHC.Integer.Type.Naught_con_info:
	.quad	GHC.Integer.Type.Naught_con_entry
	.quad	4294967296
	.quad	8589934595
	.quad	i974_str


==================== Asm code ====================
2018-03-16 15:53:56.424420119 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i97b_str:
	.asciz "integer-simple:GHC.Integer.Type.Nil"


==================== Asm code ====================
2018-03-16 15:53:56.425182733 UTC

.section .text
.align 8
.globl GHC.Integer.Type.Nil_con_entry
.type GHC.Integer.Type.Nil_con_entry, @object
GHC.Integer.Type.Nil_con_entry:
_c97a:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.Nil_con_entry, .-GHC.Integer.Type.Nil_con_entry


==================== Asm code ====================
2018-03-16 15:53:56.425982299 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.Nil_con_info
.type GHC.Integer.Type.Nil_con_info, @object
GHC.Integer.Type.Nil_con_info:
	.quad	GHC.Integer.Type.Nil_con_entry
	.quad	4294967296
	.quad	3
	.quad	i97b_str


==================== Asm code ====================
2018-03-16 15:53:56.428666836 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i97i_str:
	.asciz "integer-simple:GHC.Integer.Type.Cons"


==================== Asm code ====================
2018-03-16 15:53:56.429406889 UTC

.section .text
.align 8
.globl GHC.Integer.Type.Cons_con_entry
.type GHC.Integer.Type.Cons_con_entry, @object
GHC.Integer.Type.Cons_con_entry:
_c97h:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.Cons_con_entry, .-GHC.Integer.Type.Cons_con_entry


==================== Asm code ====================
2018-03-16 15:53:56.430092388 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.Cons_con_info
.type GHC.Integer.Type.Cons_con_info, @object
GHC.Integer.Type.Cons_con_info:
	.quad	GHC.Integer.Type.Cons_con_entry
	.quad	2
	.quad	4294967300
	.quad	i97i_str


==================== Asm code ====================
2018-03-16 15:53:56.432409208 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i97p_str:
	.asciz "integer-simple:GHC.Integer.Type.Some"


==================== Asm code ====================
2018-03-16 15:53:56.433126002 UTC

.section .text
.align 8
.globl GHC.Integer.Type.Some_con_entry
.type GHC.Integer.Type.Some_con_entry, @object
GHC.Integer.Type.Some_con_entry:
_c97o:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.Some_con_entry, .-GHC.Integer.Type.Some_con_entry


==================== Asm code ====================
2018-03-16 15:53:56.433875449 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.Some_con_info
.type GHC.Integer.Type.Some_con_info, @object
GHC.Integer.Type.Some_con_info:
	.quad	GHC.Integer.Type.Some_con_entry
	.quad	4294967297
	.quad	5
	.quad	i97p_str


==================== Asm code ====================
2018-03-16 15:53:56.436175332 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i97w_str:
	.asciz "integer-simple:GHC.Integer.Type.None"


==================== Asm code ====================
2018-03-16 15:53:56.437325524 UTC

.section .text
.align 8
.globl GHC.Integer.Type.None_con_entry
.type GHC.Integer.Type.None_con_entry, @object
GHC.Integer.Type.None_con_entry:
_c97v:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Integer.Type.None_con_entry, .-GHC.Integer.Type.None_con_entry


==================== Asm code ====================
2018-03-16 15:53:56.438036275 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Integer.Type.None_con_info
.type GHC.Integer.Type.None_con_info, @object
GHC.Integer.Type.None_con_info:
	.quad	GHC.Integer.Type.None_con_entry
	.quad	4294967296
	.quad	4294967299
	.quad	i97w_str


==================== Asm code ====================
2018-03-16 15:53:56.440230676 UTC

.section .data.rel.ro
.align 8
.align 1
S7IQ_srt:
	.quad	GHC.Integer.Type.plusPositive_addWithCarry_closure
	.quad	lvl_r3Bo_closure
	.quad	GHC.Integer.Type.timesDigit_closure
	.quad	GHC.Integer.Type.timesPositive_closure
	.quad	GHC.Integer.Type.timesInteger_closure
	.quad	GHC.Integer.Type.plusInteger_closure
	.quad	GHC.Integer.Type.minusInteger_closure
	.quad	GHC.Integer.Type.decodeDoubleInteger_closure
	.quad	GHC.Integer.Type.complementInteger_closure
	.quad	GHC.Integer.Type.shiftRInteger_closure
	.quad	GHC.Integer.Type.divModInteger_closure
	.quad	GHC.Integer.Type.divInteger_closure
	.quad	GHC.Integer.Type.modInteger_closure

